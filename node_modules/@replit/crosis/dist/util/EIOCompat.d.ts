export declare function splitHref(href: string): {
    uri: string;
    path: string;
};
export declare class EIOCompat implements WebSocket {
    onclose: ((ev: CloseEvent) => unknown) | null;
    onerror: ((ev: Event) => unknown) | null;
    onmessage: ((ev: MessageEvent) => unknown) | null;
    onopen: ((ev: Event) => unknown) | null;
    url: string;
    extensions: string;
    protocol: string;
    bufferedAmount: number;
    readyState: number;
    incomingSequence: number;
    outOfOrderQueue: {
        [sequence: number]: ArrayBuffer;
    };
    outgoingSequence: number;
    static readonly CLOSED = 3;
    static readonly CLOSING = 2;
    static readonly OPEN = 1;
    static readonly CONNECTING = 0;
    readonly CLOSED = 3;
    readonly CLOSING = 2;
    readonly OPEN = 1;
    readonly CONNECTING = 0;
    private eioSocket;
    constructor(url: string, protocols?: string | string[] | undefined);
    setReadyState(): void;
    send(buffer: ArrayBuffer): void;
    close(): void;
    addEventListener(): boolean;
    removeEventListener(): void;
    dispatchEvent(): boolean;
    set binaryType(value: BinaryType);
    get binaryType(): BinaryType;
}
