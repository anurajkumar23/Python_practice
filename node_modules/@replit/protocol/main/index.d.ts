import * as $protobuf from "protobufjs";
/** Namespace replit. */
export namespace replit {

    /** Namespace goval. */
    namespace goval {

        /** Namespace api. */
        namespace api {

            /** Properties of a Command. */
            interface ICommand {

                /** Command channel */
                channel?: (number|null);

                /** Command session */
                session?: (number|null);

                /** Command openChan */
                openChan?: (replit.goval.api.OpenChannel|replit.goval.api.IOpenChannel|null);

                /** Command openChanRes */
                openChanRes?: (replit.goval.api.OpenChannelRes|replit.goval.api.IOpenChannelRes|null);

                /** Command closeChan */
                closeChan?: (replit.goval.api.CloseChannel|replit.goval.api.ICloseChannel|null);

                /** Command closeChanRes */
                closeChanRes?: (replit.goval.api.CloseChannelRes|replit.goval.api.ICloseChannelRes|null);

                /** Command containerState */
                containerState?: (replit.goval.api.ContainerState|replit.goval.api.IContainerState|null);

                /** Command portOpen */
                portOpen?: (replit.goval.api.PortOpen|replit.goval.api.IPortOpen|null);

                /** Command portClose */
                portClose?: (replit.goval.api.PortClose|replit.goval.api.IPortClose|null);

                /** Command toast */
                toast?: (replit.goval.api.Toast|replit.goval.api.IToast|null);

                /** Command protocolError */
                protocolError?: (replit.goval.api.ProtocolError|replit.goval.api.IProtocolError|null);

                /** Command redirect */
                redirect?: (replit.goval.api.Redirect|replit.goval.api.IRedirect|null);

                /** Command alwaysOn */
                alwaysOn?: (replit.goval.api.AlwaysOn|replit.goval.api.IAlwaysOn|null);

                /** Command runMain */
                runMain?: (replit.goval.api.RunMain|replit.goval.api.IRunMain|null);

                /** Command clear */
                clear?: (replit.goval.api.Clear|replit.goval.api.IClear|null);

                /** Command eval */
                "eval"?: (string|null);

                /** Command result */
                result?: (string|null);

                /** Command input */
                input?: (string|null);

                /** Command output */
                output?: (string|null);

                /** Command error */
                error?: (string|null);

                /** Command stderr */
                stderr?: (string|null);

                /** Command log */
                log?: (string|null);

                /** Command record */
                record?: (string|null);

                /** Command saneTerm */
                saneTerm?: (replit.goval.api.SaneTerm|replit.goval.api.ISaneTerm|null);

                /** Command resizeTerm */
                resizeTerm?: (replit.goval.api.ResizeTerm|replit.goval.api.IResizeTerm|null);

                /** Command state */
                state?: (replit.goval.api.State|null);

                /** Command ok */
                ok?: (replit.goval.api.OK|replit.goval.api.IOK|null);

                /** Command persist */
                persist?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command persistMirror */
                persistMirror?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command write */
                write?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command remove */
                remove?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command move */
                move?: (replit.goval.api.Move|replit.goval.api.IMove|null);

                /** Command tryRemove */
                tryRemove?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command mkdir */
                mkdir?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command stat */
                stat?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command statRes */
                statRes?: (replit.goval.api.StatResult|replit.goval.api.IStatResult|null);

                /** Command transferStart */
                transferStart?: (replit.goval.api.TransferStart|replit.goval.api.ITransferStart|null);

                /** Command transferChunk */
                transferChunk?: (replit.goval.api.TransferChunk|replit.goval.api.ITransferChunk|null);

                /** Command transferComplete */
                transferComplete?: (replit.goval.api.TransferComplete|replit.goval.api.ITransferComplete|null);

                /** Command transferCancel */
                transferCancel?: (replit.goval.api.Transfer|replit.goval.api.ITransfer|null);

                /** Command transfer */
                transfer?: (replit.goval.api.Transfer|replit.goval.api.ITransfer|null);

                /** Command read */
                read?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command readdir */
                readdir?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command files */
                files?: (replit.goval.api.Files|replit.goval.api.IFiles|null);

                /** Command file */
                file?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** Command checkChanges */
                checkChanges?: (replit.goval.api.CheckChanges|replit.goval.api.ICheckChanges|null);

                /** Command changedFiles */
                changedFiles?: (replit.goval.api.Files|replit.goval.api.IFiles|null);

                /** Command lintResults */
                lintResults?: (replit.goval.api.LintResults|replit.goval.api.ILintResults|null);

                /** Command runContainedTest */
                runContainedTest?: (replit.goval.api.ContainedTest|replit.goval.api.IContainedTest|null);

                /** Command testResult */
                testResult?: (replit.goval.api.TestResult|replit.goval.api.ITestResult|null);

                /** Command debuggerStart */
                debuggerStart?: (string|null);

                /** Command debuggerStep */
                debuggerStep?: (replit.goval.api.RunMain|replit.goval.api.IRunMain|null);

                /** Command debuggerStatus */
                debuggerStatus?: (replit.goval.api.DebugStatus|replit.goval.api.IDebugStatus|null);

                /** Command ensurePackages */
                ensurePackages?: (replit.goval.api.EnsurePackages|replit.goval.api.IEnsurePackages|null);

                /** Command ping */
                ping?: (replit.goval.api.Ping|replit.goval.api.IPing|null);

                /** Command pong */
                pong?: (replit.goval.api.Pong|replit.goval.api.IPong|null);

                /** Command hello */
                hello?: (replit.goval.api.Hello|replit.goval.api.IHello|null);

                /** Command goodbye */
                goodbye?: (replit.goval.api.Goodbye|replit.goval.api.IGoodbye|null);

                /** Command proxyGoingAway */
                proxyGoingAway?: (replit.goval.api.ProxyGoingAway|replit.goval.api.IProxyGoingAway|null);

                /** Command hint */
                hint?: (replit.goval.api.Hint|replit.goval.api.IHint|null);

                /** Command connect */
                connect?: (replit.goval.api.Connect|replit.goval.api.IConnect|null);

                /** Command send */
                send?: (replit.goval.api.Send|replit.goval.api.ISend|null);

                /** Command recv */
                recv?: (replit.goval.api.Recv|replit.goval.api.IRecv|null);

                /** Command disconnect */
                disconnect?: (replit.goval.api.Disconnect|replit.goval.api.IDisconnect|null);

                /** Command fileAuthReq */
                fileAuthReq?: (replit.goval.api.FileAuthReq|replit.goval.api.IFileAuthReq|null);

                /** Command fileAuthRes */
                fileAuthRes?: (replit.goval.api.FileAuthRes|replit.goval.api.IFileAuthRes|null);

                /** Command mutliFileAuthRes */
                mutliFileAuthRes?: (replit.goval.api.MultiFileAuthRes|replit.goval.api.IMultiFileAuthRes|null);

                /** Command listObjects */
                listObjects?: (replit.goval.api.ListObjects|replit.goval.api.IListObjects|null);

                /** Command listObjectsResp */
                listObjectsResp?: (replit.goval.api.ListObjectsResp|replit.goval.api.IListObjectsResp|null);

                /** Command ot */
                ot?: (replit.goval.api.OTPacket|replit.goval.api.IOTPacket|null);

                /** Command otstatus */
                otstatus?: (replit.goval.api.OTStatus|replit.goval.api.IOTStatus|null);

                /** Command otLinkFile */
                otLinkFile?: (replit.goval.api.OTLinkFile|replit.goval.api.IOTLinkFile|null);

                /** Command otLinkFileResponse */
                otLinkFileResponse?: (replit.goval.api.OTLinkFileResponse|replit.goval.api.IOTLinkFileResponse|null);

                /** Command otNewCursor */
                otNewCursor?: (replit.goval.api.OTCursor|replit.goval.api.IOTCursor|null);

                /** Command otDeleteCursor */
                otDeleteCursor?: (replit.goval.api.OTCursor|replit.goval.api.IOTCursor|null);

                /** Command otFetchRequest */
                otFetchRequest?: (replit.goval.api.OTFetchRequest|replit.goval.api.IOTFetchRequest|null);

                /** Command otFetchResponse */
                otFetchResponse?: (replit.goval.api.OTFetchResponse|replit.goval.api.IOTFetchResponse|null);

                /** Command otTransformSelectionRequest */
                otTransformSelectionRequest?: (replit.goval.api.OTTransformSelectionRequest|replit.goval.api.IOTTransformSelectionRequest|null);

                /** Command otTransformSelectionResponse */
                otTransformSelectionResponse?: (replit.goval.api.OTTransformSelectionResponse|replit.goval.api.IOTTransformSelectionResponse|null);

                /** Command flush */
                flush?: (replit.goval.api.Flush|replit.goval.api.IFlush|null);

                /** Command debug */
                debug?: (replit.goval.api.Debug|replit.goval.api.IDebug|null);

                /** Command startVCR */
                startVCR?: (replit.goval.api.StartVCR|replit.goval.api.IStartVCR|null);

                /** Command readVCR */
                readVCR?: (replit.goval.api.ReadVCR|replit.goval.api.IReadVCR|null);

                /** Command VCRLog */
                VCRLog?: (replit.goval.api.VCRLog|replit.goval.api.IVCRLog|null);

                /** Command auth */
                auth?: (replit.goval.api.Auth|replit.goval.api.IAuth|null);

                /** Command execInfo */
                execInfo?: (replit.goval.api.ExecInfo|replit.goval.api.IExecInfo|null);

                /** Command subscribeFile */
                subscribeFile?: (replit.goval.api.SubscribeFile|replit.goval.api.ISubscribeFile|null);

                /** Command fileEvent */
                fileEvent?: (replit.goval.api.FileEvent|replit.goval.api.IFileEvent|null);

                /** Command roster */
                roster?: (replit.goval.api.Roster|replit.goval.api.IRoster|null);

                /** Command join */
                join?: (replit.goval.api.User|replit.goval.api.IUser|null);

                /** Command part */
                part?: (replit.goval.api.User|replit.goval.api.IUser|null);

                /** Command openFile */
                openFile?: (replit.goval.api.OpenFile|replit.goval.api.IOpenFile|null);

                /** Command fileOpened */
                fileOpened?: (replit.goval.api.FileOpened|replit.goval.api.IFileOpened|null);

                /** Command followUser */
                followUser?: (replit.goval.api.FollowUser|replit.goval.api.IFollowUser|null);

                /** Command unfollowUser */
                unfollowUser?: (replit.goval.api.UnfollowUser|replit.goval.api.IUnfollowUser|null);

                /** Command updateSessionTimestamp */
                updateSessionTimestamp?: (replit.goval.api.UpdateSessionTimestamp|replit.goval.api.IUpdateSessionTimestamp|null);

                /** Command sessionTimestampUpdated */
                sessionTimestampUpdated?: (replit.goval.api.SessionTimestampUpdated|replit.goval.api.ISessionTimestampUpdated|null);

                /** Command exec */
                exec?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** Command packageSearch */
                packageSearch?: (replit.goval.api.PackageSearch|replit.goval.api.IPackageSearch|null);

                /** Command packageSearchResp */
                packageSearchResp?: (replit.goval.api.PackageSearchResp|replit.goval.api.IPackageSearchResp|null);

                /** Command packageInfo */
                packageInfo?: (replit.goval.api.PackageInfo|replit.goval.api.IPackageInfo|null);

                /** Command packageInfoResp */
                packageInfoResp?: (replit.goval.api.PackageInfoResp|replit.goval.api.IPackageInfoResp|null);

                /** Command packageAdd */
                packageAdd?: (replit.goval.api.PackageAdd|replit.goval.api.IPackageAdd|null);

                /** Command packageRemove */
                packageRemove?: (replit.goval.api.PackageRemove|replit.goval.api.IPackageRemove|null);

                /** Command packageInstall */
                packageInstall?: (replit.goval.api.PackageInstall|replit.goval.api.IPackageInstall|null);

                /** Command packageListSpecfile */
                packageListSpecfile?: (replit.goval.api.PackageListSpecfile|replit.goval.api.IPackageListSpecfile|null);

                /** Command packageListSpecfileResp */
                packageListSpecfileResp?: (replit.goval.api.PackageListSpecfileResp|replit.goval.api.IPackageListSpecfileResp|null);

                /** Command packageCacheSave */
                packageCacheSave?: (replit.goval.api.PackageCacheSave|replit.goval.api.IPackageCacheSave|null);

                /** Command chatMessage */
                chatMessage?: (replit.goval.api.ChatMessage|replit.goval.api.IChatMessage|null);

                /** Command chatTyping */
                chatTyping?: (replit.goval.api.ChatTyping|replit.goval.api.IChatTyping|null);

                /** Command chatScrollback */
                chatScrollback?: (replit.goval.api.ChatScrollback|replit.goval.api.IChatScrollback|null);

                /** Command fsSnapshot */
                fsSnapshot?: (replit.goval.api.FSSnapshot|replit.goval.api.IFSSnapshot|null);

                /** Command fsSnapshotEvent */
                fsSnapshotEvent?: (replit.goval.api.FSSnapshotEvent|replit.goval.api.IFSSnapshotEvent|null);

                /** Command fsTakeLock */
                fsTakeLock?: (replit.goval.api.FSLock|replit.goval.api.IFSLock|null);

                /** Command fsReleaseLock */
                fsReleaseLock?: (replit.goval.api.FSLock|replit.goval.api.IFSLock|null);

                /** Command hasCap */
                hasCap?: (boolean|null);

                /** Command snapshotEvent */
                snapshotEvent?: (replit.goval.api.SnapshotEvent|replit.goval.api.ISnapshotEvent|null);

                /** Command NoninteractiveFSChangeEvent */
                NoninteractiveFSChangeEvent?: (boolean|null);

                /** Command pid1Config */
                pid1Config?: (replit.goval.api.Pid1Config|replit.goval.api.IPid1Config|null);

                /** Command metrics */
                metrics?: (replit.goval.api.Metrics|replit.goval.api.IMetrics|null);

                /** Command bootStatus */
                bootStatus?: (replit.goval.api.BootStatus|replit.goval.api.IBootStatus|null);

                /** Command readMetaRequest */
                readMetaRequest?: (replit.goval.api.ReadMetaRequest|replit.goval.api.IReadMetaRequest|null);

                /** Command readMetaResponse */
                readMetaResponse?: (replit.goval.api.ReadMetaResponse|replit.goval.api.IReadMetaResponse|null);

                /** Command writeMetaRequest */
                writeMetaRequest?: (replit.goval.api.WriteMetaRequest|replit.goval.api.IWriteMetaRequest|null);

                /** Command writeMetaResponse */
                writeMetaResponse?: (replit.goval.api.WriteMetaResponse|replit.goval.api.IWriteMetaResponse|null);

                /** Command appendMetaRequest */
                appendMetaRequest?: (replit.goval.api.AppendMetaRequest|replit.goval.api.IAppendMetaRequest|null);

                /** Command appendMetaResponse */
                appendMetaResponse?: (replit.goval.api.AppendMetaResponse|replit.goval.api.IAppendMetaResponse|null);

                /** Command audio */
                audio?: (replit.goval.api.Audio|replit.goval.api.IAudio|null);

                /** Command pprofRequest */
                pprofRequest?: (replit.goval.api.PprofRequest|replit.goval.api.IPprofRequest|null);

                /** Command pprofResponse */
                pprofResponse?: (replit.goval.api.PprofResponse|replit.goval.api.IPprofResponse|null);

                /** Command audio2 */
                audio2?: (replit.goval.api.Audio2|replit.goval.api.IAudio2|null);

                /** Command PTYConfig */
                PTYConfig?: (replit.goval.api.PTYConfig|replit.goval.api.IPTYConfig|null);

                /** Command debugMain */
                debugMain?: (replit.goval.api.DebugMain|replit.goval.api.IDebugMain|null);

                /** Command debugState */
                debugState?: (replit.goval.api.DebugState|replit.goval.api.IDebugState|null);

                /** Command debugMainReply */
                debugMainReply?: (replit.goval.api.DebugMainReply|replit.goval.api.IDebugMainReply|null);

                /** Command debugInput */
                debugInput?: (replit.goval.api.DebugInput|replit.goval.api.IDebugInput|null);

                /** Command debugOutput */
                debugOutput?: (replit.goval.api.DebugOutput|replit.goval.api.IDebugOutput|null);

                /** Command debugStop */
                debugStop?: (replit.goval.api.DebugStop|replit.goval.api.IDebugStop|null);

                /** Command debugLeave */
                debugLeave?: (replit.goval.api.DebugLeave|replit.goval.api.IDebugLeave|null);

                /** Command debugSessions */
                debugSessions?: (replit.goval.api.DebugSessions|replit.goval.api.IDebugSessions|null);

                /** Command debugAddBreakpointRequest */
                debugAddBreakpointRequest?: (replit.goval.api.DebugAddBreakpointRequest|replit.goval.api.IDebugAddBreakpointRequest|null);

                /** Command debugUpdateBreakpointRequest */
                debugUpdateBreakpointRequest?: (replit.goval.api.DebugUpdateBreakpointRequest|replit.goval.api.IDebugUpdateBreakpointRequest|null);

                /** Command debugRemoveBreakpointRequest */
                debugRemoveBreakpointRequest?: (replit.goval.api.DebugRemoveBreakpointRequest|replit.goval.api.IDebugRemoveBreakpointRequest|null);

                /** Command debugBreakpointEvent */
                debugBreakpointEvent?: (replit.goval.api.DebugBreakpointEvent|replit.goval.api.IDebugBreakpointEvent|null);

                /** Command dotReplitGetRequest */
                dotReplitGetRequest?: (replit.goval.api.DotReplitGetRequest|replit.goval.api.IDotReplitGetRequest|null);

                /** Command dotReplitGetResponse */
                dotReplitGetResponse?: (replit.goval.api.DotReplitGetResponse|replit.goval.api.IDotReplitGetResponse|null);

                /** Command runConfigGetRequest */
                runConfigGetRequest?: (replit.goval.api.RunConfigGetRequest|replit.goval.api.IRunConfigGetRequest|null);

                /** Command runConfigGetResponse */
                runConfigGetResponse?: (replit.goval.api.RunConfigGetResponse|replit.goval.api.IRunConfigGetResponse|null);

                /** Command dotReplitUpdateRequest */
                dotReplitUpdateRequest?: (replit.goval.api.DotReplitUpdateRequest|replit.goval.api.IDotReplitUpdateRequest|null);

                /** Command dotReplitUpdateResponse */
                dotReplitUpdateResponse?: (replit.goval.api.DotReplitUpdateResponse|replit.goval.api.IDotReplitUpdateResponse|null);

                /** Command startLSP */
                startLSP?: (replit.goval.api.StartLSP|replit.goval.api.IStartLSP|null);

                /** Command firewallDenied */
                firewallDenied?: (replit.goval.api.FirewallDenied|replit.goval.api.IFirewallDenied|null);

                /** Command nixPackageAddRequest */
                nixPackageAddRequest?: (replit.goval.api.NixPackageAddRequest|replit.goval.api.INixPackageAddRequest|null);

                /** Command nixPackageAddResponse */
                nixPackageAddResponse?: (replit.goval.api.NixPackageAddResponse|replit.goval.api.INixPackageAddResponse|null);

                /** Command nixPackageRemoveRequest */
                nixPackageRemoveRequest?: (replit.goval.api.NixPackageRemoveRequest|replit.goval.api.INixPackageRemoveRequest|null);

                /** Command nixPackageRemoveResponse */
                nixPackageRemoveResponse?: (replit.goval.api.NixPackageRemoveResponse|replit.goval.api.INixPackageRemoveResponse|null);

                /** Command nixPackageListRequest */
                nixPackageListRequest?: (replit.goval.api.NixPackageListRequest|replit.goval.api.INixPackageListRequest|null);

                /** Command nixPackageListResponse */
                nixPackageListResponse?: (replit.goval.api.NixPackageListResponse|replit.goval.api.INixPackageListResponse|null);

                /** Command nixChannelsRequest */
                nixChannelsRequest?: (replit.goval.api.NixChannelsRequest|replit.goval.api.INixChannelsRequest|null);

                /** Command nixChannelsResponse */
                nixChannelsResponse?: (replit.goval.api.NixChannelsResponse|replit.goval.api.INixChannelsResponse|null);

                /** Command nixChannelLatestStableRequest */
                nixChannelLatestStableRequest?: (replit.goval.api.NixChannelLatestStableRequest|replit.goval.api.INixChannelLatestStableRequest|null);

                /** Command nixChannelLatestStableResponse */
                nixChannelLatestStableResponse?: (replit.goval.api.NixChannelLatestStableResponse|replit.goval.api.INixChannelLatestStableResponse|null);

                /** Command nixPackageSearchRequest */
                nixPackageSearchRequest?: (replit.goval.api.NixPackageSearchRequest|replit.goval.api.INixPackageSearchRequest|null);

                /** Command nixPackageSearchResponse */
                nixPackageSearchResponse?: (replit.goval.api.NixPackageSearchResponse|replit.goval.api.INixPackageSearchResponse|null);

                /** Command userEvent */
                userEvent?: (replit.goval.api.UserEvent|replit.goval.api.IUserEvent|null);

                /** Command replspaceApiOpenFile */
                replspaceApiOpenFile?: (replit.goval.api.ReplspaceApiOpenFile|replit.goval.api.IReplspaceApiOpenFile|null);

                /** Command replspaceApiCloseFile */
                replspaceApiCloseFile?: (replit.goval.api.ReplspaceApiCloseFile|replit.goval.api.IReplspaceApiCloseFile|null);

                /** Command replspaceApiGetGitHubToken */
                replspaceApiGetGitHubToken?: (replit.goval.api.ReplspaceApiGetGitHubToken|replit.goval.api.IReplspaceApiGetGitHubToken|null);

                /** Command replspaceApiGitHubToken */
                replspaceApiGitHubToken?: (replit.goval.api.ReplspaceApiGitHubToken|replit.goval.api.IReplspaceApiGitHubToken|null);

                /** Command ref */
                ref?: (string|null);

                /** Command traceInfo */
                traceInfo?: ({ [k: string]: string }|null);
            }

            /** Represents a Command. */
            class Command {

                /**
                 * Constructs a new Command.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ICommand);

                /** Command channel. */
                public channel: number;

                /** Command session. */
                public session: number;

                /** Command openChan. */
                public openChan?: (replit.goval.api.OpenChannel|null);

                /** Command openChanRes. */
                public openChanRes?: (replit.goval.api.OpenChannelRes|null);

                /** Command closeChan. */
                public closeChan?: (replit.goval.api.CloseChannel|null);

                /** Command closeChanRes. */
                public closeChanRes?: (replit.goval.api.CloseChannelRes|null);

                /** Command containerState. */
                public containerState?: (replit.goval.api.ContainerState|null);

                /** Command portOpen. */
                public portOpen?: (replit.goval.api.PortOpen|null);

                /** Command portClose. */
                public portClose?: (replit.goval.api.PortClose|null);

                /** Command toast. */
                public toast?: (replit.goval.api.Toast|null);

                /** Command protocolError. */
                public protocolError?: (replit.goval.api.ProtocolError|null);

                /** Command redirect. */
                public redirect?: (replit.goval.api.Redirect|null);

                /** Command alwaysOn. */
                public alwaysOn?: (replit.goval.api.AlwaysOn|null);

                /** Command runMain. */
                public runMain?: (replit.goval.api.RunMain|null);

                /** Command clear. */
                public clear?: (replit.goval.api.Clear|null);

                /** Command eval. */
                public eval?: (string|null);

                /** Command result. */
                public result?: (string|null);

                /** Command input. */
                public input?: (string|null);

                /** Command output. */
                public output?: (string|null);

                /** Command error. */
                public error?: (string|null);

                /** Command stderr. */
                public stderr?: (string|null);

                /** Command log. */
                public log?: (string|null);

                /** Command record. */
                public record?: (string|null);

                /** Command saneTerm. */
                public saneTerm?: (replit.goval.api.SaneTerm|null);

                /** Command resizeTerm. */
                public resizeTerm?: (replit.goval.api.ResizeTerm|null);

                /** Command state. */
                public state?: (replit.goval.api.State|null);

                /** Command ok. */
                public ok?: (replit.goval.api.OK|null);

                /** Command persist. */
                public persist?: (replit.goval.api.File|null);

                /** Command persistMirror. */
                public persistMirror?: (replit.goval.api.File|null);

                /** Command write. */
                public write?: (replit.goval.api.File|null);

                /** Command remove. */
                public remove?: (replit.goval.api.File|null);

                /** Command move. */
                public move?: (replit.goval.api.Move|null);

                /** Command tryRemove. */
                public tryRemove?: (replit.goval.api.File|null);

                /** Command mkdir. */
                public mkdir?: (replit.goval.api.File|null);

                /** Command stat. */
                public stat?: (replit.goval.api.File|null);

                /** Command statRes. */
                public statRes?: (replit.goval.api.StatResult|null);

                /** Command transferStart. */
                public transferStart?: (replit.goval.api.TransferStart|null);

                /** Command transferChunk. */
                public transferChunk?: (replit.goval.api.TransferChunk|null);

                /** Command transferComplete. */
                public transferComplete?: (replit.goval.api.TransferComplete|null);

                /** Command transferCancel. */
                public transferCancel?: (replit.goval.api.Transfer|null);

                /** Command transfer. */
                public transfer?: (replit.goval.api.Transfer|null);

                /** Command read. */
                public read?: (replit.goval.api.File|null);

                /** Command readdir. */
                public readdir?: (replit.goval.api.File|null);

                /** Command files. */
                public files?: (replit.goval.api.Files|null);

                /** Command file. */
                public file?: (replit.goval.api.File|null);

                /** Command checkChanges. */
                public checkChanges?: (replit.goval.api.CheckChanges|null);

                /** Command changedFiles. */
                public changedFiles?: (replit.goval.api.Files|null);

                /** Command lintResults. */
                public lintResults?: (replit.goval.api.LintResults|null);

                /** Command runContainedTest. */
                public runContainedTest?: (replit.goval.api.ContainedTest|null);

                /** Command testResult. */
                public testResult?: (replit.goval.api.TestResult|null);

                /** Command debuggerStart. */
                public debuggerStart?: (string|null);

                /** Command debuggerStep. */
                public debuggerStep?: (replit.goval.api.RunMain|null);

                /** Command debuggerStatus. */
                public debuggerStatus?: (replit.goval.api.DebugStatus|null);

                /** Command ensurePackages. */
                public ensurePackages?: (replit.goval.api.EnsurePackages|null);

                /** Command ping. */
                public ping?: (replit.goval.api.Ping|null);

                /** Command pong. */
                public pong?: (replit.goval.api.Pong|null);

                /** Command hello. */
                public hello?: (replit.goval.api.Hello|null);

                /** Command goodbye. */
                public goodbye?: (replit.goval.api.Goodbye|null);

                /** Command proxyGoingAway. */
                public proxyGoingAway?: (replit.goval.api.ProxyGoingAway|null);

                /** Command hint. */
                public hint?: (replit.goval.api.Hint|null);

                /** Command connect. */
                public connect?: (replit.goval.api.Connect|null);

                /** Command send. */
                public send?: (replit.goval.api.Send|null);

                /** Command recv. */
                public recv?: (replit.goval.api.Recv|null);

                /** Command disconnect. */
                public disconnect?: (replit.goval.api.Disconnect|null);

                /** Command fileAuthReq. */
                public fileAuthReq?: (replit.goval.api.FileAuthReq|null);

                /** Command fileAuthRes. */
                public fileAuthRes?: (replit.goval.api.FileAuthRes|null);

                /** Command mutliFileAuthRes. */
                public mutliFileAuthRes?: (replit.goval.api.MultiFileAuthRes|null);

                /** Command listObjects. */
                public listObjects?: (replit.goval.api.ListObjects|null);

                /** Command listObjectsResp. */
                public listObjectsResp?: (replit.goval.api.ListObjectsResp|null);

                /** Command ot. */
                public ot?: (replit.goval.api.OTPacket|null);

                /** Command otstatus. */
                public otstatus?: (replit.goval.api.OTStatus|null);

                /** Command otLinkFile. */
                public otLinkFile?: (replit.goval.api.OTLinkFile|null);

                /** Command otLinkFileResponse. */
                public otLinkFileResponse?: (replit.goval.api.OTLinkFileResponse|null);

                /** Command otNewCursor. */
                public otNewCursor?: (replit.goval.api.OTCursor|null);

                /** Command otDeleteCursor. */
                public otDeleteCursor?: (replit.goval.api.OTCursor|null);

                /** Command otFetchRequest. */
                public otFetchRequest?: (replit.goval.api.OTFetchRequest|null);

                /** Command otFetchResponse. */
                public otFetchResponse?: (replit.goval.api.OTFetchResponse|null);

                /** Command otTransformSelectionRequest. */
                public otTransformSelectionRequest?: (replit.goval.api.OTTransformSelectionRequest|null);

                /** Command otTransformSelectionResponse. */
                public otTransformSelectionResponse?: (replit.goval.api.OTTransformSelectionResponse|null);

                /** Command flush. */
                public flush?: (replit.goval.api.Flush|null);

                /** Command debug. */
                public debug?: (replit.goval.api.Debug|null);

                /** Command startVCR. */
                public startVCR?: (replit.goval.api.StartVCR|null);

                /** Command readVCR. */
                public readVCR?: (replit.goval.api.ReadVCR|null);

                /** Command VCRLog. */
                public VCRLog?: (replit.goval.api.VCRLog|null);

                /** Command auth. */
                public auth?: (replit.goval.api.Auth|null);

                /** Command execInfo. */
                public execInfo?: (replit.goval.api.ExecInfo|null);

                /** Command subscribeFile. */
                public subscribeFile?: (replit.goval.api.SubscribeFile|null);

                /** Command fileEvent. */
                public fileEvent?: (replit.goval.api.FileEvent|null);

                /** Command roster. */
                public roster?: (replit.goval.api.Roster|null);

                /** Command join. */
                public join?: (replit.goval.api.User|null);

                /** Command part. */
                public part?: (replit.goval.api.User|null);

                /** Command openFile. */
                public openFile?: (replit.goval.api.OpenFile|null);

                /** Command fileOpened. */
                public fileOpened?: (replit.goval.api.FileOpened|null);

                /** Command followUser. */
                public followUser?: (replit.goval.api.FollowUser|null);

                /** Command unfollowUser. */
                public unfollowUser?: (replit.goval.api.UnfollowUser|null);

                /** Command updateSessionTimestamp. */
                public updateSessionTimestamp?: (replit.goval.api.UpdateSessionTimestamp|null);

                /** Command sessionTimestampUpdated. */
                public sessionTimestampUpdated?: (replit.goval.api.SessionTimestampUpdated|null);

                /** Command exec. */
                public exec?: (replit.goval.api.Exec|null);

                /** Command packageSearch. */
                public packageSearch?: (replit.goval.api.PackageSearch|null);

                /** Command packageSearchResp. */
                public packageSearchResp?: (replit.goval.api.PackageSearchResp|null);

                /** Command packageInfo. */
                public packageInfo?: (replit.goval.api.PackageInfo|null);

                /** Command packageInfoResp. */
                public packageInfoResp?: (replit.goval.api.PackageInfoResp|null);

                /** Command packageAdd. */
                public packageAdd?: (replit.goval.api.PackageAdd|null);

                /** Command packageRemove. */
                public packageRemove?: (replit.goval.api.PackageRemove|null);

                /** Command packageInstall. */
                public packageInstall?: (replit.goval.api.PackageInstall|null);

                /** Command packageListSpecfile. */
                public packageListSpecfile?: (replit.goval.api.PackageListSpecfile|null);

                /** Command packageListSpecfileResp. */
                public packageListSpecfileResp?: (replit.goval.api.PackageListSpecfileResp|null);

                /** Command packageCacheSave. */
                public packageCacheSave?: (replit.goval.api.PackageCacheSave|null);

                /** Command chatMessage. */
                public chatMessage?: (replit.goval.api.ChatMessage|null);

                /** Command chatTyping. */
                public chatTyping?: (replit.goval.api.ChatTyping|null);

                /** Command chatScrollback. */
                public chatScrollback?: (replit.goval.api.ChatScrollback|null);

                /** Command fsSnapshot. */
                public fsSnapshot?: (replit.goval.api.FSSnapshot|null);

                /** Command fsSnapshotEvent. */
                public fsSnapshotEvent?: (replit.goval.api.FSSnapshotEvent|null);

                /** Command fsTakeLock. */
                public fsTakeLock?: (replit.goval.api.FSLock|null);

                /** Command fsReleaseLock. */
                public fsReleaseLock?: (replit.goval.api.FSLock|null);

                /** Command hasCap. */
                public hasCap?: (boolean|null);

                /** Command snapshotEvent. */
                public snapshotEvent?: (replit.goval.api.SnapshotEvent|null);

                /** Command NoninteractiveFSChangeEvent. */
                public NoninteractiveFSChangeEvent?: (boolean|null);

                /** Command pid1Config. */
                public pid1Config?: (replit.goval.api.Pid1Config|null);

                /** Command metrics. */
                public metrics?: (replit.goval.api.Metrics|null);

                /** Command bootStatus. */
                public bootStatus?: (replit.goval.api.BootStatus|null);

                /** Command readMetaRequest. */
                public readMetaRequest?: (replit.goval.api.ReadMetaRequest|null);

                /** Command readMetaResponse. */
                public readMetaResponse?: (replit.goval.api.ReadMetaResponse|null);

                /** Command writeMetaRequest. */
                public writeMetaRequest?: (replit.goval.api.WriteMetaRequest|null);

                /** Command writeMetaResponse. */
                public writeMetaResponse?: (replit.goval.api.WriteMetaResponse|null);

                /** Command appendMetaRequest. */
                public appendMetaRequest?: (replit.goval.api.AppendMetaRequest|null);

                /** Command appendMetaResponse. */
                public appendMetaResponse?: (replit.goval.api.AppendMetaResponse|null);

                /** Command audio. */
                public audio?: (replit.goval.api.Audio|null);

                /** Command pprofRequest. */
                public pprofRequest?: (replit.goval.api.PprofRequest|null);

                /** Command pprofResponse. */
                public pprofResponse?: (replit.goval.api.PprofResponse|null);

                /** Command audio2. */
                public audio2?: (replit.goval.api.Audio2|null);

                /** Command PTYConfig. */
                public PTYConfig?: (replit.goval.api.PTYConfig|null);

                /** Command debugMain. */
                public debugMain?: (replit.goval.api.DebugMain|null);

                /** Command debugState. */
                public debugState?: (replit.goval.api.DebugState|null);

                /** Command debugMainReply. */
                public debugMainReply?: (replit.goval.api.DebugMainReply|null);

                /** Command debugInput. */
                public debugInput?: (replit.goval.api.DebugInput|null);

                /** Command debugOutput. */
                public debugOutput?: (replit.goval.api.DebugOutput|null);

                /** Command debugStop. */
                public debugStop?: (replit.goval.api.DebugStop|null);

                /** Command debugLeave. */
                public debugLeave?: (replit.goval.api.DebugLeave|null);

                /** Command debugSessions. */
                public debugSessions?: (replit.goval.api.DebugSessions|null);

                /** Command debugAddBreakpointRequest. */
                public debugAddBreakpointRequest?: (replit.goval.api.DebugAddBreakpointRequest|null);

                /** Command debugUpdateBreakpointRequest. */
                public debugUpdateBreakpointRequest?: (replit.goval.api.DebugUpdateBreakpointRequest|null);

                /** Command debugRemoveBreakpointRequest. */
                public debugRemoveBreakpointRequest?: (replit.goval.api.DebugRemoveBreakpointRequest|null);

                /** Command debugBreakpointEvent. */
                public debugBreakpointEvent?: (replit.goval.api.DebugBreakpointEvent|null);

                /** Command dotReplitGetRequest. */
                public dotReplitGetRequest?: (replit.goval.api.DotReplitGetRequest|null);

                /** Command dotReplitGetResponse. */
                public dotReplitGetResponse?: (replit.goval.api.DotReplitGetResponse|null);

                /** Command runConfigGetRequest. */
                public runConfigGetRequest?: (replit.goval.api.RunConfigGetRequest|null);

                /** Command runConfigGetResponse. */
                public runConfigGetResponse?: (replit.goval.api.RunConfigGetResponse|null);

                /** Command dotReplitUpdateRequest. */
                public dotReplitUpdateRequest?: (replit.goval.api.DotReplitUpdateRequest|null);

                /** Command dotReplitUpdateResponse. */
                public dotReplitUpdateResponse?: (replit.goval.api.DotReplitUpdateResponse|null);

                /** Command startLSP. */
                public startLSP?: (replit.goval.api.StartLSP|null);

                /** Command firewallDenied. */
                public firewallDenied?: (replit.goval.api.FirewallDenied|null);

                /** Command nixPackageAddRequest. */
                public nixPackageAddRequest?: (replit.goval.api.NixPackageAddRequest|null);

                /** Command nixPackageAddResponse. */
                public nixPackageAddResponse?: (replit.goval.api.NixPackageAddResponse|null);

                /** Command nixPackageRemoveRequest. */
                public nixPackageRemoveRequest?: (replit.goval.api.NixPackageRemoveRequest|null);

                /** Command nixPackageRemoveResponse. */
                public nixPackageRemoveResponse?: (replit.goval.api.NixPackageRemoveResponse|null);

                /** Command nixPackageListRequest. */
                public nixPackageListRequest?: (replit.goval.api.NixPackageListRequest|null);

                /** Command nixPackageListResponse. */
                public nixPackageListResponse?: (replit.goval.api.NixPackageListResponse|null);

                /** Command nixChannelsRequest. */
                public nixChannelsRequest?: (replit.goval.api.NixChannelsRequest|null);

                /** Command nixChannelsResponse. */
                public nixChannelsResponse?: (replit.goval.api.NixChannelsResponse|null);

                /** Command nixChannelLatestStableRequest. */
                public nixChannelLatestStableRequest?: (replit.goval.api.NixChannelLatestStableRequest|null);

                /** Command nixChannelLatestStableResponse. */
                public nixChannelLatestStableResponse?: (replit.goval.api.NixChannelLatestStableResponse|null);

                /** Command nixPackageSearchRequest. */
                public nixPackageSearchRequest?: (replit.goval.api.NixPackageSearchRequest|null);

                /** Command nixPackageSearchResponse. */
                public nixPackageSearchResponse?: (replit.goval.api.NixPackageSearchResponse|null);

                /** Command userEvent. */
                public userEvent?: (replit.goval.api.UserEvent|null);

                /** Command replspaceApiOpenFile. */
                public replspaceApiOpenFile?: (replit.goval.api.ReplspaceApiOpenFile|null);

                /** Command replspaceApiCloseFile. */
                public replspaceApiCloseFile?: (replit.goval.api.ReplspaceApiCloseFile|null);

                /** Command replspaceApiGetGitHubToken. */
                public replspaceApiGetGitHubToken?: (replit.goval.api.ReplspaceApiGetGitHubToken|null);

                /** Command replspaceApiGitHubToken. */
                public replspaceApiGitHubToken?: (replit.goval.api.ReplspaceApiGitHubToken|null);

                /** Command ref. */
                public ref: string;

                /** Command traceInfo. */
                public traceInfo: { [k: string]: string };

                /** Command body. */
                public body?: ("openChan"|"openChanRes"|"closeChan"|"closeChanRes"|"containerState"|"portOpen"|"portClose"|"toast"|"protocolError"|"redirect"|"alwaysOn"|"runMain"|"clear"|"eval"|"result"|"input"|"output"|"error"|"stderr"|"log"|"record"|"saneTerm"|"resizeTerm"|"state"|"ok"|"persist"|"persistMirror"|"write"|"remove"|"move"|"tryRemove"|"mkdir"|"stat"|"statRes"|"transferStart"|"transferChunk"|"transferComplete"|"transferCancel"|"transfer"|"read"|"readdir"|"files"|"file"|"checkChanges"|"changedFiles"|"lintResults"|"runContainedTest"|"testResult"|"debuggerStart"|"debuggerStep"|"debuggerStatus"|"ensurePackages"|"ping"|"pong"|"hello"|"goodbye"|"proxyGoingAway"|"hint"|"connect"|"send"|"recv"|"disconnect"|"fileAuthReq"|"fileAuthRes"|"mutliFileAuthRes"|"listObjects"|"listObjectsResp"|"ot"|"otstatus"|"otLinkFile"|"otLinkFileResponse"|"otNewCursor"|"otDeleteCursor"|"otFetchRequest"|"otFetchResponse"|"otTransformSelectionRequest"|"otTransformSelectionResponse"|"flush"|"debug"|"startVCR"|"readVCR"|"VCRLog"|"auth"|"execInfo"|"subscribeFile"|"fileEvent"|"roster"|"join"|"part"|"openFile"|"fileOpened"|"followUser"|"unfollowUser"|"updateSessionTimestamp"|"sessionTimestampUpdated"|"exec"|"packageSearch"|"packageSearchResp"|"packageInfo"|"packageInfoResp"|"packageAdd"|"packageRemove"|"packageInstall"|"packageListSpecfile"|"packageListSpecfileResp"|"packageCacheSave"|"chatMessage"|"chatTyping"|"chatScrollback"|"fsSnapshot"|"fsSnapshotEvent"|"fsTakeLock"|"fsReleaseLock"|"hasCap"|"snapshotEvent"|"NoninteractiveFSChangeEvent"|"pid1Config"|"metrics"|"bootStatus"|"readMetaRequest"|"readMetaResponse"|"writeMetaRequest"|"writeMetaResponse"|"appendMetaRequest"|"appendMetaResponse"|"audio"|"pprofRequest"|"pprofResponse"|"audio2"|"PTYConfig"|"debugMain"|"debugState"|"debugMainReply"|"debugInput"|"debugOutput"|"debugStop"|"debugLeave"|"debugSessions"|"debugAddBreakpointRequest"|"debugUpdateBreakpointRequest"|"debugRemoveBreakpointRequest"|"debugBreakpointEvent"|"dotReplitGetRequest"|"dotReplitGetResponse"|"runConfigGetRequest"|"runConfigGetResponse"|"dotReplitUpdateRequest"|"dotReplitUpdateResponse"|"startLSP"|"firewallDenied"|"nixPackageAddRequest"|"nixPackageAddResponse"|"nixPackageRemoveRequest"|"nixPackageRemoveResponse"|"nixPackageListRequest"|"nixPackageListResponse"|"nixChannelsRequest"|"nixChannelsResponse"|"nixChannelLatestStableRequest"|"nixChannelLatestStableResponse"|"nixPackageSearchRequest"|"nixPackageSearchResponse"|"userEvent"|"replspaceApiOpenFile"|"replspaceApiCloseFile"|"replspaceApiGetGitHubToken"|"replspaceApiGitHubToken");

                /**
                 * Creates a new Command instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Command instance
                 */
                public static create(properties?: replit.goval.api.ICommand): replit.goval.api.Command;

                /**
                 * Encodes the specified Command message. Does not implicitly {@link replit.goval.api.Command.verify|verify} messages.
                 * @param message Command message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Command, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Command message, length delimited. Does not implicitly {@link replit.goval.api.Command.verify|verify} messages.
                 * @param message Command message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Command, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Command message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Command
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Command;

                /**
                 * Decodes a Command message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Command
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Command;

                /**
                 * Verifies a Command message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Command message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Command
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Command;

                /**
                 * Creates a plain object from a Command message. Also converts values to other types if specified.
                 * @param message Command
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Command, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Command to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageAddRequest. */
            interface INixPackageAddRequest {

                /** NixPackageAddRequest packages */
                packages?: (string[]|null);
            }

            /** Represents a NixPackageAddRequest. */
            class NixPackageAddRequest {

                /**
                 * Constructs a new NixPackageAddRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageAddRequest);

                /** NixPackageAddRequest packages. */
                public packages: string[];

                /**
                 * Creates a new NixPackageAddRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageAddRequest instance
                 */
                public static create(properties?: replit.goval.api.INixPackageAddRequest): replit.goval.api.NixPackageAddRequest;

                /**
                 * Encodes the specified NixPackageAddRequest message. Does not implicitly {@link replit.goval.api.NixPackageAddRequest.verify|verify} messages.
                 * @param message NixPackageAddRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageAddRequest message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageAddRequest.verify|verify} messages.
                 * @param message NixPackageAddRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageAddRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageAddRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageAddRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageAddRequest;

                /**
                 * Decodes a NixPackageAddRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageAddRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageAddRequest;

                /**
                 * Verifies a NixPackageAddRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageAddRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageAddRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageAddRequest;

                /**
                 * Creates a plain object from a NixPackageAddRequest message. Also converts values to other types if specified.
                 * @param message NixPackageAddRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageAddRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageAddRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageAddResponse. */
            interface INixPackageAddResponse {
            }

            /** Represents a NixPackageAddResponse. */
            class NixPackageAddResponse {

                /**
                 * Constructs a new NixPackageAddResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageAddResponse);

                /**
                 * Creates a new NixPackageAddResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageAddResponse instance
                 */
                public static create(properties?: replit.goval.api.INixPackageAddResponse): replit.goval.api.NixPackageAddResponse;

                /**
                 * Encodes the specified NixPackageAddResponse message. Does not implicitly {@link replit.goval.api.NixPackageAddResponse.verify|verify} messages.
                 * @param message NixPackageAddResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageAddResponse message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageAddResponse.verify|verify} messages.
                 * @param message NixPackageAddResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageAddResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageAddResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageAddResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageAddResponse;

                /**
                 * Decodes a NixPackageAddResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageAddResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageAddResponse;

                /**
                 * Verifies a NixPackageAddResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageAddResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageAddResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageAddResponse;

                /**
                 * Creates a plain object from a NixPackageAddResponse message. Also converts values to other types if specified.
                 * @param message NixPackageAddResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageAddResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageAddResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageRemoveRequest. */
            interface INixPackageRemoveRequest {

                /** NixPackageRemoveRequest packages */
                packages?: (string[]|null);
            }

            /** Represents a NixPackageRemoveRequest. */
            class NixPackageRemoveRequest {

                /**
                 * Constructs a new NixPackageRemoveRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageRemoveRequest);

                /** NixPackageRemoveRequest packages. */
                public packages: string[];

                /**
                 * Creates a new NixPackageRemoveRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageRemoveRequest instance
                 */
                public static create(properties?: replit.goval.api.INixPackageRemoveRequest): replit.goval.api.NixPackageRemoveRequest;

                /**
                 * Encodes the specified NixPackageRemoveRequest message. Does not implicitly {@link replit.goval.api.NixPackageRemoveRequest.verify|verify} messages.
                 * @param message NixPackageRemoveRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageRemoveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageRemoveRequest message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageRemoveRequest.verify|verify} messages.
                 * @param message NixPackageRemoveRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageRemoveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageRemoveRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageRemoveRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageRemoveRequest;

                /**
                 * Decodes a NixPackageRemoveRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageRemoveRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageRemoveRequest;

                /**
                 * Verifies a NixPackageRemoveRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageRemoveRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageRemoveRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageRemoveRequest;

                /**
                 * Creates a plain object from a NixPackageRemoveRequest message. Also converts values to other types if specified.
                 * @param message NixPackageRemoveRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageRemoveRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageRemoveRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageRemoveResponse. */
            interface INixPackageRemoveResponse {
            }

            /** Represents a NixPackageRemoveResponse. */
            class NixPackageRemoveResponse {

                /**
                 * Constructs a new NixPackageRemoveResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageRemoveResponse);

                /**
                 * Creates a new NixPackageRemoveResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageRemoveResponse instance
                 */
                public static create(properties?: replit.goval.api.INixPackageRemoveResponse): replit.goval.api.NixPackageRemoveResponse;

                /**
                 * Encodes the specified NixPackageRemoveResponse message. Does not implicitly {@link replit.goval.api.NixPackageRemoveResponse.verify|verify} messages.
                 * @param message NixPackageRemoveResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageRemoveResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageRemoveResponse message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageRemoveResponse.verify|verify} messages.
                 * @param message NixPackageRemoveResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageRemoveResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageRemoveResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageRemoveResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageRemoveResponse;

                /**
                 * Decodes a NixPackageRemoveResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageRemoveResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageRemoveResponse;

                /**
                 * Verifies a NixPackageRemoveResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageRemoveResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageRemoveResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageRemoveResponse;

                /**
                 * Creates a plain object from a NixPackageRemoveResponse message. Also converts values to other types if specified.
                 * @param message NixPackageRemoveResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageRemoveResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageRemoveResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageListRequest. */
            interface INixPackageListRequest {
            }

            /** Represents a NixPackageListRequest. */
            class NixPackageListRequest {

                /**
                 * Constructs a new NixPackageListRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageListRequest);

                /**
                 * Creates a new NixPackageListRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageListRequest instance
                 */
                public static create(properties?: replit.goval.api.INixPackageListRequest): replit.goval.api.NixPackageListRequest;

                /**
                 * Encodes the specified NixPackageListRequest message. Does not implicitly {@link replit.goval.api.NixPackageListRequest.verify|verify} messages.
                 * @param message NixPackageListRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageListRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageListRequest message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageListRequest.verify|verify} messages.
                 * @param message NixPackageListRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageListRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageListRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageListRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageListRequest;

                /**
                 * Decodes a NixPackageListRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageListRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageListRequest;

                /**
                 * Verifies a NixPackageListRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageListRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageListRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageListRequest;

                /**
                 * Creates a plain object from a NixPackageListRequest message. Also converts values to other types if specified.
                 * @param message NixPackageListRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageListRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageListRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageListResponse. */
            interface INixPackageListResponse {

                /** NixPackageListResponse packages */
                packages?: ((replit.goval.api.NixPackage|replit.goval.api.INixPackage)[]|null);
            }

            /** Represents a NixPackageListResponse. */
            class NixPackageListResponse {

                /**
                 * Constructs a new NixPackageListResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageListResponse);

                /** NixPackageListResponse packages. */
                public packages: replit.goval.api.NixPackage[];

                /**
                 * Creates a new NixPackageListResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageListResponse instance
                 */
                public static create(properties?: replit.goval.api.INixPackageListResponse): replit.goval.api.NixPackageListResponse;

                /**
                 * Encodes the specified NixPackageListResponse message. Does not implicitly {@link replit.goval.api.NixPackageListResponse.verify|verify} messages.
                 * @param message NixPackageListResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageListResponse message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageListResponse.verify|verify} messages.
                 * @param message NixPackageListResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageListResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageListResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageListResponse;

                /**
                 * Decodes a NixPackageListResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageListResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageListResponse;

                /**
                 * Verifies a NixPackageListResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageListResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageListResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageListResponse;

                /**
                 * Creates a plain object from a NixPackageListResponse message. Also converts values to other types if specified.
                 * @param message NixPackageListResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageListResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageListResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackage. */
            interface INixPackage {

                /** NixPackage name */
                name?: (string|null);

                /** NixPackage description */
                description?: (string|null);

                /** NixPackage version */
                version?: (string|null);

                /** NixPackage homepageURL */
                homepageURL?: (string[]|null);

                /** NixPackage maintainers */
                maintainers?: (string[]|null);

                /** NixPackage licenses */
                licenses?: (string[]|null);
            }

            /** Represents a NixPackage. */
            class NixPackage {

                /**
                 * Constructs a new NixPackage.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackage);

                /** NixPackage name. */
                public name: string;

                /** NixPackage description. */
                public description: string;

                /** NixPackage version. */
                public version: string;

                /** NixPackage homepageURL. */
                public homepageURL: string[];

                /** NixPackage maintainers. */
                public maintainers: string[];

                /** NixPackage licenses. */
                public licenses: string[];

                /**
                 * Creates a new NixPackage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackage instance
                 */
                public static create(properties?: replit.goval.api.INixPackage): replit.goval.api.NixPackage;

                /**
                 * Encodes the specified NixPackage message. Does not implicitly {@link replit.goval.api.NixPackage.verify|verify} messages.
                 * @param message NixPackage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackage message, length delimited. Does not implicitly {@link replit.goval.api.NixPackage.verify|verify} messages.
                 * @param message NixPackage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackage;

                /**
                 * Decodes a NixPackage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackage;

                /**
                 * Verifies a NixPackage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackage
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackage;

                /**
                 * Creates a plain object from a NixPackage message. Also converts values to other types if specified.
                 * @param message NixPackage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixChannelsRequest. */
            interface INixChannelsRequest {
            }

            /** Represents a NixChannelsRequest. */
            class NixChannelsRequest {

                /**
                 * Constructs a new NixChannelsRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixChannelsRequest);

                /**
                 * Creates a new NixChannelsRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixChannelsRequest instance
                 */
                public static create(properties?: replit.goval.api.INixChannelsRequest): replit.goval.api.NixChannelsRequest;

                /**
                 * Encodes the specified NixChannelsRequest message. Does not implicitly {@link replit.goval.api.NixChannelsRequest.verify|verify} messages.
                 * @param message NixChannelsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixChannelsRequest message, length delimited. Does not implicitly {@link replit.goval.api.NixChannelsRequest.verify|verify} messages.
                 * @param message NixChannelsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixChannelsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixChannelsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixChannelsRequest;

                /**
                 * Decodes a NixChannelsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixChannelsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixChannelsRequest;

                /**
                 * Verifies a NixChannelsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixChannelsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixChannelsRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixChannelsRequest;

                /**
                 * Creates a plain object from a NixChannelsRequest message. Also converts values to other types if specified.
                 * @param message NixChannelsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixChannelsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixChannelsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixChannelsResponse. */
            interface INixChannelsResponse {

                /** NixChannelsResponse channels */
                channels?: (string[]|null);
            }

            /** Represents a NixChannelsResponse. */
            class NixChannelsResponse {

                /**
                 * Constructs a new NixChannelsResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixChannelsResponse);

                /** NixChannelsResponse channels. */
                public channels: string[];

                /**
                 * Creates a new NixChannelsResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixChannelsResponse instance
                 */
                public static create(properties?: replit.goval.api.INixChannelsResponse): replit.goval.api.NixChannelsResponse;

                /**
                 * Encodes the specified NixChannelsResponse message. Does not implicitly {@link replit.goval.api.NixChannelsResponse.verify|verify} messages.
                 * @param message NixChannelsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixChannelsResponse message, length delimited. Does not implicitly {@link replit.goval.api.NixChannelsResponse.verify|verify} messages.
                 * @param message NixChannelsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixChannelsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixChannelsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixChannelsResponse;

                /**
                 * Decodes a NixChannelsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixChannelsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixChannelsResponse;

                /**
                 * Verifies a NixChannelsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixChannelsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixChannelsResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixChannelsResponse;

                /**
                 * Creates a plain object from a NixChannelsResponse message. Also converts values to other types if specified.
                 * @param message NixChannelsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixChannelsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixChannelsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixChannelLatestStableRequest. */
            interface INixChannelLatestStableRequest {
            }

            /** Represents a NixChannelLatestStableRequest. */
            class NixChannelLatestStableRequest {

                /**
                 * Constructs a new NixChannelLatestStableRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixChannelLatestStableRequest);

                /**
                 * Creates a new NixChannelLatestStableRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixChannelLatestStableRequest instance
                 */
                public static create(properties?: replit.goval.api.INixChannelLatestStableRequest): replit.goval.api.NixChannelLatestStableRequest;

                /**
                 * Encodes the specified NixChannelLatestStableRequest message. Does not implicitly {@link replit.goval.api.NixChannelLatestStableRequest.verify|verify} messages.
                 * @param message NixChannelLatestStableRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixChannelLatestStableRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixChannelLatestStableRequest message, length delimited. Does not implicitly {@link replit.goval.api.NixChannelLatestStableRequest.verify|verify} messages.
                 * @param message NixChannelLatestStableRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixChannelLatestStableRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixChannelLatestStableRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixChannelLatestStableRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixChannelLatestStableRequest;

                /**
                 * Decodes a NixChannelLatestStableRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixChannelLatestStableRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixChannelLatestStableRequest;

                /**
                 * Verifies a NixChannelLatestStableRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixChannelLatestStableRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixChannelLatestStableRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixChannelLatestStableRequest;

                /**
                 * Creates a plain object from a NixChannelLatestStableRequest message. Also converts values to other types if specified.
                 * @param message NixChannelLatestStableRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixChannelLatestStableRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixChannelLatestStableRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixChannelLatestStableResponse. */
            interface INixChannelLatestStableResponse {

                /** NixChannelLatestStableResponse channel */
                channel?: (string|null);
            }

            /** Represents a NixChannelLatestStableResponse. */
            class NixChannelLatestStableResponse {

                /**
                 * Constructs a new NixChannelLatestStableResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixChannelLatestStableResponse);

                /** NixChannelLatestStableResponse channel. */
                public channel: string;

                /**
                 * Creates a new NixChannelLatestStableResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixChannelLatestStableResponse instance
                 */
                public static create(properties?: replit.goval.api.INixChannelLatestStableResponse): replit.goval.api.NixChannelLatestStableResponse;

                /**
                 * Encodes the specified NixChannelLatestStableResponse message. Does not implicitly {@link replit.goval.api.NixChannelLatestStableResponse.verify|verify} messages.
                 * @param message NixChannelLatestStableResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixChannelLatestStableResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixChannelLatestStableResponse message, length delimited. Does not implicitly {@link replit.goval.api.NixChannelLatestStableResponse.verify|verify} messages.
                 * @param message NixChannelLatestStableResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixChannelLatestStableResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixChannelLatestStableResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixChannelLatestStableResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixChannelLatestStableResponse;

                /**
                 * Decodes a NixChannelLatestStableResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixChannelLatestStableResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixChannelLatestStableResponse;

                /**
                 * Verifies a NixChannelLatestStableResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixChannelLatestStableResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixChannelLatestStableResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixChannelLatestStableResponse;

                /**
                 * Creates a plain object from a NixChannelLatestStableResponse message. Also converts values to other types if specified.
                 * @param message NixChannelLatestStableResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixChannelLatestStableResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixChannelLatestStableResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageSearchRequest. */
            interface INixPackageSearchRequest {

                /** NixPackageSearchRequest query */
                query?: (string|null);
            }

            /** Represents a NixPackageSearchRequest. */
            class NixPackageSearchRequest {

                /**
                 * Constructs a new NixPackageSearchRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageSearchRequest);

                /** NixPackageSearchRequest query. */
                public query: string;

                /**
                 * Creates a new NixPackageSearchRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageSearchRequest instance
                 */
                public static create(properties?: replit.goval.api.INixPackageSearchRequest): replit.goval.api.NixPackageSearchRequest;

                /**
                 * Encodes the specified NixPackageSearchRequest message. Does not implicitly {@link replit.goval.api.NixPackageSearchRequest.verify|verify} messages.
                 * @param message NixPackageSearchRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageSearchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageSearchRequest message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageSearchRequest.verify|verify} messages.
                 * @param message NixPackageSearchRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageSearchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageSearchRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageSearchRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageSearchRequest;

                /**
                 * Decodes a NixPackageSearchRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageSearchRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageSearchRequest;

                /**
                 * Verifies a NixPackageSearchRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageSearchRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageSearchRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageSearchRequest;

                /**
                 * Creates a plain object from a NixPackageSearchRequest message. Also converts values to other types if specified.
                 * @param message NixPackageSearchRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageSearchRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageSearchRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixPackageSearchResponse. */
            interface INixPackageSearchResponse {

                /** NixPackageSearchResponse packages */
                packages?: ((replit.goval.api.NixPackage|replit.goval.api.INixPackage)[]|null);
            }

            /** Represents a NixPackageSearchResponse. */
            class NixPackageSearchResponse {

                /**
                 * Constructs a new NixPackageSearchResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixPackageSearchResponse);

                /** NixPackageSearchResponse packages. */
                public packages: replit.goval.api.NixPackage[];

                /**
                 * Creates a new NixPackageSearchResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixPackageSearchResponse instance
                 */
                public static create(properties?: replit.goval.api.INixPackageSearchResponse): replit.goval.api.NixPackageSearchResponse;

                /**
                 * Encodes the specified NixPackageSearchResponse message. Does not implicitly {@link replit.goval.api.NixPackageSearchResponse.verify|verify} messages.
                 * @param message NixPackageSearchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixPackageSearchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixPackageSearchResponse message, length delimited. Does not implicitly {@link replit.goval.api.NixPackageSearchResponse.verify|verify} messages.
                 * @param message NixPackageSearchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixPackageSearchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixPackageSearchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixPackageSearchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixPackageSearchResponse;

                /**
                 * Decodes a NixPackageSearchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixPackageSearchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixPackageSearchResponse;

                /**
                 * Verifies a NixPackageSearchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixPackageSearchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixPackageSearchResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixPackageSearchResponse;

                /**
                 * Creates a plain object from a NixPackageSearchResponse message. Also converts values to other types if specified.
                 * @param message NixPackageSearchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixPackageSearchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixPackageSearchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a StartLSP. */
            interface IStartLSP {

                /** StartLSP language */
                language?: (string|null);
            }

            /** Represents a StartLSP. */
            class StartLSP {

                /**
                 * Constructs a new StartLSP.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IStartLSP);

                /** StartLSP language. */
                public language: string;

                /**
                 * Creates a new StartLSP instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StartLSP instance
                 */
                public static create(properties?: replit.goval.api.IStartLSP): replit.goval.api.StartLSP;

                /**
                 * Encodes the specified StartLSP message. Does not implicitly {@link replit.goval.api.StartLSP.verify|verify} messages.
                 * @param message StartLSP message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.StartLSP, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StartLSP message, length delimited. Does not implicitly {@link replit.goval.api.StartLSP.verify|verify} messages.
                 * @param message StartLSP message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.StartLSP, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StartLSP message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StartLSP
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.StartLSP;

                /**
                 * Decodes a StartLSP message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StartLSP
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.StartLSP;

                /**
                 * Verifies a StartLSP message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StartLSP message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StartLSP
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.StartLSP;

                /**
                 * Creates a plain object from a StartLSP message. Also converts values to other types if specified.
                 * @param message StartLSP
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.StartLSP, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StartLSP to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Audio. */
            interface IAudio {

                /** Audio data */
                data?: (number[]|null);
            }

            /** Represents an Audio. */
            class Audio {

                /**
                 * Constructs a new Audio.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAudio);

                /** Audio data. */
                public data: number[];

                /**
                 * Creates a new Audio instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Audio instance
                 */
                public static create(properties?: replit.goval.api.IAudio): replit.goval.api.Audio;

                /**
                 * Encodes the specified Audio message. Does not implicitly {@link replit.goval.api.Audio.verify|verify} messages.
                 * @param message Audio message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Audio, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Audio message, length delimited. Does not implicitly {@link replit.goval.api.Audio.verify|verify} messages.
                 * @param message Audio message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Audio, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Audio message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Audio
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Audio;

                /**
                 * Decodes an Audio message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Audio
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Audio;

                /**
                 * Verifies an Audio message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Audio message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Audio
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Audio;

                /**
                 * Creates a plain object from an Audio message. Also converts values to other types if specified.
                 * @param message Audio
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Audio, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Audio to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Audio2. */
            interface IAudio2 {

                /** Audio2 data */
                data?: (number[]|null);

                /** Audio2 samples */
                samples?: (number|null);
            }

            /** Represents an Audio2. */
            class Audio2 {

                /**
                 * Constructs a new Audio2.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAudio2);

                /** Audio2 data. */
                public data: number[];

                /** Audio2 samples. */
                public samples: number;

                /**
                 * Creates a new Audio2 instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Audio2 instance
                 */
                public static create(properties?: replit.goval.api.IAudio2): replit.goval.api.Audio2;

                /**
                 * Encodes the specified Audio2 message. Does not implicitly {@link replit.goval.api.Audio2.verify|verify} messages.
                 * @param message Audio2 message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Audio2, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Audio2 message, length delimited. Does not implicitly {@link replit.goval.api.Audio2.verify|verify} messages.
                 * @param message Audio2 message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Audio2, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Audio2 message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Audio2
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Audio2;

                /**
                 * Decodes an Audio2 message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Audio2
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Audio2;

                /**
                 * Verifies an Audio2 message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Audio2 message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Audio2
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Audio2;

                /**
                 * Creates a plain object from an Audio2 message. Also converts values to other types if specified.
                 * @param message Audio2
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Audio2, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Audio2 to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Preconditions. */
            interface IPreconditions {

                /** Preconditions generation */
                generation?: (number|null);

                /** Preconditions metageneration */
                metageneration?: (number|null);

                /** Preconditions doesNotExist */
                doesNotExist?: (boolean|null);
            }

            /** Represents a Preconditions. */
            class Preconditions {

                /**
                 * Constructs a new Preconditions.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPreconditions);

                /** Preconditions generation. */
                public generation: number;

                /** Preconditions metageneration. */
                public metageneration: number;

                /** Preconditions doesNotExist. */
                public doesNotExist: boolean;

                /**
                 * Creates a new Preconditions instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Preconditions instance
                 */
                public static create(properties?: replit.goval.api.IPreconditions): replit.goval.api.Preconditions;

                /**
                 * Encodes the specified Preconditions message. Does not implicitly {@link replit.goval.api.Preconditions.verify|verify} messages.
                 * @param message Preconditions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Preconditions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Preconditions message, length delimited. Does not implicitly {@link replit.goval.api.Preconditions.verify|verify} messages.
                 * @param message Preconditions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Preconditions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Preconditions message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Preconditions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Preconditions;

                /**
                 * Decodes a Preconditions message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Preconditions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Preconditions;

                /**
                 * Verifies a Preconditions message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Preconditions message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Preconditions
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Preconditions;

                /**
                 * Creates a plain object from a Preconditions message. Also converts values to other types if specified.
                 * @param message Preconditions
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Preconditions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Preconditions to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReadMetaRequest. */
            interface IReadMetaRequest {

                /** ReadMetaRequest key */
                key?: (string|null);

                /** ReadMetaRequest exists */
                exists?: (boolean|null);

                /** ReadMetaRequest data */
                data?: (Uint8Array|null);
            }

            /** Represents a ReadMetaRequest. */
            class ReadMetaRequest {

                /**
                 * Constructs a new ReadMetaRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReadMetaRequest);

                /** ReadMetaRequest key. */
                public key: string;

                /** ReadMetaRequest exists. */
                public exists: boolean;

                /** ReadMetaRequest data. */
                public data: Uint8Array;

                /**
                 * Creates a new ReadMetaRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReadMetaRequest instance
                 */
                public static create(properties?: replit.goval.api.IReadMetaRequest): replit.goval.api.ReadMetaRequest;

                /**
                 * Encodes the specified ReadMetaRequest message. Does not implicitly {@link replit.goval.api.ReadMetaRequest.verify|verify} messages.
                 * @param message ReadMetaRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReadMetaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReadMetaRequest message, length delimited. Does not implicitly {@link replit.goval.api.ReadMetaRequest.verify|verify} messages.
                 * @param message ReadMetaRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReadMetaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReadMetaRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReadMetaRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReadMetaRequest;

                /**
                 * Decodes a ReadMetaRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReadMetaRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReadMetaRequest;

                /**
                 * Verifies a ReadMetaRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReadMetaRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReadMetaRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReadMetaRequest;

                /**
                 * Creates a plain object from a ReadMetaRequest message. Also converts values to other types if specified.
                 * @param message ReadMetaRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReadMetaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReadMetaRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReadMetaResponse. */
            interface IReadMetaResponse {

                /** ReadMetaResponse key */
                key?: (string|null);

                /** ReadMetaResponse exists */
                exists?: (boolean|null);

                /** ReadMetaResponse data */
                data?: (Uint8Array|null);

                /** ReadMetaResponse generation */
                generation?: (number|null);

                /** ReadMetaResponse metageneration */
                metageneration?: (number|null);
            }

            /** Represents a ReadMetaResponse. */
            class ReadMetaResponse {

                /**
                 * Constructs a new ReadMetaResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReadMetaResponse);

                /** ReadMetaResponse key. */
                public key: string;

                /** ReadMetaResponse exists. */
                public exists: boolean;

                /** ReadMetaResponse data. */
                public data: Uint8Array;

                /** ReadMetaResponse generation. */
                public generation: number;

                /** ReadMetaResponse metageneration. */
                public metageneration: number;

                /**
                 * Creates a new ReadMetaResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReadMetaResponse instance
                 */
                public static create(properties?: replit.goval.api.IReadMetaResponse): replit.goval.api.ReadMetaResponse;

                /**
                 * Encodes the specified ReadMetaResponse message. Does not implicitly {@link replit.goval.api.ReadMetaResponse.verify|verify} messages.
                 * @param message ReadMetaResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReadMetaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReadMetaResponse message, length delimited. Does not implicitly {@link replit.goval.api.ReadMetaResponse.verify|verify} messages.
                 * @param message ReadMetaResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReadMetaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReadMetaResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReadMetaResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReadMetaResponse;

                /**
                 * Decodes a ReadMetaResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReadMetaResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReadMetaResponse;

                /**
                 * Verifies a ReadMetaResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReadMetaResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReadMetaResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReadMetaResponse;

                /**
                 * Creates a plain object from a ReadMetaResponse message. Also converts values to other types if specified.
                 * @param message ReadMetaResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReadMetaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReadMetaResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a WriteMetaRequest. */
            interface IWriteMetaRequest {

                /** WriteMetaRequest key */
                key?: (string|null);

                /** WriteMetaRequest data */
                data?: (Uint8Array|null);

                /** WriteMetaRequest preconditions */
                preconditions?: (replit.goval.api.Preconditions|replit.goval.api.IPreconditions|null);
            }

            /** Represents a WriteMetaRequest. */
            class WriteMetaRequest {

                /**
                 * Constructs a new WriteMetaRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IWriteMetaRequest);

                /** WriteMetaRequest key. */
                public key: string;

                /** WriteMetaRequest data. */
                public data: Uint8Array;

                /** WriteMetaRequest preconditions. */
                public preconditions?: (replit.goval.api.Preconditions|null);

                /**
                 * Creates a new WriteMetaRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns WriteMetaRequest instance
                 */
                public static create(properties?: replit.goval.api.IWriteMetaRequest): replit.goval.api.WriteMetaRequest;

                /**
                 * Encodes the specified WriteMetaRequest message. Does not implicitly {@link replit.goval.api.WriteMetaRequest.verify|verify} messages.
                 * @param message WriteMetaRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.WriteMetaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WriteMetaRequest message, length delimited. Does not implicitly {@link replit.goval.api.WriteMetaRequest.verify|verify} messages.
                 * @param message WriteMetaRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.WriteMetaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WriteMetaRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WriteMetaRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.WriteMetaRequest;

                /**
                 * Decodes a WriteMetaRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WriteMetaRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.WriteMetaRequest;

                /**
                 * Verifies a WriteMetaRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WriteMetaRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WriteMetaRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.WriteMetaRequest;

                /**
                 * Creates a plain object from a WriteMetaRequest message. Also converts values to other types if specified.
                 * @param message WriteMetaRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.WriteMetaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WriteMetaRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a WriteMetaResponse. */
            interface IWriteMetaResponse {

                /** WriteMetaResponse generation */
                generation?: (number|null);

                /** WriteMetaResponse metageneration */
                metageneration?: (number|null);
            }

            /** Represents a WriteMetaResponse. */
            class WriteMetaResponse {

                /**
                 * Constructs a new WriteMetaResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IWriteMetaResponse);

                /** WriteMetaResponse generation. */
                public generation: number;

                /** WriteMetaResponse metageneration. */
                public metageneration: number;

                /**
                 * Creates a new WriteMetaResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns WriteMetaResponse instance
                 */
                public static create(properties?: replit.goval.api.IWriteMetaResponse): replit.goval.api.WriteMetaResponse;

                /**
                 * Encodes the specified WriteMetaResponse message. Does not implicitly {@link replit.goval.api.WriteMetaResponse.verify|verify} messages.
                 * @param message WriteMetaResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.WriteMetaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WriteMetaResponse message, length delimited. Does not implicitly {@link replit.goval.api.WriteMetaResponse.verify|verify} messages.
                 * @param message WriteMetaResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.WriteMetaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WriteMetaResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WriteMetaResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.WriteMetaResponse;

                /**
                 * Decodes a WriteMetaResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WriteMetaResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.WriteMetaResponse;

                /**
                 * Verifies a WriteMetaResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WriteMetaResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WriteMetaResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.WriteMetaResponse;

                /**
                 * Creates a plain object from a WriteMetaResponse message. Also converts values to other types if specified.
                 * @param message WriteMetaResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.WriteMetaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WriteMetaResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AppendMetaRequest. */
            interface IAppendMetaRequest {

                /** AppendMetaRequest key */
                key?: (string|null);

                /** AppendMetaRequest data */
                data?: (Uint8Array|null);

                /** AppendMetaRequest preconditions */
                preconditions?: (replit.goval.api.Preconditions|replit.goval.api.IPreconditions|null);
            }

            /** Represents an AppendMetaRequest. */
            class AppendMetaRequest {

                /**
                 * Constructs a new AppendMetaRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAppendMetaRequest);

                /** AppendMetaRequest key. */
                public key: string;

                /** AppendMetaRequest data. */
                public data: Uint8Array;

                /** AppendMetaRequest preconditions. */
                public preconditions?: (replit.goval.api.Preconditions|null);

                /**
                 * Creates a new AppendMetaRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AppendMetaRequest instance
                 */
                public static create(properties?: replit.goval.api.IAppendMetaRequest): replit.goval.api.AppendMetaRequest;

                /**
                 * Encodes the specified AppendMetaRequest message. Does not implicitly {@link replit.goval.api.AppendMetaRequest.verify|verify} messages.
                 * @param message AppendMetaRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.AppendMetaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AppendMetaRequest message, length delimited. Does not implicitly {@link replit.goval.api.AppendMetaRequest.verify|verify} messages.
                 * @param message AppendMetaRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.AppendMetaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AppendMetaRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AppendMetaRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.AppendMetaRequest;

                /**
                 * Decodes an AppendMetaRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AppendMetaRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.AppendMetaRequest;

                /**
                 * Verifies an AppendMetaRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AppendMetaRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AppendMetaRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.AppendMetaRequest;

                /**
                 * Creates a plain object from an AppendMetaRequest message. Also converts values to other types if specified.
                 * @param message AppendMetaRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.AppendMetaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AppendMetaRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AppendMetaResponse. */
            interface IAppendMetaResponse {

                /** AppendMetaResponse generation */
                generation?: (number|null);

                /** AppendMetaResponse metageneration */
                metageneration?: (number|null);
            }

            /** Represents an AppendMetaResponse. */
            class AppendMetaResponse {

                /**
                 * Constructs a new AppendMetaResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAppendMetaResponse);

                /** AppendMetaResponse generation. */
                public generation: number;

                /** AppendMetaResponse metageneration. */
                public metageneration: number;

                /**
                 * Creates a new AppendMetaResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AppendMetaResponse instance
                 */
                public static create(properties?: replit.goval.api.IAppendMetaResponse): replit.goval.api.AppendMetaResponse;

                /**
                 * Encodes the specified AppendMetaResponse message. Does not implicitly {@link replit.goval.api.AppendMetaResponse.verify|verify} messages.
                 * @param message AppendMetaResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.AppendMetaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AppendMetaResponse message, length delimited. Does not implicitly {@link replit.goval.api.AppendMetaResponse.verify|verify} messages.
                 * @param message AppendMetaResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.AppendMetaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AppendMetaResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AppendMetaResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.AppendMetaResponse;

                /**
                 * Decodes an AppendMetaResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AppendMetaResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.AppendMetaResponse;

                /**
                 * Verifies an AppendMetaResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AppendMetaResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AppendMetaResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.AppendMetaResponse;

                /**
                 * Creates a plain object from an AppendMetaResponse message. Also converts values to other types if specified.
                 * @param message AppendMetaResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.AppendMetaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AppendMetaResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BootStatus. */
            interface IBootStatus {

                /** BootStatus stage */
                stage?: (replit.goval.api.BootStatus.Stage|null);

                /** BootStatus progress */
                progress?: (number|null);

                /** BootStatus total */
                total?: (number|null);
            }

            /** Represents a BootStatus. */
            class BootStatus {

                /**
                 * Constructs a new BootStatus.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IBootStatus);

                /** BootStatus stage. */
                public stage: replit.goval.api.BootStatus.Stage;

                /** BootStatus progress. */
                public progress: number;

                /** BootStatus total. */
                public total: number;

                /**
                 * Creates a new BootStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns BootStatus instance
                 */
                public static create(properties?: replit.goval.api.IBootStatus): replit.goval.api.BootStatus;

                /**
                 * Encodes the specified BootStatus message. Does not implicitly {@link replit.goval.api.BootStatus.verify|verify} messages.
                 * @param message BootStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.BootStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BootStatus message, length delimited. Does not implicitly {@link replit.goval.api.BootStatus.verify|verify} messages.
                 * @param message BootStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.BootStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BootStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BootStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.BootStatus;

                /**
                 * Decodes a BootStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BootStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.BootStatus;

                /**
                 * Verifies a BootStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BootStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BootStatus
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.BootStatus;

                /**
                 * Creates a plain object from a BootStatus message. Also converts values to other types if specified.
                 * @param message BootStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.BootStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BootStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace BootStatus {

                /** Stage enum. */
                enum Stage {
                    HANDSHAKE = 0,
                    ACQUIRING = 3,
                    COMPLETE = 4,
                    PROXY = 5,
                    PULL_FILES = 6,
                    LOAD_BLOCK = 7,
                    RETRY = 8
                }
            }

            /** Properties of a Pid1Config. */
            interface IPid1Config {

                /** Pid1Config cwd */
                cwd?: (string|null);

                /** Pid1Config language */
                language?: (string|null);

                /** Pid1Config env */
                env?: ({ [k: string]: string }|null);

                /** Pid1Config noStore */
                noStore?: (boolean|null);

                /** Pid1Config noninteractiveFSChange */
                noninteractiveFSChange?: (boolean|null);
            }

            /** Represents a Pid1Config. */
            class Pid1Config {

                /**
                 * Constructs a new Pid1Config.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPid1Config);

                /** Pid1Config cwd. */
                public cwd: string;

                /** Pid1Config language. */
                public language: string;

                /** Pid1Config env. */
                public env: { [k: string]: string };

                /** Pid1Config noStore. */
                public noStore: boolean;

                /** Pid1Config noninteractiveFSChange. */
                public noninteractiveFSChange: boolean;

                /**
                 * Creates a new Pid1Config instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Pid1Config instance
                 */
                public static create(properties?: replit.goval.api.IPid1Config): replit.goval.api.Pid1Config;

                /**
                 * Encodes the specified Pid1Config message. Does not implicitly {@link replit.goval.api.Pid1Config.verify|verify} messages.
                 * @param message Pid1Config message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Pid1Config, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Pid1Config message, length delimited. Does not implicitly {@link replit.goval.api.Pid1Config.verify|verify} messages.
                 * @param message Pid1Config message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Pid1Config, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Pid1Config message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Pid1Config
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Pid1Config;

                /**
                 * Decodes a Pid1Config message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Pid1Config
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Pid1Config;

                /**
                 * Verifies a Pid1Config message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Pid1Config message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Pid1Config
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Pid1Config;

                /**
                 * Creates a plain object from a Pid1Config message. Also converts values to other types if specified.
                 * @param message Pid1Config
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Pid1Config, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Pid1Config to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FSLock. */
            interface IFSLock {

                /** FSLock name */
                name?: (string|null);
            }

            /** Represents a FSLock. */
            class FSLock {

                /**
                 * Constructs a new FSLock.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFSLock);

                /** FSLock name. */
                public name: string;

                /**
                 * Creates a new FSLock instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FSLock instance
                 */
                public static create(properties?: replit.goval.api.IFSLock): replit.goval.api.FSLock;

                /**
                 * Encodes the specified FSLock message. Does not implicitly {@link replit.goval.api.FSLock.verify|verify} messages.
                 * @param message FSLock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FSLock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FSLock message, length delimited. Does not implicitly {@link replit.goval.api.FSLock.verify|verify} messages.
                 * @param message FSLock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FSLock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FSLock message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FSLock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FSLock;

                /**
                 * Decodes a FSLock message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FSLock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FSLock;

                /**
                 * Verifies a FSLock message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FSLock message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FSLock
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FSLock;

                /**
                 * Creates a plain object from a FSLock message. Also converts values to other types if specified.
                 * @param message FSLock
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FSLock, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FSLock to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FSSnapshot. */
            interface IFSSnapshot {
            }

            /** Represents a FSSnapshot. */
            class FSSnapshot {

                /**
                 * Constructs a new FSSnapshot.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFSSnapshot);

                /**
                 * Creates a new FSSnapshot instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FSSnapshot instance
                 */
                public static create(properties?: replit.goval.api.IFSSnapshot): replit.goval.api.FSSnapshot;

                /**
                 * Encodes the specified FSSnapshot message. Does not implicitly {@link replit.goval.api.FSSnapshot.verify|verify} messages.
                 * @param message FSSnapshot message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FSSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FSSnapshot message, length delimited. Does not implicitly {@link replit.goval.api.FSSnapshot.verify|verify} messages.
                 * @param message FSSnapshot message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FSSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FSSnapshot message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FSSnapshot
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FSSnapshot;

                /**
                 * Decodes a FSSnapshot message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FSSnapshot
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FSSnapshot;

                /**
                 * Verifies a FSSnapshot message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FSSnapshot message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FSSnapshot
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FSSnapshot;

                /**
                 * Creates a plain object from a FSSnapshot message. Also converts values to other types if specified.
                 * @param message FSSnapshot
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FSSnapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FSSnapshot to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FSSnapshotEvent. */
            interface IFSSnapshotEvent {

                /** FSSnapshotEvent sources */
                sources?: (string[]|null);
            }

            /** Represents a FSSnapshotEvent. */
            class FSSnapshotEvent {

                /**
                 * Constructs a new FSSnapshotEvent.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFSSnapshotEvent);

                /** FSSnapshotEvent sources. */
                public sources: string[];

                /**
                 * Creates a new FSSnapshotEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FSSnapshotEvent instance
                 */
                public static create(properties?: replit.goval.api.IFSSnapshotEvent): replit.goval.api.FSSnapshotEvent;

                /**
                 * Encodes the specified FSSnapshotEvent message. Does not implicitly {@link replit.goval.api.FSSnapshotEvent.verify|verify} messages.
                 * @param message FSSnapshotEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FSSnapshotEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FSSnapshotEvent message, length delimited. Does not implicitly {@link replit.goval.api.FSSnapshotEvent.verify|verify} messages.
                 * @param message FSSnapshotEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FSSnapshotEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FSSnapshotEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FSSnapshotEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FSSnapshotEvent;

                /**
                 * Decodes a FSSnapshotEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FSSnapshotEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FSSnapshotEvent;

                /**
                 * Verifies a FSSnapshotEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FSSnapshotEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FSSnapshotEvent
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FSSnapshotEvent;

                /**
                 * Creates a plain object from a FSSnapshotEvent message. Also converts values to other types if specified.
                 * @param message FSSnapshotEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FSSnapshotEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FSSnapshotEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SnapshotEvent. */
            interface ISnapshotEvent {

                /** SnapshotEvent sources */
                sources?: (string[]|null);
            }

            /** Represents a SnapshotEvent. */
            class SnapshotEvent {

                /**
                 * Constructs a new SnapshotEvent.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ISnapshotEvent);

                /** SnapshotEvent sources. */
                public sources: string[];

                /**
                 * Creates a new SnapshotEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SnapshotEvent instance
                 */
                public static create(properties?: replit.goval.api.ISnapshotEvent): replit.goval.api.SnapshotEvent;

                /**
                 * Encodes the specified SnapshotEvent message. Does not implicitly {@link replit.goval.api.SnapshotEvent.verify|verify} messages.
                 * @param message SnapshotEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.SnapshotEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SnapshotEvent message, length delimited. Does not implicitly {@link replit.goval.api.SnapshotEvent.verify|verify} messages.
                 * @param message SnapshotEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.SnapshotEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SnapshotEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SnapshotEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.SnapshotEvent;

                /**
                 * Decodes a SnapshotEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SnapshotEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.SnapshotEvent;

                /**
                 * Verifies a SnapshotEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SnapshotEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SnapshotEvent
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.SnapshotEvent;

                /**
                 * Creates a plain object from a SnapshotEvent message. Also converts values to other types if specified.
                 * @param message SnapshotEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.SnapshotEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SnapshotEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SubscribeFile. */
            interface ISubscribeFile {

                /** SubscribeFile files */
                files?: ((replit.goval.api.File|replit.goval.api.IFile)[]|null);
            }

            /** Represents a SubscribeFile. */
            class SubscribeFile {

                /**
                 * Constructs a new SubscribeFile.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ISubscribeFile);

                /** SubscribeFile files. */
                public files: replit.goval.api.File[];

                /**
                 * Creates a new SubscribeFile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SubscribeFile instance
                 */
                public static create(properties?: replit.goval.api.ISubscribeFile): replit.goval.api.SubscribeFile;

                /**
                 * Encodes the specified SubscribeFile message. Does not implicitly {@link replit.goval.api.SubscribeFile.verify|verify} messages.
                 * @param message SubscribeFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.SubscribeFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SubscribeFile message, length delimited. Does not implicitly {@link replit.goval.api.SubscribeFile.verify|verify} messages.
                 * @param message SubscribeFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.SubscribeFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SubscribeFile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SubscribeFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.SubscribeFile;

                /**
                 * Decodes a SubscribeFile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SubscribeFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.SubscribeFile;

                /**
                 * Verifies a SubscribeFile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SubscribeFile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SubscribeFile
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.SubscribeFile;

                /**
                 * Creates a plain object from a SubscribeFile message. Also converts values to other types if specified.
                 * @param message SubscribeFile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.SubscribeFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SubscribeFile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FileEvent. */
            interface IFileEvent {

                /** FileEvent file */
                file?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** FileEvent dest */
                dest?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** FileEvent op */
                op?: (replit.goval.api.FileEvent.Op|null);
            }

            /** Represents a FileEvent. */
            class FileEvent {

                /**
                 * Constructs a new FileEvent.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFileEvent);

                /** FileEvent file. */
                public file?: (replit.goval.api.File|null);

                /** FileEvent dest. */
                public dest?: (replit.goval.api.File|null);

                /** FileEvent op. */
                public op: replit.goval.api.FileEvent.Op;

                /**
                 * Creates a new FileEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FileEvent instance
                 */
                public static create(properties?: replit.goval.api.IFileEvent): replit.goval.api.FileEvent;

                /**
                 * Encodes the specified FileEvent message. Does not implicitly {@link replit.goval.api.FileEvent.verify|verify} messages.
                 * @param message FileEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FileEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FileEvent message, length delimited. Does not implicitly {@link replit.goval.api.FileEvent.verify|verify} messages.
                 * @param message FileEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FileEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FileEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FileEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FileEvent;

                /**
                 * Decodes a FileEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FileEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FileEvent;

                /**
                 * Verifies a FileEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FileEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FileEvent
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FileEvent;

                /**
                 * Creates a plain object from a FileEvent message. Also converts values to other types if specified.
                 * @param message FileEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FileEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FileEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace FileEvent {

                /** Op enum. */
                enum Op {
                    Create = 0,
                    Move = 1,
                    Remove = 2,
                    Modify = 3
                }
            }

            /** Properties of a Flush. */
            interface IFlush {

                /** Flush consistency */
                consistency?: (replit.goval.api.Flush.Consistency|null);
            }

            /** Represents a Flush. */
            class Flush {

                /**
                 * Constructs a new Flush.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFlush);

                /** Flush consistency. */
                public consistency: replit.goval.api.Flush.Consistency;

                /**
                 * Creates a new Flush instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Flush instance
                 */
                public static create(properties?: replit.goval.api.IFlush): replit.goval.api.Flush;

                /**
                 * Encodes the specified Flush message. Does not implicitly {@link replit.goval.api.Flush.verify|verify} messages.
                 * @param message Flush message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Flush, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Flush message, length delimited. Does not implicitly {@link replit.goval.api.Flush.verify|verify} messages.
                 * @param message Flush message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Flush, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Flush message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Flush
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Flush;

                /**
                 * Decodes a Flush message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Flush
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Flush;

                /**
                 * Verifies a Flush message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Flush message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Flush
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Flush;

                /**
                 * Creates a plain object from a Flush message. Also converts values to other types if specified.
                 * @param message Flush
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Flush, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Flush to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace Flush {

                /** Consistency enum. */
                enum Consistency {
                    PermanentStorage = 0,
                    Disk = 1
                }
            }

            /** Properties of a OTLinkFile. */
            interface IOTLinkFile {

                /** OTLinkFile file */
                file?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** OTLinkFile highConsistency */
                highConsistency?: (boolean|null);

                /** OTLinkFile OBSOLETEUseModTime */
                OBSOLETEUseModTime?: (boolean|null);
            }

            /** Represents a OTLinkFile. */
            class OTLinkFile {

                /**
                 * Constructs a new OTLinkFile.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTLinkFile);

                /** OTLinkFile file. */
                public file?: (replit.goval.api.File|null);

                /** OTLinkFile highConsistency. */
                public highConsistency: boolean;

                /** OTLinkFile OBSOLETEUseModTime. */
                public OBSOLETEUseModTime: boolean;

                /**
                 * Creates a new OTLinkFile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTLinkFile instance
                 */
                public static create(properties?: replit.goval.api.IOTLinkFile): replit.goval.api.OTLinkFile;

                /**
                 * Encodes the specified OTLinkFile message. Does not implicitly {@link replit.goval.api.OTLinkFile.verify|verify} messages.
                 * @param message OTLinkFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTLinkFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTLinkFile message, length delimited. Does not implicitly {@link replit.goval.api.OTLinkFile.verify|verify} messages.
                 * @param message OTLinkFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTLinkFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTLinkFile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTLinkFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTLinkFile;

                /**
                 * Decodes a OTLinkFile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTLinkFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTLinkFile;

                /**
                 * Verifies a OTLinkFile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTLinkFile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTLinkFile
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTLinkFile;

                /**
                 * Creates a plain object from a OTLinkFile message. Also converts values to other types if specified.
                 * @param message OTLinkFile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTLinkFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTLinkFile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTLinkFileResponse. */
            interface IOTLinkFileResponse {

                /** OTLinkFileResponse version */
                version?: (number|null);

                /** OTLinkFileResponse linkedFile */
                linkedFile?: (replit.goval.api.File|replit.goval.api.IFile|null);
            }

            /** Represents a OTLinkFileResponse. */
            class OTLinkFileResponse {

                /**
                 * Constructs a new OTLinkFileResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTLinkFileResponse);

                /** OTLinkFileResponse version. */
                public version: number;

                /** OTLinkFileResponse linkedFile. */
                public linkedFile?: (replit.goval.api.File|null);

                /**
                 * Creates a new OTLinkFileResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTLinkFileResponse instance
                 */
                public static create(properties?: replit.goval.api.IOTLinkFileResponse): replit.goval.api.OTLinkFileResponse;

                /**
                 * Encodes the specified OTLinkFileResponse message. Does not implicitly {@link replit.goval.api.OTLinkFileResponse.verify|verify} messages.
                 * @param message OTLinkFileResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTLinkFileResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTLinkFileResponse message, length delimited. Does not implicitly {@link replit.goval.api.OTLinkFileResponse.verify|verify} messages.
                 * @param message OTLinkFileResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTLinkFileResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTLinkFileResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTLinkFileResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTLinkFileResponse;

                /**
                 * Decodes a OTLinkFileResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTLinkFileResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTLinkFileResponse;

                /**
                 * Verifies a OTLinkFileResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTLinkFileResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTLinkFileResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTLinkFileResponse;

                /**
                 * Creates a plain object from a OTLinkFileResponse message. Also converts values to other types if specified.
                 * @param message OTLinkFileResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTLinkFileResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTLinkFileResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Auth. */
            interface IAuth {

                /** Auth token */
                token?: (string|null);

                /** Auth containerID */
                containerID?: (string|null);
            }

            /** Represents an Auth. */
            class Auth {

                /**
                 * Constructs a new Auth.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAuth);

                /** Auth token. */
                public token: string;

                /** Auth containerID. */
                public containerID: string;

                /**
                 * Creates a new Auth instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Auth instance
                 */
                public static create(properties?: replit.goval.api.IAuth): replit.goval.api.Auth;

                /**
                 * Encodes the specified Auth message. Does not implicitly {@link replit.goval.api.Auth.verify|verify} messages.
                 * @param message Auth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Auth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Auth message, length delimited. Does not implicitly {@link replit.goval.api.Auth.verify|verify} messages.
                 * @param message Auth message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Auth, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Auth message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Auth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Auth;

                /**
                 * Decodes an Auth message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Auth
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Auth;

                /**
                 * Verifies an Auth message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Auth message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Auth
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Auth;

                /**
                 * Creates a plain object from an Auth message. Also converts values to other types if specified.
                 * @param message Auth
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Auth, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Auth to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a VCREntry. */
            interface IVCREntry {

                /** VCREntry timestamp */
                timestamp?: (number|null);

                /** VCREntry direction */
                direction?: (replit.goval.api.VCREntry.Direction|null);

                /** VCREntry command */
                command?: (replit.goval.api.Command|replit.goval.api.ICommand|null);

                /** VCREntry uid */
                uid?: (string|null);

                /** VCREntry replid */
                replid?: (string|null);
            }

            /** Represents a VCREntry. */
            class VCREntry {

                /**
                 * Constructs a new VCREntry.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IVCREntry);

                /** VCREntry timestamp. */
                public timestamp: number;

                /** VCREntry direction. */
                public direction: replit.goval.api.VCREntry.Direction;

                /** VCREntry command. */
                public command?: (replit.goval.api.Command|null);

                /** VCREntry uid. */
                public uid: string;

                /** VCREntry replid. */
                public replid: string;

                /**
                 * Creates a new VCREntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VCREntry instance
                 */
                public static create(properties?: replit.goval.api.IVCREntry): replit.goval.api.VCREntry;

                /**
                 * Encodes the specified VCREntry message. Does not implicitly {@link replit.goval.api.VCREntry.verify|verify} messages.
                 * @param message VCREntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.VCREntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VCREntry message, length delimited. Does not implicitly {@link replit.goval.api.VCREntry.verify|verify} messages.
                 * @param message VCREntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.VCREntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VCREntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VCREntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.VCREntry;

                /**
                 * Decodes a VCREntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VCREntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.VCREntry;

                /**
                 * Verifies a VCREntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VCREntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VCREntry
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.VCREntry;

                /**
                 * Creates a plain object from a VCREntry message. Also converts values to other types if specified.
                 * @param message VCREntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.VCREntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VCREntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace VCREntry {

                /** Direction enum. */
                enum Direction {
                    IN = 0,
                    OUT = 1
                }
            }

            /** Properties of a StartVCR. */
            interface IStartVCR {
            }

            /** Represents a StartVCR. */
            class StartVCR {

                /**
                 * Constructs a new StartVCR.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IStartVCR);

                /**
                 * Creates a new StartVCR instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StartVCR instance
                 */
                public static create(properties?: replit.goval.api.IStartVCR): replit.goval.api.StartVCR;

                /**
                 * Encodes the specified StartVCR message. Does not implicitly {@link replit.goval.api.StartVCR.verify|verify} messages.
                 * @param message StartVCR message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.StartVCR, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StartVCR message, length delimited. Does not implicitly {@link replit.goval.api.StartVCR.verify|verify} messages.
                 * @param message StartVCR message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.StartVCR, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StartVCR message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StartVCR
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.StartVCR;

                /**
                 * Decodes a StartVCR message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StartVCR
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.StartVCR;

                /**
                 * Verifies a StartVCR message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StartVCR message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StartVCR
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.StartVCR;

                /**
                 * Creates a plain object from a StartVCR message. Also converts values to other types if specified.
                 * @param message StartVCR
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.StartVCR, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StartVCR to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReadVCR. */
            interface IReadVCR {
            }

            /** Represents a ReadVCR. */
            class ReadVCR {

                /**
                 * Constructs a new ReadVCR.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReadVCR);

                /**
                 * Creates a new ReadVCR instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReadVCR instance
                 */
                public static create(properties?: replit.goval.api.IReadVCR): replit.goval.api.ReadVCR;

                /**
                 * Encodes the specified ReadVCR message. Does not implicitly {@link replit.goval.api.ReadVCR.verify|verify} messages.
                 * @param message ReadVCR message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReadVCR, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReadVCR message, length delimited. Does not implicitly {@link replit.goval.api.ReadVCR.verify|verify} messages.
                 * @param message ReadVCR message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReadVCR, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReadVCR message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReadVCR
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReadVCR;

                /**
                 * Decodes a ReadVCR message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReadVCR
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReadVCR;

                /**
                 * Verifies a ReadVCR message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReadVCR message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReadVCR
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReadVCR;

                /**
                 * Creates a plain object from a ReadVCR message. Also converts values to other types if specified.
                 * @param message ReadVCR
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReadVCR, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReadVCR to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a VCRLog. */
            interface IVCRLog {

                /** VCRLog log */
                log?: ((replit.goval.api.VCREntry|replit.goval.api.IVCREntry)[]|null);

                /** VCRLog logfile */
                logfile?: (replit.goval.api.File|replit.goval.api.IFile|null);
            }

            /** Represents a VCRLog. */
            class VCRLog {

                /**
                 * Constructs a new VCRLog.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IVCRLog);

                /** VCRLog log. */
                public log: replit.goval.api.VCREntry[];

                /** VCRLog logfile. */
                public logfile?: (replit.goval.api.File|null);

                /**
                 * Creates a new VCRLog instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VCRLog instance
                 */
                public static create(properties?: replit.goval.api.IVCRLog): replit.goval.api.VCRLog;

                /**
                 * Encodes the specified VCRLog message. Does not implicitly {@link replit.goval.api.VCRLog.verify|verify} messages.
                 * @param message VCRLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.VCRLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VCRLog message, length delimited. Does not implicitly {@link replit.goval.api.VCRLog.verify|verify} messages.
                 * @param message VCRLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.VCRLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VCRLog message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VCRLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.VCRLog;

                /**
                 * Decodes a VCRLog message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VCRLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.VCRLog;

                /**
                 * Verifies a VCRLog message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VCRLog message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VCRLog
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.VCRLog;

                /**
                 * Creates a plain object from a VCRLog message. Also converts values to other types if specified.
                 * @param message VCRLog
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.VCRLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VCRLog to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ExecInfo. */
            interface IExecInfo {

                /** ExecInfo command */
                command?: (string[]|null);

                /** ExecInfo reason */
                reason?: (string|null);
            }

            /** Represents an ExecInfo. */
            class ExecInfo {

                /**
                 * Constructs a new ExecInfo.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IExecInfo);

                /** ExecInfo command. */
                public command: string[];

                /** ExecInfo reason. */
                public reason: string;

                /**
                 * Creates a new ExecInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExecInfo instance
                 */
                public static create(properties?: replit.goval.api.IExecInfo): replit.goval.api.ExecInfo;

                /**
                 * Encodes the specified ExecInfo message. Does not implicitly {@link replit.goval.api.ExecInfo.verify|verify} messages.
                 * @param message ExecInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ExecInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExecInfo message, length delimited. Does not implicitly {@link replit.goval.api.ExecInfo.verify|verify} messages.
                 * @param message ExecInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ExecInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExecInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExecInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ExecInfo;

                /**
                 * Decodes an ExecInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExecInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ExecInfo;

                /**
                 * Verifies an ExecInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExecInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExecInfo
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ExecInfo;

                /**
                 * Creates a plain object from an ExecInfo message. Also converts values to other types if specified.
                 * @param message ExecInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ExecInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExecInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Debug. */
            interface IDebug {

                /** Debug text */
                text?: (string|null);
            }

            /** Represents a Debug. */
            class Debug {

                /**
                 * Constructs a new Debug.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebug);

                /** Debug text. */
                public text: string;

                /**
                 * Creates a new Debug instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Debug instance
                 */
                public static create(properties?: replit.goval.api.IDebug): replit.goval.api.Debug;

                /**
                 * Encodes the specified Debug message. Does not implicitly {@link replit.goval.api.Debug.verify|verify} messages.
                 * @param message Debug message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Debug, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Debug message, length delimited. Does not implicitly {@link replit.goval.api.Debug.verify|verify} messages.
                 * @param message Debug message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Debug, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Debug message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Debug
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Debug;

                /**
                 * Decodes a Debug message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Debug
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Debug;

                /**
                 * Verifies a Debug message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Debug message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Debug
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Debug;

                /**
                 * Creates a plain object from a Debug message. Also converts values to other types if specified.
                 * @param message Debug
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Debug, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Debug to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** FileAuthMethod enum. */
            enum FileAuthMethod {
                GET = 0,
                HEAD = 1,
                PUT = 2,
                DELETE = 3
            }

            /** Properties of a FileAuthReq. */
            interface IFileAuthReq {

                /** FileAuthReq file */
                file?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** FileAuthReq method */
                method?: (replit.goval.api.FileAuthMethod|null);
            }

            /** Represents a FileAuthReq. */
            class FileAuthReq {

                /**
                 * Constructs a new FileAuthReq.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFileAuthReq);

                /** FileAuthReq file. */
                public file?: (replit.goval.api.File|null);

                /** FileAuthReq method. */
                public method: replit.goval.api.FileAuthMethod;

                /**
                 * Creates a new FileAuthReq instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FileAuthReq instance
                 */
                public static create(properties?: replit.goval.api.IFileAuthReq): replit.goval.api.FileAuthReq;

                /**
                 * Encodes the specified FileAuthReq message. Does not implicitly {@link replit.goval.api.FileAuthReq.verify|verify} messages.
                 * @param message FileAuthReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FileAuthReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FileAuthReq message, length delimited. Does not implicitly {@link replit.goval.api.FileAuthReq.verify|verify} messages.
                 * @param message FileAuthReq message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FileAuthReq, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FileAuthReq message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FileAuthReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FileAuthReq;

                /**
                 * Decodes a FileAuthReq message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FileAuthReq
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FileAuthReq;

                /**
                 * Verifies a FileAuthReq message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FileAuthReq message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FileAuthReq
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FileAuthReq;

                /**
                 * Creates a plain object from a FileAuthReq message. Also converts values to other types if specified.
                 * @param message FileAuthReq
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FileAuthReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FileAuthReq to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MultiFileAuthRes. */
            interface IMultiFileAuthRes {

                /** MultiFileAuthRes put */
                put?: (replit.goval.api.FileAuthRes|replit.goval.api.IFileAuthRes|null);

                /** MultiFileAuthRes del */
                del?: (replit.goval.api.FileAuthRes|replit.goval.api.IFileAuthRes|null);

                /** MultiFileAuthRes get */
                get?: (replit.goval.api.FileAuthRes|replit.goval.api.IFileAuthRes|null);
            }

            /** Represents a MultiFileAuthRes. */
            class MultiFileAuthRes {

                /**
                 * Constructs a new MultiFileAuthRes.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IMultiFileAuthRes);

                /** MultiFileAuthRes put. */
                public put?: (replit.goval.api.FileAuthRes|null);

                /** MultiFileAuthRes del. */
                public del?: (replit.goval.api.FileAuthRes|null);

                /** MultiFileAuthRes get. */
                public get?: (replit.goval.api.FileAuthRes|null);

                /**
                 * Creates a new MultiFileAuthRes instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MultiFileAuthRes instance
                 */
                public static create(properties?: replit.goval.api.IMultiFileAuthRes): replit.goval.api.MultiFileAuthRes;

                /**
                 * Encodes the specified MultiFileAuthRes message. Does not implicitly {@link replit.goval.api.MultiFileAuthRes.verify|verify} messages.
                 * @param message MultiFileAuthRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.MultiFileAuthRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MultiFileAuthRes message, length delimited. Does not implicitly {@link replit.goval.api.MultiFileAuthRes.verify|verify} messages.
                 * @param message MultiFileAuthRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.MultiFileAuthRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MultiFileAuthRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MultiFileAuthRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.MultiFileAuthRes;

                /**
                 * Decodes a MultiFileAuthRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MultiFileAuthRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.MultiFileAuthRes;

                /**
                 * Verifies a MultiFileAuthRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MultiFileAuthRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MultiFileAuthRes
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.MultiFileAuthRes;

                /**
                 * Creates a plain object from a MultiFileAuthRes message. Also converts values to other types if specified.
                 * @param message MultiFileAuthRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.MultiFileAuthRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MultiFileAuthRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FileAuthRes. */
            interface IFileAuthRes {

                /** FileAuthRes file */
                file?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** FileAuthRes url */
                url?: (string|null);

                /** FileAuthRes method */
                method?: (replit.goval.api.FileAuthMethod|null);

                /** FileAuthRes expire */
                expire?: (number|null);

                /** FileAuthRes error */
                error?: (string|null);

                /** FileAuthRes replError */
                replError?: (boolean|null);
            }

            /** Represents a FileAuthRes. */
            class FileAuthRes {

                /**
                 * Constructs a new FileAuthRes.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFileAuthRes);

                /** FileAuthRes file. */
                public file?: (replit.goval.api.File|null);

                /** FileAuthRes url. */
                public url: string;

                /** FileAuthRes method. */
                public method: replit.goval.api.FileAuthMethod;

                /** FileAuthRes expire. */
                public expire: number;

                /** FileAuthRes error. */
                public error: string;

                /** FileAuthRes replError. */
                public replError: boolean;

                /**
                 * Creates a new FileAuthRes instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FileAuthRes instance
                 */
                public static create(properties?: replit.goval.api.IFileAuthRes): replit.goval.api.FileAuthRes;

                /**
                 * Encodes the specified FileAuthRes message. Does not implicitly {@link replit.goval.api.FileAuthRes.verify|verify} messages.
                 * @param message FileAuthRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FileAuthRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FileAuthRes message, length delimited. Does not implicitly {@link replit.goval.api.FileAuthRes.verify|verify} messages.
                 * @param message FileAuthRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FileAuthRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FileAuthRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FileAuthRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FileAuthRes;

                /**
                 * Decodes a FileAuthRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FileAuthRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FileAuthRes;

                /**
                 * Verifies a FileAuthRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FileAuthRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FileAuthRes
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FileAuthRes;

                /**
                 * Creates a plain object from a FileAuthRes message. Also converts values to other types if specified.
                 * @param message FileAuthRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FileAuthRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FileAuthRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListObjects. */
            interface IListObjects {

                /** ListObjects prefix */
                prefix?: (string|null);
            }

            /** Represents a ListObjects. */
            class ListObjects {

                /**
                 * Constructs a new ListObjects.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IListObjects);

                /** ListObjects prefix. */
                public prefix: string;

                /**
                 * Creates a new ListObjects instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ListObjects instance
                 */
                public static create(properties?: replit.goval.api.IListObjects): replit.goval.api.ListObjects;

                /**
                 * Encodes the specified ListObjects message. Does not implicitly {@link replit.goval.api.ListObjects.verify|verify} messages.
                 * @param message ListObjects message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ListObjects, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListObjects message, length delimited. Does not implicitly {@link replit.goval.api.ListObjects.verify|verify} messages.
                 * @param message ListObjects message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ListObjects, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListObjects message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListObjects
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ListObjects;

                /**
                 * Decodes a ListObjects message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListObjects
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ListObjects;

                /**
                 * Verifies a ListObjects message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListObjects message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListObjects
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ListObjects;

                /**
                 * Creates a plain object from a ListObjects message. Also converts values to other types if specified.
                 * @param message ListObjects
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ListObjects, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListObjects to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ListObjectsResp. */
            interface IListObjectsResp {

                /** ListObjectsResp objects */
                objects?: (string[]|null);
            }

            /** Represents a ListObjectsResp. */
            class ListObjectsResp {

                /**
                 * Constructs a new ListObjectsResp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IListObjectsResp);

                /** ListObjectsResp objects. */
                public objects: string[];

                /**
                 * Creates a new ListObjectsResp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ListObjectsResp instance
                 */
                public static create(properties?: replit.goval.api.IListObjectsResp): replit.goval.api.ListObjectsResp;

                /**
                 * Encodes the specified ListObjectsResp message. Does not implicitly {@link replit.goval.api.ListObjectsResp.verify|verify} messages.
                 * @param message ListObjectsResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ListObjectsResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListObjectsResp message, length delimited. Does not implicitly {@link replit.goval.api.ListObjectsResp.verify|verify} messages.
                 * @param message ListObjectsResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ListObjectsResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListObjectsResp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListObjectsResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ListObjectsResp;

                /**
                 * Decodes a ListObjectsResp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListObjectsResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ListObjectsResp;

                /**
                 * Verifies a ListObjectsResp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListObjectsResp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListObjectsResp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ListObjectsResp;

                /**
                 * Creates a plain object from a ListObjectsResp message. Also converts values to other types if specified.
                 * @param message ListObjectsResp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ListObjectsResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListObjectsResp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Disconnect. */
            interface IDisconnect {

                /** Disconnect error */
                error?: (string|null);
            }

            /** Represents a Disconnect. */
            class Disconnect {

                /**
                 * Constructs a new Disconnect.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDisconnect);

                /** Disconnect error. */
                public error: string;

                /**
                 * Creates a new Disconnect instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Disconnect instance
                 */
                public static create(properties?: replit.goval.api.IDisconnect): replit.goval.api.Disconnect;

                /**
                 * Encodes the specified Disconnect message. Does not implicitly {@link replit.goval.api.Disconnect.verify|verify} messages.
                 * @param message Disconnect message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Disconnect, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Disconnect message, length delimited. Does not implicitly {@link replit.goval.api.Disconnect.verify|verify} messages.
                 * @param message Disconnect message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Disconnect, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Disconnect message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Disconnect
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Disconnect;

                /**
                 * Decodes a Disconnect message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Disconnect
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Disconnect;

                /**
                 * Verifies a Disconnect message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Disconnect message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Disconnect
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Disconnect;

                /**
                 * Creates a plain object from a Disconnect message. Also converts values to other types if specified.
                 * @param message Disconnect
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Disconnect, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Disconnect to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Send. */
            interface ISend {

                /** Send buff */
                buff?: (Uint8Array|null);
            }

            /** Represents a Send. */
            class Send {

                /**
                 * Constructs a new Send.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ISend);

                /** Send buff. */
                public buff: Uint8Array;

                /**
                 * Creates a new Send instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Send instance
                 */
                public static create(properties?: replit.goval.api.ISend): replit.goval.api.Send;

                /**
                 * Encodes the specified Send message. Does not implicitly {@link replit.goval.api.Send.verify|verify} messages.
                 * @param message Send message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Send, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Send message, length delimited. Does not implicitly {@link replit.goval.api.Send.verify|verify} messages.
                 * @param message Send message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Send, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Send message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Send
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Send;

                /**
                 * Decodes a Send message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Send
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Send;

                /**
                 * Verifies a Send message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Send message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Send
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Send;

                /**
                 * Creates a plain object from a Send message. Also converts values to other types if specified.
                 * @param message Send
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Send, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Send to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Recv. */
            interface IRecv {

                /** Recv buff */
                buff?: (Uint8Array|null);
            }

            /** Represents a Recv. */
            class Recv {

                /**
                 * Constructs a new Recv.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRecv);

                /** Recv buff. */
                public buff: Uint8Array;

                /**
                 * Creates a new Recv instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Recv instance
                 */
                public static create(properties?: replit.goval.api.IRecv): replit.goval.api.Recv;

                /**
                 * Encodes the specified Recv message. Does not implicitly {@link replit.goval.api.Recv.verify|verify} messages.
                 * @param message Recv message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Recv, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Recv message, length delimited. Does not implicitly {@link replit.goval.api.Recv.verify|verify} messages.
                 * @param message Recv message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Recv, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Recv message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Recv
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Recv;

                /**
                 * Decodes a Recv message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Recv
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Recv;

                /**
                 * Verifies a Recv message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Recv message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Recv
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Recv;

                /**
                 * Creates a plain object from a Recv message. Also converts values to other types if specified.
                 * @param message Recv
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Recv, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Recv to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Connect. */
            interface IConnect {

                /** Connect proto */
                proto?: (string|null);

                /** Connect addr */
                addr?: (string|null);
            }

            /** Represents a Connect. */
            class Connect {

                /**
                 * Constructs a new Connect.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IConnect);

                /** Connect proto. */
                public proto: string;

                /** Connect addr. */
                public addr: string;

                /**
                 * Creates a new Connect instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Connect instance
                 */
                public static create(properties?: replit.goval.api.IConnect): replit.goval.api.Connect;

                /**
                 * Encodes the specified Connect message. Does not implicitly {@link replit.goval.api.Connect.verify|verify} messages.
                 * @param message Connect message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Connect, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Connect message, length delimited. Does not implicitly {@link replit.goval.api.Connect.verify|verify} messages.
                 * @param message Connect message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Connect, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Connect message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Connect
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Connect;

                /**
                 * Decodes a Connect message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Connect
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Connect;

                /**
                 * Verifies a Connect message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Connect message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Connect
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Connect;

                /**
                 * Creates a plain object from a Connect message. Also converts values to other types if specified.
                 * @param message Connect
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Connect, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Connect to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Hint. */
            interface IHint {

                /** Hint text */
                text?: (string|null);
            }

            /** Represents a Hint. */
            class Hint {

                /**
                 * Constructs a new Hint.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IHint);

                /** Hint text. */
                public text: string;

                /**
                 * Creates a new Hint instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Hint instance
                 */
                public static create(properties?: replit.goval.api.IHint): replit.goval.api.Hint;

                /**
                 * Encodes the specified Hint message. Does not implicitly {@link replit.goval.api.Hint.verify|verify} messages.
                 * @param message Hint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Hint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Hint message, length delimited. Does not implicitly {@link replit.goval.api.Hint.verify|verify} messages.
                 * @param message Hint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Hint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Hint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Hint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Hint;

                /**
                 * Decodes a Hint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Hint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Hint;

                /**
                 * Verifies a Hint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Hint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Hint
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Hint;

                /**
                 * Creates a plain object from a Hint message. Also converts values to other types if specified.
                 * @param message Hint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Hint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Hint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Ping. */
            interface IPing {
            }

            /** Represents a Ping. */
            class Ping {

                /**
                 * Constructs a new Ping.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPing);

                /**
                 * Creates a new Ping instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Ping instance
                 */
                public static create(properties?: replit.goval.api.IPing): replit.goval.api.Ping;

                /**
                 * Encodes the specified Ping message. Does not implicitly {@link replit.goval.api.Ping.verify|verify} messages.
                 * @param message Ping message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Ping, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Ping message, length delimited. Does not implicitly {@link replit.goval.api.Ping.verify|verify} messages.
                 * @param message Ping message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Ping, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Ping message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Ping
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Ping;

                /**
                 * Decodes a Ping message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Ping
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Ping;

                /**
                 * Verifies a Ping message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Ping message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Ping
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Ping;

                /**
                 * Creates a plain object from a Ping message. Also converts values to other types if specified.
                 * @param message Ping
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Ping, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Ping to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Pong. */
            interface IPong {
            }

            /** Represents a Pong. */
            class Pong {

                /**
                 * Constructs a new Pong.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPong);

                /**
                 * Creates a new Pong instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Pong instance
                 */
                public static create(properties?: replit.goval.api.IPong): replit.goval.api.Pong;

                /**
                 * Encodes the specified Pong message. Does not implicitly {@link replit.goval.api.Pong.verify|verify} messages.
                 * @param message Pong message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Pong, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Pong message, length delimited. Does not implicitly {@link replit.goval.api.Pong.verify|verify} messages.
                 * @param message Pong message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Pong, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Pong message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Pong
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Pong;

                /**
                 * Decodes a Pong message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Pong
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Pong;

                /**
                 * Verifies a Pong message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Pong message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Pong
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Pong;

                /**
                 * Creates a plain object from a Pong message. Also converts values to other types if specified.
                 * @param message Pong
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Pong, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Pong to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Hello. */
            interface IHello {

                /** Hello userid */
                userid?: (number|null);

                /** Hello username */
                username?: (string|null);

                /** Hello token */
                token?: (string|null);
            }

            /** Represents a Hello. */
            class Hello {

                /**
                 * Constructs a new Hello.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IHello);

                /** Hello userid. */
                public userid: number;

                /** Hello username. */
                public username: string;

                /** Hello token. */
                public token: string;

                /**
                 * Creates a new Hello instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Hello instance
                 */
                public static create(properties?: replit.goval.api.IHello): replit.goval.api.Hello;

                /**
                 * Encodes the specified Hello message. Does not implicitly {@link replit.goval.api.Hello.verify|verify} messages.
                 * @param message Hello message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Hello, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Hello message, length delimited. Does not implicitly {@link replit.goval.api.Hello.verify|verify} messages.
                 * @param message Hello message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Hello, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Hello message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Hello
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Hello;

                /**
                 * Decodes a Hello message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Hello
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Hello;

                /**
                 * Verifies a Hello message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Hello message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Hello
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Hello;

                /**
                 * Creates a plain object from a Hello message. Also converts values to other types if specified.
                 * @param message Hello
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Hello, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Hello to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Goodbye. */
            interface IGoodbye {
            }

            /** Represents a Goodbye. */
            class Goodbye {

                /**
                 * Constructs a new Goodbye.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGoodbye);

                /**
                 * Creates a new Goodbye instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Goodbye instance
                 */
                public static create(properties?: replit.goval.api.IGoodbye): replit.goval.api.Goodbye;

                /**
                 * Encodes the specified Goodbye message. Does not implicitly {@link replit.goval.api.Goodbye.verify|verify} messages.
                 * @param message Goodbye message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Goodbye, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Goodbye message, length delimited. Does not implicitly {@link replit.goval.api.Goodbye.verify|verify} messages.
                 * @param message Goodbye message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Goodbye, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Goodbye message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Goodbye
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Goodbye;

                /**
                 * Decodes a Goodbye message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Goodbye
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Goodbye;

                /**
                 * Verifies a Goodbye message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Goodbye message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Goodbye
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Goodbye;

                /**
                 * Creates a plain object from a Goodbye message. Also converts values to other types if specified.
                 * @param message Goodbye
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Goodbye, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Goodbye to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** State enum. */
            enum State {
                Stopped = 0,
                Running = 1
            }

            /** Properties of a CheckChanges. */
            interface ICheckChanges {
            }

            /** Represents a CheckChanges. */
            class CheckChanges {

                /**
                 * Constructs a new CheckChanges.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ICheckChanges);

                /**
                 * Creates a new CheckChanges instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CheckChanges instance
                 */
                public static create(properties?: replit.goval.api.ICheckChanges): replit.goval.api.CheckChanges;

                /**
                 * Encodes the specified CheckChanges message. Does not implicitly {@link replit.goval.api.CheckChanges.verify|verify} messages.
                 * @param message CheckChanges message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.CheckChanges, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CheckChanges message, length delimited. Does not implicitly {@link replit.goval.api.CheckChanges.verify|verify} messages.
                 * @param message CheckChanges message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.CheckChanges, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CheckChanges message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CheckChanges
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.CheckChanges;

                /**
                 * Decodes a CheckChanges message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CheckChanges
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.CheckChanges;

                /**
                 * Verifies a CheckChanges message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CheckChanges message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CheckChanges
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.CheckChanges;

                /**
                 * Creates a plain object from a CheckChanges message. Also converts values to other types if specified.
                 * @param message CheckChanges
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.CheckChanges, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CheckChanges to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EnsurePackages. */
            interface IEnsurePackages {

                /** EnsurePackages install */
                install?: (boolean|null);

                /** EnsurePackages file */
                file?: (replit.goval.api.File|replit.goval.api.IFile|null);
            }

            /** Represents an EnsurePackages. */
            class EnsurePackages {

                /**
                 * Constructs a new EnsurePackages.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IEnsurePackages);

                /** EnsurePackages install. */
                public install: boolean;

                /** EnsurePackages file. */
                public file?: (replit.goval.api.File|null);

                /**
                 * Creates a new EnsurePackages instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EnsurePackages instance
                 */
                public static create(properties?: replit.goval.api.IEnsurePackages): replit.goval.api.EnsurePackages;

                /**
                 * Encodes the specified EnsurePackages message. Does not implicitly {@link replit.goval.api.EnsurePackages.verify|verify} messages.
                 * @param message EnsurePackages message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.EnsurePackages, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EnsurePackages message, length delimited. Does not implicitly {@link replit.goval.api.EnsurePackages.verify|verify} messages.
                 * @param message EnsurePackages message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.EnsurePackages, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EnsurePackages message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EnsurePackages
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.EnsurePackages;

                /**
                 * Decodes an EnsurePackages message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EnsurePackages
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.EnsurePackages;

                /**
                 * Verifies an EnsurePackages message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EnsurePackages message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EnsurePackages
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.EnsurePackages;

                /**
                 * Creates a plain object from an EnsurePackages message. Also converts values to other types if specified.
                 * @param message EnsurePackages
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.EnsurePackages, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EnsurePackages to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Start. */
            interface IStart {
            }

            /** Represents a Start. */
            class Start {

                /**
                 * Constructs a new Start.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IStart);

                /**
                 * Creates a new Start instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Start instance
                 */
                public static create(properties?: replit.goval.api.IStart): replit.goval.api.Start;

                /**
                 * Encodes the specified Start message. Does not implicitly {@link replit.goval.api.Start.verify|verify} messages.
                 * @param message Start message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Start, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Start message, length delimited. Does not implicitly {@link replit.goval.api.Start.verify|verify} messages.
                 * @param message Start message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Start, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Start message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Start
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Start;

                /**
                 * Decodes a Start message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Start
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Start;

                /**
                 * Verifies a Start message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Start message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Start
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Start;

                /**
                 * Creates a plain object from a Start message. Also converts values to other types if specified.
                 * @param message Start
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Start, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Start to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugStatus. */
            interface IDebugStatus {

                /** DebugStatus done */
                done?: (boolean|null);

                /** DebugStatus stack */
                stack?: ((replit.goval.api.StackFrame|replit.goval.api.IStackFrame)[]|null);
            }

            /** Represents a DebugStatus. */
            class DebugStatus {

                /**
                 * Constructs a new DebugStatus.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugStatus);

                /** DebugStatus done. */
                public done: boolean;

                /** DebugStatus stack. */
                public stack: replit.goval.api.StackFrame[];

                /**
                 * Creates a new DebugStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugStatus instance
                 */
                public static create(properties?: replit.goval.api.IDebugStatus): replit.goval.api.DebugStatus;

                /**
                 * Encodes the specified DebugStatus message. Does not implicitly {@link replit.goval.api.DebugStatus.verify|verify} messages.
                 * @param message DebugStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugStatus message, length delimited. Does not implicitly {@link replit.goval.api.DebugStatus.verify|verify} messages.
                 * @param message DebugStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugStatus;

                /**
                 * Decodes a DebugStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugStatus;

                /**
                 * Verifies a DebugStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugStatus
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugStatus;

                /**
                 * Creates a plain object from a DebugStatus message. Also converts values to other types if specified.
                 * @param message DebugStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a StackFrame. */
            interface IStackFrame {

                /** StackFrame function */
                "function"?: (string|null);

                /** StackFrame line */
                line?: (number|null);
            }

            /** Represents a StackFrame. */
            class StackFrame {

                /**
                 * Constructs a new StackFrame.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IStackFrame);

                /** StackFrame function. */
                public function: string;

                /** StackFrame line. */
                public line: number;

                /**
                 * Creates a new StackFrame instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StackFrame instance
                 */
                public static create(properties?: replit.goval.api.IStackFrame): replit.goval.api.StackFrame;

                /**
                 * Encodes the specified StackFrame message. Does not implicitly {@link replit.goval.api.StackFrame.verify|verify} messages.
                 * @param message StackFrame message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.StackFrame, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StackFrame message, length delimited. Does not implicitly {@link replit.goval.api.StackFrame.verify|verify} messages.
                 * @param message StackFrame message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.StackFrame, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StackFrame message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StackFrame
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.StackFrame;

                /**
                 * Decodes a StackFrame message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StackFrame
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.StackFrame;

                /**
                 * Verifies a StackFrame message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StackFrame message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StackFrame
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.StackFrame;

                /**
                 * Creates a plain object from a StackFrame message. Also converts values to other types if specified.
                 * @param message StackFrame
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.StackFrame, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StackFrame to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ContainedTest. */
            interface IContainedTest {

                /** ContainedTest suite */
                suite?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** ContainedTest project */
                project?: ((replit.goval.api.File|replit.goval.api.IFile)[]|null);
            }

            /** Represents a ContainedTest. */
            class ContainedTest {

                /**
                 * Constructs a new ContainedTest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IContainedTest);

                /** ContainedTest suite. */
                public suite?: (replit.goval.api.File|null);

                /** ContainedTest project. */
                public project: replit.goval.api.File[];

                /**
                 * Creates a new ContainedTest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ContainedTest instance
                 */
                public static create(properties?: replit.goval.api.IContainedTest): replit.goval.api.ContainedTest;

                /**
                 * Encodes the specified ContainedTest message. Does not implicitly {@link replit.goval.api.ContainedTest.verify|verify} messages.
                 * @param message ContainedTest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ContainedTest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContainedTest message, length delimited. Does not implicitly {@link replit.goval.api.ContainedTest.verify|verify} messages.
                 * @param message ContainedTest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ContainedTest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContainedTest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContainedTest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ContainedTest;

                /**
                 * Decodes a ContainedTest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContainedTest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ContainedTest;

                /**
                 * Verifies a ContainedTest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContainedTest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContainedTest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ContainedTest;

                /**
                 * Creates a plain object from a ContainedTest message. Also converts values to other types if specified.
                 * @param message ContainedTest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ContainedTest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContainedTest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TestResult. */
            interface ITestResult {

                /** TestResult passed */
                passed?: (boolean|null);

                /** TestResult stderr */
                stderr?: (string|null);

                /** TestResult fails */
                fails?: ((replit.goval.api.TestFailure|replit.goval.api.ITestFailure)[]|null);
            }

            /** Represents a TestResult. */
            class TestResult {

                /**
                 * Constructs a new TestResult.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITestResult);

                /** TestResult passed. */
                public passed: boolean;

                /** TestResult stderr. */
                public stderr: string;

                /** TestResult fails. */
                public fails: replit.goval.api.TestFailure[];

                /**
                 * Creates a new TestResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TestResult instance
                 */
                public static create(properties?: replit.goval.api.ITestResult): replit.goval.api.TestResult;

                /**
                 * Encodes the specified TestResult message. Does not implicitly {@link replit.goval.api.TestResult.verify|verify} messages.
                 * @param message TestResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TestResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TestResult message, length delimited. Does not implicitly {@link replit.goval.api.TestResult.verify|verify} messages.
                 * @param message TestResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TestResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TestResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TestResult;

                /**
                 * Decodes a TestResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TestResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TestResult;

                /**
                 * Verifies a TestResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TestResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TestResult
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TestResult;

                /**
                 * Creates a plain object from a TestResult message. Also converts values to other types if specified.
                 * @param message TestResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TestResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TestResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TestFailure. */
            interface ITestFailure {

                /** TestFailure name */
                name?: (string|null);

                /** TestFailure trace */
                trace?: (string|null);
            }

            /** Represents a TestFailure. */
            class TestFailure {

                /**
                 * Constructs a new TestFailure.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITestFailure);

                /** TestFailure name. */
                public name: string;

                /** TestFailure trace. */
                public trace: string;

                /**
                 * Creates a new TestFailure instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TestFailure instance
                 */
                public static create(properties?: replit.goval.api.ITestFailure): replit.goval.api.TestFailure;

                /**
                 * Encodes the specified TestFailure message. Does not implicitly {@link replit.goval.api.TestFailure.verify|verify} messages.
                 * @param message TestFailure message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TestFailure, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TestFailure message, length delimited. Does not implicitly {@link replit.goval.api.TestFailure.verify|verify} messages.
                 * @param message TestFailure message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TestFailure, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TestFailure message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TestFailure
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TestFailure;

                /**
                 * Decodes a TestFailure message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TestFailure
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TestFailure;

                /**
                 * Verifies a TestFailure message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TestFailure message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TestFailure
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TestFailure;

                /**
                 * Creates a plain object from a TestFailure message. Also converts values to other types if specified.
                 * @param message TestFailure
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TestFailure, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TestFailure to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ResizeTerm. */
            interface IResizeTerm {

                /** ResizeTerm rows */
                rows?: (number|null);

                /** ResizeTerm cols */
                cols?: (number|null);
            }

            /** Represents a ResizeTerm. */
            class ResizeTerm {

                /**
                 * Constructs a new ResizeTerm.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IResizeTerm);

                /** ResizeTerm rows. */
                public rows: number;

                /** ResizeTerm cols. */
                public cols: number;

                /**
                 * Creates a new ResizeTerm instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ResizeTerm instance
                 */
                public static create(properties?: replit.goval.api.IResizeTerm): replit.goval.api.ResizeTerm;

                /**
                 * Encodes the specified ResizeTerm message. Does not implicitly {@link replit.goval.api.ResizeTerm.verify|verify} messages.
                 * @param message ResizeTerm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ResizeTerm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ResizeTerm message, length delimited. Does not implicitly {@link replit.goval.api.ResizeTerm.verify|verify} messages.
                 * @param message ResizeTerm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ResizeTerm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ResizeTerm message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ResizeTerm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ResizeTerm;

                /**
                 * Decodes a ResizeTerm message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ResizeTerm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ResizeTerm;

                /**
                 * Verifies a ResizeTerm message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ResizeTerm message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ResizeTerm
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ResizeTerm;

                /**
                 * Creates a plain object from a ResizeTerm message. Also converts values to other types if specified.
                 * @param message ResizeTerm
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ResizeTerm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ResizeTerm to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SaneTerm. */
            interface ISaneTerm {
            }

            /** Represents a SaneTerm. */
            class SaneTerm {

                /**
                 * Constructs a new SaneTerm.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ISaneTerm);

                /**
                 * Creates a new SaneTerm instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SaneTerm instance
                 */
                public static create(properties?: replit.goval.api.ISaneTerm): replit.goval.api.SaneTerm;

                /**
                 * Encodes the specified SaneTerm message. Does not implicitly {@link replit.goval.api.SaneTerm.verify|verify} messages.
                 * @param message SaneTerm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.SaneTerm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SaneTerm message, length delimited. Does not implicitly {@link replit.goval.api.SaneTerm.verify|verify} messages.
                 * @param message SaneTerm message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.SaneTerm, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SaneTerm message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SaneTerm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.SaneTerm;

                /**
                 * Decodes a SaneTerm message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SaneTerm
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.SaneTerm;

                /**
                 * Verifies a SaneTerm message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SaneTerm message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SaneTerm
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.SaneTerm;

                /**
                 * Creates a plain object from a SaneTerm message. Also converts values to other types if specified.
                 * @param message SaneTerm
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.SaneTerm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SaneTerm to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LintResults. */
            interface ILintResults {

                /** LintResults results */
                results?: ((replit.goval.api.LintResult|replit.goval.api.ILintResult)[]|null);
            }

            /** Represents a LintResults. */
            class LintResults {

                /**
                 * Constructs a new LintResults.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ILintResults);

                /** LintResults results. */
                public results: replit.goval.api.LintResult[];

                /**
                 * Creates a new LintResults instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns LintResults instance
                 */
                public static create(properties?: replit.goval.api.ILintResults): replit.goval.api.LintResults;

                /**
                 * Encodes the specified LintResults message. Does not implicitly {@link replit.goval.api.LintResults.verify|verify} messages.
                 * @param message LintResults message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.LintResults, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LintResults message, length delimited. Does not implicitly {@link replit.goval.api.LintResults.verify|verify} messages.
                 * @param message LintResults message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.LintResults, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LintResults message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LintResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.LintResults;

                /**
                 * Decodes a LintResults message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LintResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.LintResults;

                /**
                 * Verifies a LintResults message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LintResults message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LintResults
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.LintResults;

                /**
                 * Creates a plain object from a LintResults message. Also converts values to other types if specified.
                 * @param message LintResults
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.LintResults, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LintResults to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LintResult. */
            interface ILintResult {

                /** LintResult text */
                text?: (string|null);

                /** LintResult row */
                row?: (number|null);

                /** LintResult column */
                column?: (number|null);

                /** LintResult type */
                type?: (string|null);
            }

            /** Represents a LintResult. */
            class LintResult {

                /**
                 * Constructs a new LintResult.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ILintResult);

                /** LintResult text. */
                public text: string;

                /** LintResult row. */
                public row: number;

                /** LintResult column. */
                public column: number;

                /** LintResult type. */
                public type: string;

                /**
                 * Creates a new LintResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns LintResult instance
                 */
                public static create(properties?: replit.goval.api.ILintResult): replit.goval.api.LintResult;

                /**
                 * Encodes the specified LintResult message. Does not implicitly {@link replit.goval.api.LintResult.verify|verify} messages.
                 * @param message LintResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.LintResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LintResult message, length delimited. Does not implicitly {@link replit.goval.api.LintResult.verify|verify} messages.
                 * @param message LintResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.LintResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LintResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LintResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.LintResult;

                /**
                 * Decodes a LintResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LintResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.LintResult;

                /**
                 * Verifies a LintResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LintResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LintResult
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.LintResult;

                /**
                 * Creates a plain object from a LintResult message. Also converts values to other types if specified.
                 * @param message LintResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.LintResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LintResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OK. */
            interface IOK {
            }

            /** Represents a OK. */
            class OK {

                /**
                 * Constructs a new OK.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOK);

                /**
                 * Creates a new OK instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OK instance
                 */
                public static create(properties?: replit.goval.api.IOK): replit.goval.api.OK;

                /**
                 * Encodes the specified OK message. Does not implicitly {@link replit.goval.api.OK.verify|verify} messages.
                 * @param message OK message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OK, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OK message, length delimited. Does not implicitly {@link replit.goval.api.OK.verify|verify} messages.
                 * @param message OK message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OK, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OK message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OK
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OK;

                /**
                 * Decodes a OK message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OK
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OK;

                /**
                 * Verifies a OK message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OK message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OK
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OK;

                /**
                 * Creates a plain object from a OK message. Also converts values to other types if specified.
                 * @param message OK
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OK, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OK to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Move. */
            interface IMove {

                /** Move oldPath */
                oldPath?: (string|null);

                /** Move newPath */
                newPath?: (string|null);
            }

            /** Represents a Move. */
            class Move {

                /**
                 * Constructs a new Move.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IMove);

                /** Move oldPath. */
                public oldPath: string;

                /** Move newPath. */
                public newPath: string;

                /**
                 * Creates a new Move instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Move instance
                 */
                public static create(properties?: replit.goval.api.IMove): replit.goval.api.Move;

                /**
                 * Encodes the specified Move message. Does not implicitly {@link replit.goval.api.Move.verify|verify} messages.
                 * @param message Move message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Move, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Move message, length delimited. Does not implicitly {@link replit.goval.api.Move.verify|verify} messages.
                 * @param message Move message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Move, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Move message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Move
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Move;

                /**
                 * Decodes a Move message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Move
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Move;

                /**
                 * Verifies a Move message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Move message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Move
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Move;

                /**
                 * Creates a plain object from a Move message. Also converts values to other types if specified.
                 * @param message Move
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Move, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Move to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Files. */
            interface IFiles {

                /** Files files */
                files?: ((replit.goval.api.File|replit.goval.api.IFile)[]|null);
            }

            /** Represents a Files. */
            class Files {

                /**
                 * Constructs a new Files.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFiles);

                /** Files files. */
                public files: replit.goval.api.File[];

                /**
                 * Creates a new Files instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Files instance
                 */
                public static create(properties?: replit.goval.api.IFiles): replit.goval.api.Files;

                /**
                 * Encodes the specified Files message. Does not implicitly {@link replit.goval.api.Files.verify|verify} messages.
                 * @param message Files message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Files, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Files message, length delimited. Does not implicitly {@link replit.goval.api.Files.verify|verify} messages.
                 * @param message Files message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Files, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Files message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Files
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Files;

                /**
                 * Decodes a Files message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Files
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Files;

                /**
                 * Verifies a Files message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Files message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Files
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Files;

                /**
                 * Creates a plain object from a Files message. Also converts values to other types if specified.
                 * @param message Files
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Files, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Files to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a StatResult. */
            interface IStatResult {

                /** StatResult exists */
                exists?: (boolean|null);

                /** StatResult type */
                type?: (replit.goval.api.File.Type|null);

                /** StatResult size */
                size?: (number|null);

                /** StatResult fileMode */
                fileMode?: (string|null);

                /** StatResult modTime */
                modTime?: (number|null);
            }

            /** Represents a StatResult. */
            class StatResult {

                /**
                 * Constructs a new StatResult.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IStatResult);

                /** StatResult exists. */
                public exists: boolean;

                /** StatResult type. */
                public type: replit.goval.api.File.Type;

                /** StatResult size. */
                public size: number;

                /** StatResult fileMode. */
                public fileMode: string;

                /** StatResult modTime. */
                public modTime: number;

                /**
                 * Creates a new StatResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StatResult instance
                 */
                public static create(properties?: replit.goval.api.IStatResult): replit.goval.api.StatResult;

                /**
                 * Encodes the specified StatResult message. Does not implicitly {@link replit.goval.api.StatResult.verify|verify} messages.
                 * @param message StatResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.StatResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StatResult message, length delimited. Does not implicitly {@link replit.goval.api.StatResult.verify|verify} messages.
                 * @param message StatResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.StatResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StatResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StatResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.StatResult;

                /**
                 * Decodes a StatResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StatResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.StatResult;

                /**
                 * Verifies a StatResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StatResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StatResult
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.StatResult;

                /**
                 * Creates a plain object from a StatResult message. Also converts values to other types if specified.
                 * @param message StatResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.StatResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StatResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a File. */
            interface IFile {

                /** File path */
                path?: (string|null);

                /** File type */
                type?: (replit.goval.api.File.Type|null);

                /** File content */
                content?: (Uint8Array|null);
            }

            /** Represents a File. */
            class File {

                /**
                 * Constructs a new File.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFile);

                /** File path. */
                public path: string;

                /** File type. */
                public type: replit.goval.api.File.Type;

                /** File content. */
                public content: Uint8Array;

                /**
                 * Creates a new File instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns File instance
                 */
                public static create(properties?: replit.goval.api.IFile): replit.goval.api.File;

                /**
                 * Encodes the specified File message. Does not implicitly {@link replit.goval.api.File.verify|verify} messages.
                 * @param message File message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.File, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified File message, length delimited. Does not implicitly {@link replit.goval.api.File.verify|verify} messages.
                 * @param message File message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.File, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a File message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns File
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.File;

                /**
                 * Decodes a File message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns File
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.File;

                /**
                 * Verifies a File message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a File message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns File
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.File;

                /**
                 * Creates a plain object from a File message. Also converts values to other types if specified.
                 * @param message File
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.File, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this File to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace File {

                /** Type enum. */
                enum Type {
                    REGULAR = 0,
                    DIRECTORY = 1
                }
            }

            /** Properties of a Transfer. */
            interface ITransfer {

                /** Transfer id */
                id?: (string|null);
            }

            /** Represents a Transfer. */
            class Transfer {

                /**
                 * Constructs a new Transfer.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITransfer);

                /** Transfer id. */
                public id: string;

                /**
                 * Creates a new Transfer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Transfer instance
                 */
                public static create(properties?: replit.goval.api.ITransfer): replit.goval.api.Transfer;

                /**
                 * Encodes the specified Transfer message. Does not implicitly {@link replit.goval.api.Transfer.verify|verify} messages.
                 * @param message Transfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Transfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Transfer message, length delimited. Does not implicitly {@link replit.goval.api.Transfer.verify|verify} messages.
                 * @param message Transfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Transfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Transfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Transfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Transfer;

                /**
                 * Decodes a Transfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Transfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Transfer;

                /**
                 * Verifies a Transfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Transfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Transfer
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Transfer;

                /**
                 * Creates a plain object from a Transfer message. Also converts values to other types if specified.
                 * @param message Transfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Transfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Transfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TransferStart. */
            interface ITransferStart {

                /** TransferStart path */
                path?: (string|null);

                /** TransferStart size */
                size?: (number|null);
            }

            /** Represents a TransferStart. */
            class TransferStart {

                /**
                 * Constructs a new TransferStart.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITransferStart);

                /** TransferStart path. */
                public path: string;

                /** TransferStart size. */
                public size: number;

                /**
                 * Creates a new TransferStart instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransferStart instance
                 */
                public static create(properties?: replit.goval.api.ITransferStart): replit.goval.api.TransferStart;

                /**
                 * Encodes the specified TransferStart message. Does not implicitly {@link replit.goval.api.TransferStart.verify|verify} messages.
                 * @param message TransferStart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TransferStart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransferStart message, length delimited. Does not implicitly {@link replit.goval.api.TransferStart.verify|verify} messages.
                 * @param message TransferStart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TransferStart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransferStart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransferStart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TransferStart;

                /**
                 * Decodes a TransferStart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransferStart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TransferStart;

                /**
                 * Verifies a TransferStart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransferStart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransferStart
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TransferStart;

                /**
                 * Creates a plain object from a TransferStart message. Also converts values to other types if specified.
                 * @param message TransferStart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TransferStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransferStart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TransferChunk. */
            interface ITransferChunk {

                /** TransferChunk id */
                id?: (string|null);

                /** TransferChunk content */
                content?: (Uint8Array|null);
            }

            /** Represents a TransferChunk. */
            class TransferChunk {

                /**
                 * Constructs a new TransferChunk.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITransferChunk);

                /** TransferChunk id. */
                public id: string;

                /** TransferChunk content. */
                public content: Uint8Array;

                /**
                 * Creates a new TransferChunk instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransferChunk instance
                 */
                public static create(properties?: replit.goval.api.ITransferChunk): replit.goval.api.TransferChunk;

                /**
                 * Encodes the specified TransferChunk message. Does not implicitly {@link replit.goval.api.TransferChunk.verify|verify} messages.
                 * @param message TransferChunk message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TransferChunk, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransferChunk message, length delimited. Does not implicitly {@link replit.goval.api.TransferChunk.verify|verify} messages.
                 * @param message TransferChunk message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TransferChunk, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransferChunk message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransferChunk
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TransferChunk;

                /**
                 * Decodes a TransferChunk message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransferChunk
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TransferChunk;

                /**
                 * Verifies a TransferChunk message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransferChunk message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransferChunk
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TransferChunk;

                /**
                 * Creates a plain object from a TransferChunk message. Also converts values to other types if specified.
                 * @param message TransferChunk
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TransferChunk, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransferChunk to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TransferComplete. */
            interface ITransferComplete {

                /** TransferComplete id */
                id?: (string|null);

                /** TransferComplete crc32 */
                crc32?: (number|null);
            }

            /** Represents a TransferComplete. */
            class TransferComplete {

                /**
                 * Constructs a new TransferComplete.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITransferComplete);

                /** TransferComplete id. */
                public id: string;

                /** TransferComplete crc32. */
                public crc32: number;

                /**
                 * Creates a new TransferComplete instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransferComplete instance
                 */
                public static create(properties?: replit.goval.api.ITransferComplete): replit.goval.api.TransferComplete;

                /**
                 * Encodes the specified TransferComplete message. Does not implicitly {@link replit.goval.api.TransferComplete.verify|verify} messages.
                 * @param message TransferComplete message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TransferComplete, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransferComplete message, length delimited. Does not implicitly {@link replit.goval.api.TransferComplete.verify|verify} messages.
                 * @param message TransferComplete message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TransferComplete, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransferComplete message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransferComplete
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TransferComplete;

                /**
                 * Decodes a TransferComplete message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransferComplete
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TransferComplete;

                /**
                 * Verifies a TransferComplete message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransferComplete message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransferComplete
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TransferComplete;

                /**
                 * Creates a plain object from a TransferComplete message. Also converts values to other types if specified.
                 * @param message TransferComplete
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TransferComplete, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransferComplete to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Clear. */
            interface IClear {
            }

            /** Represents a Clear. */
            class Clear {

                /**
                 * Constructs a new Clear.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IClear);

                /**
                 * Creates a new Clear instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Clear instance
                 */
                public static create(properties?: replit.goval.api.IClear): replit.goval.api.Clear;

                /**
                 * Encodes the specified Clear message. Does not implicitly {@link replit.goval.api.Clear.verify|verify} messages.
                 * @param message Clear message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Clear, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Clear message, length delimited. Does not implicitly {@link replit.goval.api.Clear.verify|verify} messages.
                 * @param message Clear message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Clear, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Clear message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Clear
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Clear;

                /**
                 * Decodes a Clear message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Clear
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Clear;

                /**
                 * Verifies a Clear message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Clear message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Clear
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Clear;

                /**
                 * Creates a plain object from a Clear message. Also converts values to other types if specified.
                 * @param message Clear
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Clear, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Clear to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Toast. */
            interface IToast {

                /** Toast text */
                text?: (string|null);
            }

            /** Represents a Toast. */
            class Toast {

                /**
                 * Constructs a new Toast.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IToast);

                /** Toast text. */
                public text: string;

                /**
                 * Creates a new Toast instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Toast instance
                 */
                public static create(properties?: replit.goval.api.IToast): replit.goval.api.Toast;

                /**
                 * Encodes the specified Toast message. Does not implicitly {@link replit.goval.api.Toast.verify|verify} messages.
                 * @param message Toast message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Toast, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Toast message, length delimited. Does not implicitly {@link replit.goval.api.Toast.verify|verify} messages.
                 * @param message Toast message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Toast, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Toast message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Toast
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Toast;

                /**
                 * Decodes a Toast message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Toast
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Toast;

                /**
                 * Verifies a Toast message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Toast message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Toast
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Toast;

                /**
                 * Creates a plain object from a Toast message. Also converts values to other types if specified.
                 * @param message Toast
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Toast, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Toast to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProtocolError. */
            interface IProtocolError {

                /** ProtocolError text */
                text?: (string|null);
            }

            /** Represents a ProtocolError. */
            class ProtocolError {

                /**
                 * Constructs a new ProtocolError.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IProtocolError);

                /** ProtocolError text. */
                public text: string;

                /**
                 * Creates a new ProtocolError instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ProtocolError instance
                 */
                public static create(properties?: replit.goval.api.IProtocolError): replit.goval.api.ProtocolError;

                /**
                 * Encodes the specified ProtocolError message. Does not implicitly {@link replit.goval.api.ProtocolError.verify|verify} messages.
                 * @param message ProtocolError message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ProtocolError, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProtocolError message, length delimited. Does not implicitly {@link replit.goval.api.ProtocolError.verify|verify} messages.
                 * @param message ProtocolError message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ProtocolError, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProtocolError message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProtocolError
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ProtocolError;

                /**
                 * Decodes a ProtocolError message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProtocolError
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ProtocolError;

                /**
                 * Verifies a ProtocolError message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProtocolError message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProtocolError
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ProtocolError;

                /**
                 * Creates a plain object from a ProtocolError message. Also converts values to other types if specified.
                 * @param message ProtocolError
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ProtocolError, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProtocolError to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Redirect. */
            interface IRedirect {

                /** Redirect url */
                url?: (string|null);
            }

            /** Represents a Redirect. */
            class Redirect {

                /**
                 * Constructs a new Redirect.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRedirect);

                /** Redirect url. */
                public url: string;

                /**
                 * Creates a new Redirect instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Redirect instance
                 */
                public static create(properties?: replit.goval.api.IRedirect): replit.goval.api.Redirect;

                /**
                 * Encodes the specified Redirect message. Does not implicitly {@link replit.goval.api.Redirect.verify|verify} messages.
                 * @param message Redirect message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Redirect, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Redirect message, length delimited. Does not implicitly {@link replit.goval.api.Redirect.verify|verify} messages.
                 * @param message Redirect message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Redirect, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Redirect message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Redirect
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Redirect;

                /**
                 * Decodes a Redirect message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Redirect
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Redirect;

                /**
                 * Verifies a Redirect message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Redirect message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Redirect
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Redirect;

                /**
                 * Creates a plain object from a Redirect message. Also converts values to other types if specified.
                 * @param message Redirect
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Redirect, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Redirect to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AlwaysOn. */
            interface IAlwaysOn {

                /** AlwaysOn enable */
                enable?: (boolean|null);
            }

            /** Represents an AlwaysOn. */
            class AlwaysOn {

                /**
                 * Constructs a new AlwaysOn.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAlwaysOn);

                /** AlwaysOn enable. */
                public enable: boolean;

                /**
                 * Creates a new AlwaysOn instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AlwaysOn instance
                 */
                public static create(properties?: replit.goval.api.IAlwaysOn): replit.goval.api.AlwaysOn;

                /**
                 * Encodes the specified AlwaysOn message. Does not implicitly {@link replit.goval.api.AlwaysOn.verify|verify} messages.
                 * @param message AlwaysOn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.AlwaysOn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AlwaysOn message, length delimited. Does not implicitly {@link replit.goval.api.AlwaysOn.verify|verify} messages.
                 * @param message AlwaysOn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.AlwaysOn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AlwaysOn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AlwaysOn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.AlwaysOn;

                /**
                 * Decodes an AlwaysOn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AlwaysOn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.AlwaysOn;

                /**
                 * Verifies an AlwaysOn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AlwaysOn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AlwaysOn
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.AlwaysOn;

                /**
                 * Creates a plain object from an AlwaysOn message. Also converts values to other types if specified.
                 * @param message AlwaysOn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.AlwaysOn, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AlwaysOn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RunMain. */
            interface IRunMain {

                /** RunMain runMode */
                runMode?: (replit.goval.api.RunMain.RunMode|null);

                /** RunMain idempotent */
                idempotent?: (boolean|null);
            }

            /** Represents a RunMain. */
            class RunMain {

                /**
                 * Constructs a new RunMain.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRunMain);

                /** RunMain runMode. */
                public runMode: replit.goval.api.RunMain.RunMode;

                /** RunMain idempotent. */
                public idempotent: boolean;

                /**
                 * Creates a new RunMain instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RunMain instance
                 */
                public static create(properties?: replit.goval.api.IRunMain): replit.goval.api.RunMain;

                /**
                 * Encodes the specified RunMain message. Does not implicitly {@link replit.goval.api.RunMain.verify|verify} messages.
                 * @param message RunMain message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.RunMain, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RunMain message, length delimited. Does not implicitly {@link replit.goval.api.RunMain.verify|verify} messages.
                 * @param message RunMain message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.RunMain, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RunMain message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RunMain
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.RunMain;

                /**
                 * Decodes a RunMain message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RunMain
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.RunMain;

                /**
                 * Verifies a RunMain message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RunMain message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RunMain
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.RunMain;

                /**
                 * Creates a plain object from a RunMain message. Also converts values to other types if specified.
                 * @param message RunMain
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.RunMain, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RunMain to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace RunMain {

                /** RunMode enum. */
                enum RunMode {
                    RUN = 0,
                    RECORD = 1
                }
            }

            /** Properties of an OpenChannel. */
            interface IOpenChannel {

                /** OpenChannel service */
                service?: (string|null);

                /** OpenChannel name */
                name?: (string|null);

                /** OpenChannel action */
                action?: (replit.goval.api.OpenChannel.Action|null);

                /** OpenChannel id */
                id?: (number|null);
            }

            /** Represents an OpenChannel. */
            class OpenChannel {

                /**
                 * Constructs a new OpenChannel.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOpenChannel);

                /** OpenChannel service. */
                public service: string;

                /** OpenChannel name. */
                public name: string;

                /** OpenChannel action. */
                public action: replit.goval.api.OpenChannel.Action;

                /** OpenChannel id. */
                public id: number;

                /**
                 * Creates a new OpenChannel instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OpenChannel instance
                 */
                public static create(properties?: replit.goval.api.IOpenChannel): replit.goval.api.OpenChannel;

                /**
                 * Encodes the specified OpenChannel message. Does not implicitly {@link replit.goval.api.OpenChannel.verify|verify} messages.
                 * @param message OpenChannel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OpenChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OpenChannel message, length delimited. Does not implicitly {@link replit.goval.api.OpenChannel.verify|verify} messages.
                 * @param message OpenChannel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OpenChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OpenChannel message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OpenChannel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OpenChannel;

                /**
                 * Decodes an OpenChannel message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OpenChannel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OpenChannel;

                /**
                 * Verifies an OpenChannel message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OpenChannel message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OpenChannel
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OpenChannel;

                /**
                 * Creates a plain object from an OpenChannel message. Also converts values to other types if specified.
                 * @param message OpenChannel
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OpenChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OpenChannel to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace OpenChannel {

                /** Action enum. */
                enum Action {
                    CREATE = 0,
                    ATTACH = 1,
                    ATTACH_OR_CREATE = 2
                }
            }

            /** Properties of an OpenChannelRes. */
            interface IOpenChannelRes {

                /** OpenChannelRes id */
                id?: (number|null);

                /** OpenChannelRes state */
                state?: (replit.goval.api.OpenChannelRes.State|null);

                /** OpenChannelRes error */
                error?: (string|null);
            }

            /** Represents an OpenChannelRes. */
            class OpenChannelRes {

                /**
                 * Constructs a new OpenChannelRes.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOpenChannelRes);

                /** OpenChannelRes id. */
                public id: number;

                /** OpenChannelRes state. */
                public state: replit.goval.api.OpenChannelRes.State;

                /** OpenChannelRes error. */
                public error: string;

                /**
                 * Creates a new OpenChannelRes instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OpenChannelRes instance
                 */
                public static create(properties?: replit.goval.api.IOpenChannelRes): replit.goval.api.OpenChannelRes;

                /**
                 * Encodes the specified OpenChannelRes message. Does not implicitly {@link replit.goval.api.OpenChannelRes.verify|verify} messages.
                 * @param message OpenChannelRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OpenChannelRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OpenChannelRes message, length delimited. Does not implicitly {@link replit.goval.api.OpenChannelRes.verify|verify} messages.
                 * @param message OpenChannelRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OpenChannelRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OpenChannelRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OpenChannelRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OpenChannelRes;

                /**
                 * Decodes an OpenChannelRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OpenChannelRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OpenChannelRes;

                /**
                 * Verifies an OpenChannelRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OpenChannelRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OpenChannelRes
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OpenChannelRes;

                /**
                 * Creates a plain object from an OpenChannelRes message. Also converts values to other types if specified.
                 * @param message OpenChannelRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OpenChannelRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OpenChannelRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace OpenChannelRes {

                /** State enum. */
                enum State {
                    CREATED = 0,
                    ATTACHED = 1,
                    ERROR = 2
                }
            }

            /** Properties of a CloseChannel. */
            interface ICloseChannel {

                /** CloseChannel id */
                id?: (number|null);

                /** CloseChannel action */
                action?: (replit.goval.api.CloseChannel.Action|null);
            }

            /** Represents a CloseChannel. */
            class CloseChannel {

                /**
                 * Constructs a new CloseChannel.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ICloseChannel);

                /** CloseChannel id. */
                public id: number;

                /** CloseChannel action. */
                public action: replit.goval.api.CloseChannel.Action;

                /**
                 * Creates a new CloseChannel instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CloseChannel instance
                 */
                public static create(properties?: replit.goval.api.ICloseChannel): replit.goval.api.CloseChannel;

                /**
                 * Encodes the specified CloseChannel message. Does not implicitly {@link replit.goval.api.CloseChannel.verify|verify} messages.
                 * @param message CloseChannel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.CloseChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CloseChannel message, length delimited. Does not implicitly {@link replit.goval.api.CloseChannel.verify|verify} messages.
                 * @param message CloseChannel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.CloseChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CloseChannel message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CloseChannel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.CloseChannel;

                /**
                 * Decodes a CloseChannel message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CloseChannel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.CloseChannel;

                /**
                 * Verifies a CloseChannel message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CloseChannel message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CloseChannel
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.CloseChannel;

                /**
                 * Creates a plain object from a CloseChannel message. Also converts values to other types if specified.
                 * @param message CloseChannel
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.CloseChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CloseChannel to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace CloseChannel {

                /** Action enum. */
                enum Action {
                    DISCONNECT = 0,
                    TRY_CLOSE = 1,
                    CLOSE = 2
                }
            }

            /** Properties of a CloseChannelRes. */
            interface ICloseChannelRes {

                /** CloseChannelRes id */
                id?: (number|null);

                /** CloseChannelRes status */
                status?: (replit.goval.api.CloseChannelRes.Status|null);
            }

            /** Represents a CloseChannelRes. */
            class CloseChannelRes {

                /**
                 * Constructs a new CloseChannelRes.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ICloseChannelRes);

                /** CloseChannelRes id. */
                public id: number;

                /** CloseChannelRes status. */
                public status: replit.goval.api.CloseChannelRes.Status;

                /**
                 * Creates a new CloseChannelRes instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CloseChannelRes instance
                 */
                public static create(properties?: replit.goval.api.ICloseChannelRes): replit.goval.api.CloseChannelRes;

                /**
                 * Encodes the specified CloseChannelRes message. Does not implicitly {@link replit.goval.api.CloseChannelRes.verify|verify} messages.
                 * @param message CloseChannelRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.CloseChannelRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CloseChannelRes message, length delimited. Does not implicitly {@link replit.goval.api.CloseChannelRes.verify|verify} messages.
                 * @param message CloseChannelRes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.CloseChannelRes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CloseChannelRes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CloseChannelRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.CloseChannelRes;

                /**
                 * Decodes a CloseChannelRes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CloseChannelRes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.CloseChannelRes;

                /**
                 * Verifies a CloseChannelRes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CloseChannelRes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CloseChannelRes
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.CloseChannelRes;

                /**
                 * Creates a plain object from a CloseChannelRes message. Also converts values to other types if specified.
                 * @param message CloseChannelRes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.CloseChannelRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CloseChannelRes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace CloseChannelRes {

                /** Status enum. */
                enum Status {
                    DISCONNECT = 0,
                    CLOSE = 1,
                    NOTHING = 2
                }
            }

            /** Properties of a ContainerState. */
            interface IContainerState {

                /** ContainerState state */
                state?: (replit.goval.api.ContainerState.State|null);
            }

            /** Represents a ContainerState. */
            class ContainerState {

                /**
                 * Constructs a new ContainerState.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IContainerState);

                /** ContainerState state. */
                public state: replit.goval.api.ContainerState.State;

                /**
                 * Creates a new ContainerState instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ContainerState instance
                 */
                public static create(properties?: replit.goval.api.IContainerState): replit.goval.api.ContainerState;

                /**
                 * Encodes the specified ContainerState message. Does not implicitly {@link replit.goval.api.ContainerState.verify|verify} messages.
                 * @param message ContainerState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ContainerState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContainerState message, length delimited. Does not implicitly {@link replit.goval.api.ContainerState.verify|verify} messages.
                 * @param message ContainerState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ContainerState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContainerState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContainerState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ContainerState;

                /**
                 * Decodes a ContainerState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContainerState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ContainerState;

                /**
                 * Verifies a ContainerState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContainerState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContainerState
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ContainerState;

                /**
                 * Creates a plain object from a ContainerState message. Also converts values to other types if specified.
                 * @param message ContainerState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ContainerState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContainerState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace ContainerState {

                /** State enum. */
                enum State {
                    SLEEP = 0,
                    READY = 1
                }
            }

            /** Properties of a PortOpen. */
            interface IPortOpen {

                /** PortOpen forwarded */
                forwarded?: (boolean|null);

                /** PortOpen port */
                port?: (number|null);

                /** PortOpen address */
                address?: (string|null);

                /** PortOpen externalPort */
                externalPort?: (number|null);
            }

            /** Represents a PortOpen. */
            class PortOpen {

                /**
                 * Constructs a new PortOpen.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPortOpen);

                /** PortOpen forwarded. */
                public forwarded: boolean;

                /** PortOpen port. */
                public port: number;

                /** PortOpen address. */
                public address: string;

                /** PortOpen externalPort. */
                public externalPort: number;

                /**
                 * Creates a new PortOpen instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PortOpen instance
                 */
                public static create(properties?: replit.goval.api.IPortOpen): replit.goval.api.PortOpen;

                /**
                 * Encodes the specified PortOpen message. Does not implicitly {@link replit.goval.api.PortOpen.verify|verify} messages.
                 * @param message PortOpen message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PortOpen, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PortOpen message, length delimited. Does not implicitly {@link replit.goval.api.PortOpen.verify|verify} messages.
                 * @param message PortOpen message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PortOpen, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PortOpen message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PortOpen
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PortOpen;

                /**
                 * Decodes a PortOpen message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PortOpen
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PortOpen;

                /**
                 * Verifies a PortOpen message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PortOpen message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PortOpen
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PortOpen;

                /**
                 * Creates a plain object from a PortOpen message. Also converts values to other types if specified.
                 * @param message PortOpen
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PortOpen, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PortOpen to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PortClose. */
            interface IPortClose {

                /** PortClose port */
                port?: (number|null);

                /** PortClose address */
                address?: (string|null);

                /** PortClose externalPort */
                externalPort?: (number|null);
            }

            /** Represents a PortClose. */
            class PortClose {

                /**
                 * Constructs a new PortClose.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPortClose);

                /** PortClose port. */
                public port: number;

                /** PortClose address. */
                public address: string;

                /** PortClose externalPort. */
                public externalPort: number;

                /**
                 * Creates a new PortClose instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PortClose instance
                 */
                public static create(properties?: replit.goval.api.IPortClose): replit.goval.api.PortClose;

                /**
                 * Encodes the specified PortClose message. Does not implicitly {@link replit.goval.api.PortClose.verify|verify} messages.
                 * @param message PortClose message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PortClose, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PortClose message, length delimited. Does not implicitly {@link replit.goval.api.PortClose.verify|verify} messages.
                 * @param message PortClose message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PortClose, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PortClose message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PortClose
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PortClose;

                /**
                 * Decodes a PortClose message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PortClose
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PortClose;

                /**
                 * Verifies a PortClose message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PortClose message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PortClose
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PortClose;

                /**
                 * Creates a plain object from a PortClose message. Also converts values to other types if specified.
                 * @param message PortClose
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PortClose, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PortClose to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTFetchRequest. */
            interface IOTFetchRequest {

                /** OTFetchRequest versionFrom */
                versionFrom?: (number|null);

                /** OTFetchRequest versionTo */
                versionTo?: (number|null);
            }

            /** Represents a OTFetchRequest. */
            class OTFetchRequest {

                /**
                 * Constructs a new OTFetchRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTFetchRequest);

                /** OTFetchRequest versionFrom. */
                public versionFrom: number;

                /** OTFetchRequest versionTo. */
                public versionTo: number;

                /**
                 * Creates a new OTFetchRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTFetchRequest instance
                 */
                public static create(properties?: replit.goval.api.IOTFetchRequest): replit.goval.api.OTFetchRequest;

                /**
                 * Encodes the specified OTFetchRequest message. Does not implicitly {@link replit.goval.api.OTFetchRequest.verify|verify} messages.
                 * @param message OTFetchRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTFetchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTFetchRequest message, length delimited. Does not implicitly {@link replit.goval.api.OTFetchRequest.verify|verify} messages.
                 * @param message OTFetchRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTFetchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTFetchRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTFetchRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTFetchRequest;

                /**
                 * Decodes a OTFetchRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTFetchRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTFetchRequest;

                /**
                 * Verifies a OTFetchRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTFetchRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTFetchRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTFetchRequest;

                /**
                 * Creates a plain object from a OTFetchRequest message. Also converts values to other types if specified.
                 * @param message OTFetchRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTFetchRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTFetchRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTFetchResponse. */
            interface IOTFetchResponse {

                /** OTFetchResponse packets */
                packets?: ((replit.goval.api.OTPacket|replit.goval.api.IOTPacket)[]|null);
            }

            /** Represents a OTFetchResponse. */
            class OTFetchResponse {

                /**
                 * Constructs a new OTFetchResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTFetchResponse);

                /** OTFetchResponse packets. */
                public packets: replit.goval.api.OTPacket[];

                /**
                 * Creates a new OTFetchResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTFetchResponse instance
                 */
                public static create(properties?: replit.goval.api.IOTFetchResponse): replit.goval.api.OTFetchResponse;

                /**
                 * Encodes the specified OTFetchResponse message. Does not implicitly {@link replit.goval.api.OTFetchResponse.verify|verify} messages.
                 * @param message OTFetchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTFetchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTFetchResponse message, length delimited. Does not implicitly {@link replit.goval.api.OTFetchResponse.verify|verify} messages.
                 * @param message OTFetchResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTFetchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTFetchResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTFetchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTFetchResponse;

                /**
                 * Decodes a OTFetchResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTFetchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTFetchResponse;

                /**
                 * Verifies a OTFetchResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTFetchResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTFetchResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTFetchResponse;

                /**
                 * Creates a plain object from a OTFetchResponse message. Also converts values to other types if specified.
                 * @param message OTFetchResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTFetchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTFetchResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTTransformSelectionRequest. */
            interface IOTTransformSelectionRequest {

                /** OTTransformSelectionRequest indexStart */
                indexStart?: (number|null);

                /** OTTransformSelectionRequest indexEnd */
                indexEnd?: (number|null);

                /** OTTransformSelectionRequest versionFrom */
                versionFrom?: (number|null);

                /** OTTransformSelectionRequest versionTo */
                versionTo?: (number|null);
            }

            /** Represents a OTTransformSelectionRequest. */
            class OTTransformSelectionRequest {

                /**
                 * Constructs a new OTTransformSelectionRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTTransformSelectionRequest);

                /** OTTransformSelectionRequest indexStart. */
                public indexStart: number;

                /** OTTransformSelectionRequest indexEnd. */
                public indexEnd: number;

                /** OTTransformSelectionRequest versionFrom. */
                public versionFrom: number;

                /** OTTransformSelectionRequest versionTo. */
                public versionTo: number;

                /**
                 * Creates a new OTTransformSelectionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTTransformSelectionRequest instance
                 */
                public static create(properties?: replit.goval.api.IOTTransformSelectionRequest): replit.goval.api.OTTransformSelectionRequest;

                /**
                 * Encodes the specified OTTransformSelectionRequest message. Does not implicitly {@link replit.goval.api.OTTransformSelectionRequest.verify|verify} messages.
                 * @param message OTTransformSelectionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTTransformSelectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTTransformSelectionRequest message, length delimited. Does not implicitly {@link replit.goval.api.OTTransformSelectionRequest.verify|verify} messages.
                 * @param message OTTransformSelectionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTTransformSelectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTTransformSelectionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTTransformSelectionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTTransformSelectionRequest;

                /**
                 * Decodes a OTTransformSelectionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTTransformSelectionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTTransformSelectionRequest;

                /**
                 * Verifies a OTTransformSelectionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTTransformSelectionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTTransformSelectionRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTTransformSelectionRequest;

                /**
                 * Creates a plain object from a OTTransformSelectionRequest message. Also converts values to other types if specified.
                 * @param message OTTransformSelectionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTTransformSelectionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTTransformSelectionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTTransformSelectionResponse. */
            interface IOTTransformSelectionResponse {

                /** OTTransformSelectionResponse indexStart */
                indexStart?: (number|null);

                /** OTTransformSelectionResponse indexEnd */
                indexEnd?: (number|null);

                /** OTTransformSelectionResponse version */
                version?: (number|null);
            }

            /** Represents a OTTransformSelectionResponse. */
            class OTTransformSelectionResponse {

                /**
                 * Constructs a new OTTransformSelectionResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTTransformSelectionResponse);

                /** OTTransformSelectionResponse indexStart. */
                public indexStart: number;

                /** OTTransformSelectionResponse indexEnd. */
                public indexEnd: number;

                /** OTTransformSelectionResponse version. */
                public version: number;

                /**
                 * Creates a new OTTransformSelectionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTTransformSelectionResponse instance
                 */
                public static create(properties?: replit.goval.api.IOTTransformSelectionResponse): replit.goval.api.OTTransformSelectionResponse;

                /**
                 * Encodes the specified OTTransformSelectionResponse message. Does not implicitly {@link replit.goval.api.OTTransformSelectionResponse.verify|verify} messages.
                 * @param message OTTransformSelectionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTTransformSelectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTTransformSelectionResponse message, length delimited. Does not implicitly {@link replit.goval.api.OTTransformSelectionResponse.verify|verify} messages.
                 * @param message OTTransformSelectionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTTransformSelectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTTransformSelectionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTTransformSelectionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTTransformSelectionResponse;

                /**
                 * Decodes a OTTransformSelectionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTTransformSelectionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTTransformSelectionResponse;

                /**
                 * Verifies a OTTransformSelectionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTTransformSelectionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTTransformSelectionResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTTransformSelectionResponse;

                /**
                 * Creates a plain object from a OTTransformSelectionResponse message. Also converts values to other types if specified.
                 * @param message OTTransformSelectionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTTransformSelectionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTTransformSelectionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTPacket. */
            interface IOTPacket {

                /** OTPacket spookyVersion */
                spookyVersion?: (number|null);

                /** OTPacket version */
                version?: (number|null);

                /** OTPacket op */
                op?: ((replit.goval.api.OTOpComponent|replit.goval.api.IOTOpComponent)[]|null);

                /** OTPacket crc32 */
                crc32?: (number|null);

                /** OTPacket committed */
                committed?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** OTPacket nonce */
                nonce?: (number|null);

                /** OTPacket userId */
                userId?: (number|null);

                /** OTPacket author */
                author?: (replit.goval.api.OTPacket.Author|null);
            }

            /** Represents a OTPacket. */
            class OTPacket {

                /**
                 * Constructs a new OTPacket.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTPacket);

                /** OTPacket spookyVersion. */
                public spookyVersion: number;

                /** OTPacket version. */
                public version: number;

                /** OTPacket op. */
                public op: replit.goval.api.OTOpComponent[];

                /** OTPacket crc32. */
                public crc32: number;

                /** OTPacket committed. */
                public committed?: (google.protobuf.Timestamp|null);

                /** OTPacket nonce. */
                public nonce: number;

                /** OTPacket userId. */
                public userId: number;

                /** OTPacket author. */
                public author: replit.goval.api.OTPacket.Author;

                /**
                 * Creates a new OTPacket instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTPacket instance
                 */
                public static create(properties?: replit.goval.api.IOTPacket): replit.goval.api.OTPacket;

                /**
                 * Encodes the specified OTPacket message. Does not implicitly {@link replit.goval.api.OTPacket.verify|verify} messages.
                 * @param message OTPacket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTPacket message, length delimited. Does not implicitly {@link replit.goval.api.OTPacket.verify|verify} messages.
                 * @param message OTPacket message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTPacket message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTPacket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTPacket;

                /**
                 * Decodes a OTPacket message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTPacket
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTPacket;

                /**
                 * Verifies a OTPacket message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTPacket message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTPacket
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTPacket;

                /**
                 * Creates a plain object from a OTPacket message. Also converts values to other types if specified.
                 * @param message OTPacket
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTPacket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTPacket to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace OTPacket {

                /** Author enum. */
                enum Author {
                    USER = 0,
                    GHOSTWRITER = 1
                }
            }

            /** Properties of a OTOpComponent. */
            interface IOTOpComponent {

                /** OTOpComponent skip */
                skip?: (number|null);

                /** OTOpComponent delete */
                "delete"?: (number|null);

                /** OTOpComponent insert */
                insert?: (string|null);
            }

            /** Represents a OTOpComponent. */
            class OTOpComponent {

                /**
                 * Constructs a new OTOpComponent.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTOpComponent);

                /** OTOpComponent skip. */
                public skip?: (number|null);

                /** OTOpComponent delete. */
                public delete?: (number|null);

                /** OTOpComponent insert. */
                public insert?: (string|null);

                /** OTOpComponent opComponent. */
                public opComponent?: ("skip"|"delete"|"insert");

                /**
                 * Creates a new OTOpComponent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTOpComponent instance
                 */
                public static create(properties?: replit.goval.api.IOTOpComponent): replit.goval.api.OTOpComponent;

                /**
                 * Encodes the specified OTOpComponent message. Does not implicitly {@link replit.goval.api.OTOpComponent.verify|verify} messages.
                 * @param message OTOpComponent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTOpComponent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTOpComponent message, length delimited. Does not implicitly {@link replit.goval.api.OTOpComponent.verify|verify} messages.
                 * @param message OTOpComponent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTOpComponent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTOpComponent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTOpComponent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTOpComponent;

                /**
                 * Decodes a OTOpComponent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTOpComponent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTOpComponent;

                /**
                 * Verifies a OTOpComponent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTOpComponent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTOpComponent
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTOpComponent;

                /**
                 * Creates a plain object from a OTOpComponent message. Also converts values to other types if specified.
                 * @param message OTOpComponent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTOpComponent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTOpComponent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTStatus. */
            interface IOTStatus {

                /** OTStatus contents */
                contents?: (string|null);

                /** OTStatus version */
                version?: (number|null);

                /** OTStatus linkedFile */
                linkedFile?: (replit.goval.api.File|replit.goval.api.IFile|null);

                /** OTStatus cursors */
                cursors?: ((replit.goval.api.OTCursor|replit.goval.api.IOTCursor)[]|null);
            }

            /** Represents a OTStatus. */
            class OTStatus {

                /**
                 * Constructs a new OTStatus.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTStatus);

                /** OTStatus contents. */
                public contents: string;

                /** OTStatus version. */
                public version: number;

                /** OTStatus linkedFile. */
                public linkedFile?: (replit.goval.api.File|null);

                /** OTStatus cursors. */
                public cursors: replit.goval.api.OTCursor[];

                /**
                 * Creates a new OTStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTStatus instance
                 */
                public static create(properties?: replit.goval.api.IOTStatus): replit.goval.api.OTStatus;

                /**
                 * Encodes the specified OTStatus message. Does not implicitly {@link replit.goval.api.OTStatus.verify|verify} messages.
                 * @param message OTStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTStatus message, length delimited. Does not implicitly {@link replit.goval.api.OTStatus.verify|verify} messages.
                 * @param message OTStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTStatus;

                /**
                 * Decodes a OTStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTStatus;

                /**
                 * Verifies a OTStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTStatus
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTStatus;

                /**
                 * Creates a plain object from a OTStatus message. Also converts values to other types if specified.
                 * @param message OTStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a OTCursor. */
            interface IOTCursor {

                /** OTCursor position */
                position?: (number|null);

                /** OTCursor selectionStart */
                selectionStart?: (number|null);

                /** OTCursor selectionEnd */
                selectionEnd?: (number|null);

                /** OTCursor user */
                user?: (replit.goval.api.User|replit.goval.api.IUser|null);

                /** OTCursor id */
                id?: (string|null);
            }

            /** Represents a OTCursor. */
            class OTCursor {

                /**
                 * Constructs a new OTCursor.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOTCursor);

                /** OTCursor position. */
                public position: number;

                /** OTCursor selectionStart. */
                public selectionStart: number;

                /** OTCursor selectionEnd. */
                public selectionEnd: number;

                /** OTCursor user. */
                public user?: (replit.goval.api.User|null);

                /** OTCursor id. */
                public id: string;

                /**
                 * Creates a new OTCursor instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OTCursor instance
                 */
                public static create(properties?: replit.goval.api.IOTCursor): replit.goval.api.OTCursor;

                /**
                 * Encodes the specified OTCursor message. Does not implicitly {@link replit.goval.api.OTCursor.verify|verify} messages.
                 * @param message OTCursor message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OTCursor, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OTCursor message, length delimited. Does not implicitly {@link replit.goval.api.OTCursor.verify|verify} messages.
                 * @param message OTCursor message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OTCursor, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a OTCursor message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OTCursor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OTCursor;

                /**
                 * Decodes a OTCursor message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OTCursor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OTCursor;

                /**
                 * Verifies a OTCursor message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a OTCursor message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OTCursor
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OTCursor;

                /**
                 * Creates a plain object from a OTCursor message. Also converts values to other types if specified.
                 * @param message OTCursor
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OTCursor, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OTCursor to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ChatMessage. */
            interface IChatMessage {

                /** ChatMessage username */
                username?: (string|null);

                /** ChatMessage text */
                text?: (string|null);
            }

            /** Represents a ChatMessage. */
            class ChatMessage {

                /**
                 * Constructs a new ChatMessage.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IChatMessage);

                /** ChatMessage username. */
                public username: string;

                /** ChatMessage text. */
                public text: string;

                /**
                 * Creates a new ChatMessage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChatMessage instance
                 */
                public static create(properties?: replit.goval.api.IChatMessage): replit.goval.api.ChatMessage;

                /**
                 * Encodes the specified ChatMessage message. Does not implicitly {@link replit.goval.api.ChatMessage.verify|verify} messages.
                 * @param message ChatMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ChatMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link replit.goval.api.ChatMessage.verify|verify} messages.
                 * @param message ChatMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ChatMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChatMessage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChatMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ChatMessage;

                /**
                 * Decodes a ChatMessage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChatMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ChatMessage;

                /**
                 * Verifies a ChatMessage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChatMessage
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ChatMessage;

                /**
                 * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.
                 * @param message ChatMessage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ChatMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChatMessage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ChatTyping. */
            interface IChatTyping {

                /** ChatTyping username */
                username?: (string|null);

                /** ChatTyping typing */
                typing?: (boolean|null);
            }

            /** Represents a ChatTyping. */
            class ChatTyping {

                /**
                 * Constructs a new ChatTyping.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IChatTyping);

                /** ChatTyping username. */
                public username: string;

                /** ChatTyping typing. */
                public typing: boolean;

                /**
                 * Creates a new ChatTyping instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChatTyping instance
                 */
                public static create(properties?: replit.goval.api.IChatTyping): replit.goval.api.ChatTyping;

                /**
                 * Encodes the specified ChatTyping message. Does not implicitly {@link replit.goval.api.ChatTyping.verify|verify} messages.
                 * @param message ChatTyping message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ChatTyping, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChatTyping message, length delimited. Does not implicitly {@link replit.goval.api.ChatTyping.verify|verify} messages.
                 * @param message ChatTyping message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ChatTyping, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChatTyping message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChatTyping
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ChatTyping;

                /**
                 * Decodes a ChatTyping message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChatTyping
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ChatTyping;

                /**
                 * Verifies a ChatTyping message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChatTyping message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChatTyping
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ChatTyping;

                /**
                 * Creates a plain object from a ChatTyping message. Also converts values to other types if specified.
                 * @param message ChatTyping
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ChatTyping, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChatTyping to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a User. */
            interface IUser {

                /** User id */
                id?: (number|null);

                /** User name */
                name?: (string|null);

                /** User roles */
                roles?: (string[]|null);

                /** User session */
                session?: (number|null);

                /** User teams */
                teams?: (string[]|null);

                /** User bio */
                bio?: (string|null);

                /** User url */
                url?: (string|null);

                /** User profileImage */
                profileImage?: (string|null);
            }

            /** Represents a User. */
            class User {

                /**
                 * Constructs a new User.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IUser);

                /** User id. */
                public id: number;

                /** User name. */
                public name: string;

                /** User roles. */
                public roles: string[];

                /** User session. */
                public session: number;

                /** User teams. */
                public teams: string[];

                /** User bio. */
                public bio: string;

                /** User url. */
                public url: string;

                /** User profileImage. */
                public profileImage: string;

                /**
                 * Creates a new User instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns User instance
                 */
                public static create(properties?: replit.goval.api.IUser): replit.goval.api.User;

                /**
                 * Encodes the specified User message. Does not implicitly {@link replit.goval.api.User.verify|verify} messages.
                 * @param message User message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.User, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified User message, length delimited. Does not implicitly {@link replit.goval.api.User.verify|verify} messages.
                 * @param message User message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.User, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a User message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns User
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.User;

                /**
                 * Decodes a User message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns User
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.User;

                /**
                 * Verifies a User message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a User message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns User
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.User;

                /**
                 * Creates a plain object from a User message. Also converts values to other types if specified.
                 * @param message User
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.User, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this User to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Roster. */
            interface IRoster {

                /** Roster user */
                user?: ((replit.goval.api.User|replit.goval.api.IUser)[]|null);

                /** Roster files */
                files?: ((replit.goval.api.FileOpened|replit.goval.api.IFileOpened)[]|null);
            }

            /** Represents a Roster. */
            class Roster {

                /**
                 * Constructs a new Roster.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRoster);

                /** Roster user. */
                public user: replit.goval.api.User[];

                /** Roster files. */
                public files: replit.goval.api.FileOpened[];

                /**
                 * Creates a new Roster instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Roster instance
                 */
                public static create(properties?: replit.goval.api.IRoster): replit.goval.api.Roster;

                /**
                 * Encodes the specified Roster message. Does not implicitly {@link replit.goval.api.Roster.verify|verify} messages.
                 * @param message Roster message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Roster, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Roster message, length delimited. Does not implicitly {@link replit.goval.api.Roster.verify|verify} messages.
                 * @param message Roster message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Roster, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Roster message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Roster
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Roster;

                /**
                 * Decodes a Roster message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Roster
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Roster;

                /**
                 * Verifies a Roster message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Roster message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Roster
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Roster;

                /**
                 * Creates a plain object from a Roster message. Also converts values to other types if specified.
                 * @param message Roster
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Roster, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Roster to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an OpenFile. */
            interface IOpenFile {

                /** OpenFile file */
                file?: (string|null);
            }

            /** Represents an OpenFile. */
            class OpenFile {

                /**
                 * Constructs a new OpenFile.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IOpenFile);

                /** OpenFile file. */
                public file: string;

                /**
                 * Creates a new OpenFile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OpenFile instance
                 */
                public static create(properties?: replit.goval.api.IOpenFile): replit.goval.api.OpenFile;

                /**
                 * Encodes the specified OpenFile message. Does not implicitly {@link replit.goval.api.OpenFile.verify|verify} messages.
                 * @param message OpenFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.OpenFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OpenFile message, length delimited. Does not implicitly {@link replit.goval.api.OpenFile.verify|verify} messages.
                 * @param message OpenFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.OpenFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OpenFile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OpenFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.OpenFile;

                /**
                 * Decodes an OpenFile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OpenFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.OpenFile;

                /**
                 * Verifies an OpenFile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OpenFile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OpenFile
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.OpenFile;

                /**
                 * Creates a plain object from an OpenFile message. Also converts values to other types if specified.
                 * @param message OpenFile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.OpenFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OpenFile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FileOpened. */
            interface IFileOpened {

                /** FileOpened userId */
                userId?: (number|null);

                /** FileOpened file */
                file?: (string|null);

                /** FileOpened session */
                session?: (number|null);

                /** FileOpened timestamp */
                timestamp?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);
            }

            /** Represents a FileOpened. */
            class FileOpened {

                /**
                 * Constructs a new FileOpened.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFileOpened);

                /** FileOpened userId. */
                public userId: number;

                /** FileOpened file. */
                public file: string;

                /** FileOpened session. */
                public session: number;

                /** FileOpened timestamp. */
                public timestamp?: (google.protobuf.Timestamp|null);

                /**
                 * Creates a new FileOpened instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FileOpened instance
                 */
                public static create(properties?: replit.goval.api.IFileOpened): replit.goval.api.FileOpened;

                /**
                 * Encodes the specified FileOpened message. Does not implicitly {@link replit.goval.api.FileOpened.verify|verify} messages.
                 * @param message FileOpened message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FileOpened, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FileOpened message, length delimited. Does not implicitly {@link replit.goval.api.FileOpened.verify|verify} messages.
                 * @param message FileOpened message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FileOpened, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FileOpened message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FileOpened
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FileOpened;

                /**
                 * Decodes a FileOpened message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FileOpened
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FileOpened;

                /**
                 * Verifies a FileOpened message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FileOpened message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FileOpened
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FileOpened;

                /**
                 * Creates a plain object from a FileOpened message. Also converts values to other types if specified.
                 * @param message FileOpened
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FileOpened, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FileOpened to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplspaceApiOpenFile. */
            interface IReplspaceApiOpenFile {

                /** ReplspaceApiOpenFile file */
                file?: (string|null);

                /** ReplspaceApiOpenFile waitForClose */
                waitForClose?: (boolean|null);

                /** ReplspaceApiOpenFile nonce */
                nonce?: (string|null);
            }

            /** Represents a ReplspaceApiOpenFile. */
            class ReplspaceApiOpenFile {

                /**
                 * Constructs a new ReplspaceApiOpenFile.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplspaceApiOpenFile);

                /** ReplspaceApiOpenFile file. */
                public file: string;

                /** ReplspaceApiOpenFile waitForClose. */
                public waitForClose: boolean;

                /** ReplspaceApiOpenFile nonce. */
                public nonce: string;

                /**
                 * Creates a new ReplspaceApiOpenFile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplspaceApiOpenFile instance
                 */
                public static create(properties?: replit.goval.api.IReplspaceApiOpenFile): replit.goval.api.ReplspaceApiOpenFile;

                /**
                 * Encodes the specified ReplspaceApiOpenFile message. Does not implicitly {@link replit.goval.api.ReplspaceApiOpenFile.verify|verify} messages.
                 * @param message ReplspaceApiOpenFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplspaceApiOpenFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplspaceApiOpenFile message, length delimited. Does not implicitly {@link replit.goval.api.ReplspaceApiOpenFile.verify|verify} messages.
                 * @param message ReplspaceApiOpenFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplspaceApiOpenFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplspaceApiOpenFile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplspaceApiOpenFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplspaceApiOpenFile;

                /**
                 * Decodes a ReplspaceApiOpenFile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplspaceApiOpenFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplspaceApiOpenFile;

                /**
                 * Verifies a ReplspaceApiOpenFile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplspaceApiOpenFile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplspaceApiOpenFile
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplspaceApiOpenFile;

                /**
                 * Creates a plain object from a ReplspaceApiOpenFile message. Also converts values to other types if specified.
                 * @param message ReplspaceApiOpenFile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplspaceApiOpenFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplspaceApiOpenFile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplspaceApiCloseFile. */
            interface IReplspaceApiCloseFile {

                /** ReplspaceApiCloseFile file */
                file?: (string|null);

                /** ReplspaceApiCloseFile nonce */
                nonce?: (string|null);
            }

            /** Represents a ReplspaceApiCloseFile. */
            class ReplspaceApiCloseFile {

                /**
                 * Constructs a new ReplspaceApiCloseFile.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplspaceApiCloseFile);

                /** ReplspaceApiCloseFile file. */
                public file: string;

                /** ReplspaceApiCloseFile nonce. */
                public nonce: string;

                /**
                 * Creates a new ReplspaceApiCloseFile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplspaceApiCloseFile instance
                 */
                public static create(properties?: replit.goval.api.IReplspaceApiCloseFile): replit.goval.api.ReplspaceApiCloseFile;

                /**
                 * Encodes the specified ReplspaceApiCloseFile message. Does not implicitly {@link replit.goval.api.ReplspaceApiCloseFile.verify|verify} messages.
                 * @param message ReplspaceApiCloseFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplspaceApiCloseFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplspaceApiCloseFile message, length delimited. Does not implicitly {@link replit.goval.api.ReplspaceApiCloseFile.verify|verify} messages.
                 * @param message ReplspaceApiCloseFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplspaceApiCloseFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplspaceApiCloseFile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplspaceApiCloseFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplspaceApiCloseFile;

                /**
                 * Decodes a ReplspaceApiCloseFile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplspaceApiCloseFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplspaceApiCloseFile;

                /**
                 * Verifies a ReplspaceApiCloseFile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplspaceApiCloseFile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplspaceApiCloseFile
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplspaceApiCloseFile;

                /**
                 * Creates a plain object from a ReplspaceApiCloseFile message. Also converts values to other types if specified.
                 * @param message ReplspaceApiCloseFile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplspaceApiCloseFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplspaceApiCloseFile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplspaceApiGetGitHubToken. */
            interface IReplspaceApiGetGitHubToken {

                /** ReplspaceApiGetGitHubToken nonce */
                nonce?: (string|null);
            }

            /** Represents a ReplspaceApiGetGitHubToken. */
            class ReplspaceApiGetGitHubToken {

                /**
                 * Constructs a new ReplspaceApiGetGitHubToken.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplspaceApiGetGitHubToken);

                /** ReplspaceApiGetGitHubToken nonce. */
                public nonce: string;

                /**
                 * Creates a new ReplspaceApiGetGitHubToken instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplspaceApiGetGitHubToken instance
                 */
                public static create(properties?: replit.goval.api.IReplspaceApiGetGitHubToken): replit.goval.api.ReplspaceApiGetGitHubToken;

                /**
                 * Encodes the specified ReplspaceApiGetGitHubToken message. Does not implicitly {@link replit.goval.api.ReplspaceApiGetGitHubToken.verify|verify} messages.
                 * @param message ReplspaceApiGetGitHubToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplspaceApiGetGitHubToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplspaceApiGetGitHubToken message, length delimited. Does not implicitly {@link replit.goval.api.ReplspaceApiGetGitHubToken.verify|verify} messages.
                 * @param message ReplspaceApiGetGitHubToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplspaceApiGetGitHubToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplspaceApiGetGitHubToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplspaceApiGetGitHubToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplspaceApiGetGitHubToken;

                /**
                 * Decodes a ReplspaceApiGetGitHubToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplspaceApiGetGitHubToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplspaceApiGetGitHubToken;

                /**
                 * Verifies a ReplspaceApiGetGitHubToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplspaceApiGetGitHubToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplspaceApiGetGitHubToken
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplspaceApiGetGitHubToken;

                /**
                 * Creates a plain object from a ReplspaceApiGetGitHubToken message. Also converts values to other types if specified.
                 * @param message ReplspaceApiGetGitHubToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplspaceApiGetGitHubToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplspaceApiGetGitHubToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplspaceApiGitHubToken. */
            interface IReplspaceApiGitHubToken {

                /** ReplspaceApiGitHubToken nonce */
                nonce?: (string|null);

                /** ReplspaceApiGitHubToken token */
                token?: (string|null);
            }

            /** Represents a ReplspaceApiGitHubToken. */
            class ReplspaceApiGitHubToken {

                /**
                 * Constructs a new ReplspaceApiGitHubToken.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplspaceApiGitHubToken);

                /** ReplspaceApiGitHubToken nonce. */
                public nonce: string;

                /** ReplspaceApiGitHubToken token. */
                public token: string;

                /**
                 * Creates a new ReplspaceApiGitHubToken instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplspaceApiGitHubToken instance
                 */
                public static create(properties?: replit.goval.api.IReplspaceApiGitHubToken): replit.goval.api.ReplspaceApiGitHubToken;

                /**
                 * Encodes the specified ReplspaceApiGitHubToken message. Does not implicitly {@link replit.goval.api.ReplspaceApiGitHubToken.verify|verify} messages.
                 * @param message ReplspaceApiGitHubToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplspaceApiGitHubToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplspaceApiGitHubToken message, length delimited. Does not implicitly {@link replit.goval.api.ReplspaceApiGitHubToken.verify|verify} messages.
                 * @param message ReplspaceApiGitHubToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplspaceApiGitHubToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplspaceApiGitHubToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplspaceApiGitHubToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplspaceApiGitHubToken;

                /**
                 * Decodes a ReplspaceApiGitHubToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplspaceApiGitHubToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplspaceApiGitHubToken;

                /**
                 * Verifies a ReplspaceApiGitHubToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplspaceApiGitHubToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplspaceApiGitHubToken
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplspaceApiGitHubToken;

                /**
                 * Creates a plain object from a ReplspaceApiGitHubToken message. Also converts values to other types if specified.
                 * @param message ReplspaceApiGitHubToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplspaceApiGitHubToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplspaceApiGitHubToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateSessionTimestamp. */
            interface IUpdateSessionTimestamp {
            }

            /** Represents an UpdateSessionTimestamp. */
            class UpdateSessionTimestamp {

                /**
                 * Constructs a new UpdateSessionTimestamp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IUpdateSessionTimestamp);

                /**
                 * Creates a new UpdateSessionTimestamp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateSessionTimestamp instance
                 */
                public static create(properties?: replit.goval.api.IUpdateSessionTimestamp): replit.goval.api.UpdateSessionTimestamp;

                /**
                 * Encodes the specified UpdateSessionTimestamp message. Does not implicitly {@link replit.goval.api.UpdateSessionTimestamp.verify|verify} messages.
                 * @param message UpdateSessionTimestamp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.UpdateSessionTimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateSessionTimestamp message, length delimited. Does not implicitly {@link replit.goval.api.UpdateSessionTimestamp.verify|verify} messages.
                 * @param message UpdateSessionTimestamp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.UpdateSessionTimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateSessionTimestamp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateSessionTimestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.UpdateSessionTimestamp;

                /**
                 * Decodes an UpdateSessionTimestamp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateSessionTimestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.UpdateSessionTimestamp;

                /**
                 * Verifies an UpdateSessionTimestamp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateSessionTimestamp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateSessionTimestamp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.UpdateSessionTimestamp;

                /**
                 * Creates a plain object from an UpdateSessionTimestamp message. Also converts values to other types if specified.
                 * @param message UpdateSessionTimestamp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.UpdateSessionTimestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateSessionTimestamp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SessionTimestampUpdated. */
            interface ISessionTimestampUpdated {

                /** SessionTimestampUpdated session */
                session?: (number|null);

                /** SessionTimestampUpdated timestamp */
                timestamp?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);
            }

            /** Represents a SessionTimestampUpdated. */
            class SessionTimestampUpdated {

                /**
                 * Constructs a new SessionTimestampUpdated.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ISessionTimestampUpdated);

                /** SessionTimestampUpdated session. */
                public session: number;

                /** SessionTimestampUpdated timestamp. */
                public timestamp?: (google.protobuf.Timestamp|null);

                /**
                 * Creates a new SessionTimestampUpdated instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SessionTimestampUpdated instance
                 */
                public static create(properties?: replit.goval.api.ISessionTimestampUpdated): replit.goval.api.SessionTimestampUpdated;

                /**
                 * Encodes the specified SessionTimestampUpdated message. Does not implicitly {@link replit.goval.api.SessionTimestampUpdated.verify|verify} messages.
                 * @param message SessionTimestampUpdated message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.SessionTimestampUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SessionTimestampUpdated message, length delimited. Does not implicitly {@link replit.goval.api.SessionTimestampUpdated.verify|verify} messages.
                 * @param message SessionTimestampUpdated message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.SessionTimestampUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SessionTimestampUpdated message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SessionTimestampUpdated
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.SessionTimestampUpdated;

                /**
                 * Decodes a SessionTimestampUpdated message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SessionTimestampUpdated
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.SessionTimestampUpdated;

                /**
                 * Verifies a SessionTimestampUpdated message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SessionTimestampUpdated message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SessionTimestampUpdated
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.SessionTimestampUpdated;

                /**
                 * Creates a plain object from a SessionTimestampUpdated message. Also converts values to other types if specified.
                 * @param message SessionTimestampUpdated
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.SessionTimestampUpdated, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SessionTimestampUpdated to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FollowUser. */
            interface IFollowUser {

                /** FollowUser session */
                session?: (number|null);
            }

            /** Represents a FollowUser. */
            class FollowUser {

                /**
                 * Constructs a new FollowUser.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFollowUser);

                /** FollowUser session. */
                public session: number;

                /**
                 * Creates a new FollowUser instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FollowUser instance
                 */
                public static create(properties?: replit.goval.api.IFollowUser): replit.goval.api.FollowUser;

                /**
                 * Encodes the specified FollowUser message. Does not implicitly {@link replit.goval.api.FollowUser.verify|verify} messages.
                 * @param message FollowUser message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FollowUser, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FollowUser message, length delimited. Does not implicitly {@link replit.goval.api.FollowUser.verify|verify} messages.
                 * @param message FollowUser message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FollowUser, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FollowUser message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FollowUser
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FollowUser;

                /**
                 * Decodes a FollowUser message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FollowUser
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FollowUser;

                /**
                 * Verifies a FollowUser message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FollowUser message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FollowUser
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FollowUser;

                /**
                 * Creates a plain object from a FollowUser message. Also converts values to other types if specified.
                 * @param message FollowUser
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FollowUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FollowUser to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UnfollowUser. */
            interface IUnfollowUser {

                /** UnfollowUser session */
                session?: (number|null);
            }

            /** Represents an UnfollowUser. */
            class UnfollowUser {

                /**
                 * Constructs a new UnfollowUser.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IUnfollowUser);

                /** UnfollowUser session. */
                public session: number;

                /**
                 * Creates a new UnfollowUser instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UnfollowUser instance
                 */
                public static create(properties?: replit.goval.api.IUnfollowUser): replit.goval.api.UnfollowUser;

                /**
                 * Encodes the specified UnfollowUser message. Does not implicitly {@link replit.goval.api.UnfollowUser.verify|verify} messages.
                 * @param message UnfollowUser message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.UnfollowUser, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UnfollowUser message, length delimited. Does not implicitly {@link replit.goval.api.UnfollowUser.verify|verify} messages.
                 * @param message UnfollowUser message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.UnfollowUser, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnfollowUser message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UnfollowUser
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.UnfollowUser;

                /**
                 * Decodes an UnfollowUser message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UnfollowUser
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.UnfollowUser;

                /**
                 * Verifies an UnfollowUser message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UnfollowUser message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UnfollowUser
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.UnfollowUser;

                /**
                 * Creates a plain object from an UnfollowUser message. Also converts values to other types if specified.
                 * @param message UnfollowUser
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.UnfollowUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UnfollowUser to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Exec. */
            interface IExec {

                /** Exec args */
                args?: (string[]|null);

                /** Exec env */
                env?: ({ [k: string]: string }|null);

                /** Exec blocking */
                blocking?: (boolean|null);

                /** Exec lifecycle */
                lifecycle?: (replit.goval.api.Exec.Lifecycle|null);

                /** Exec splitStderr */
                splitStderr?: (boolean|null);

                /** Exec splitLogs */
                splitLogs?: (boolean|null);
            }

            /** Represents an Exec. */
            class Exec {

                /**
                 * Constructs a new Exec.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IExec);

                /** Exec args. */
                public args: string[];

                /** Exec env. */
                public env: { [k: string]: string };

                /** Exec blocking. */
                public blocking: boolean;

                /** Exec lifecycle. */
                public lifecycle: replit.goval.api.Exec.Lifecycle;

                /** Exec splitStderr. */
                public splitStderr: boolean;

                /** Exec splitLogs. */
                public splitLogs: boolean;

                /**
                 * Creates a new Exec instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Exec instance
                 */
                public static create(properties?: replit.goval.api.IExec): replit.goval.api.Exec;

                /**
                 * Encodes the specified Exec message. Does not implicitly {@link replit.goval.api.Exec.verify|verify} messages.
                 * @param message Exec message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Exec, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Exec message, length delimited. Does not implicitly {@link replit.goval.api.Exec.verify|verify} messages.
                 * @param message Exec message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Exec, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Exec message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Exec
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Exec;

                /**
                 * Decodes an Exec message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Exec
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Exec;

                /**
                 * Verifies an Exec message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Exec message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Exec
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Exec;

                /**
                 * Creates a plain object from an Exec message. Also converts values to other types if specified.
                 * @param message Exec
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Exec, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Exec to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace Exec {

                /** Lifecycle enum. */
                enum Lifecycle {
                    NON_BLOCKING = 0,
                    BLOCKING = 1,
                    STDIN = 2
                }
            }

            /** Properties of a Package. */
            interface IPackage {

                /** Package name */
                name?: (string|null);

                /** Package spec */
                spec?: (string|null);

                /** Package description */
                description?: (string|null);

                /** Package version */
                version?: (string|null);

                /** Package homepageURL */
                homepageURL?: (string|null);

                /** Package documentationURL */
                documentationURL?: (string|null);

                /** Package sourceCodeURL */
                sourceCodeURL?: (string|null);

                /** Package bugTrackerURL */
                bugTrackerURL?: (string|null);

                /** Package author */
                author?: (string|null);

                /** Package license */
                license?: (string|null);

                /** Package dependencies */
                dependencies?: ((replit.goval.api.Package|replit.goval.api.IPackage)[]|null);
            }

            /** Represents a Package. */
            class Package {

                /**
                 * Constructs a new Package.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackage);

                /** Package name. */
                public name: string;

                /** Package spec. */
                public spec: string;

                /** Package description. */
                public description: string;

                /** Package version. */
                public version: string;

                /** Package homepageURL. */
                public homepageURL: string;

                /** Package documentationURL. */
                public documentationURL: string;

                /** Package sourceCodeURL. */
                public sourceCodeURL: string;

                /** Package bugTrackerURL. */
                public bugTrackerURL: string;

                /** Package author. */
                public author: string;

                /** Package license. */
                public license: string;

                /** Package dependencies. */
                public dependencies: replit.goval.api.Package[];

                /**
                 * Creates a new Package instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Package instance
                 */
                public static create(properties?: replit.goval.api.IPackage): replit.goval.api.Package;

                /**
                 * Encodes the specified Package message. Does not implicitly {@link replit.goval.api.Package.verify|verify} messages.
                 * @param message Package message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Package, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Package message, length delimited. Does not implicitly {@link replit.goval.api.Package.verify|verify} messages.
                 * @param message Package message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Package, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Package message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Package
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Package;

                /**
                 * Decodes a Package message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Package
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Package;

                /**
                 * Verifies a Package message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Package message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Package
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Package;

                /**
                 * Creates a plain object from a Package message. Also converts values to other types if specified.
                 * @param message Package
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Package, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Package to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageSearch. */
            interface IPackageSearch {

                /** PackageSearch query */
                query?: (string|null);
            }

            /** Represents a PackageSearch. */
            class PackageSearch {

                /**
                 * Constructs a new PackageSearch.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageSearch);

                /** PackageSearch query. */
                public query: string;

                /**
                 * Creates a new PackageSearch instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageSearch instance
                 */
                public static create(properties?: replit.goval.api.IPackageSearch): replit.goval.api.PackageSearch;

                /**
                 * Encodes the specified PackageSearch message. Does not implicitly {@link replit.goval.api.PackageSearch.verify|verify} messages.
                 * @param message PackageSearch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageSearch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageSearch message, length delimited. Does not implicitly {@link replit.goval.api.PackageSearch.verify|verify} messages.
                 * @param message PackageSearch message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageSearch, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageSearch message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageSearch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageSearch;

                /**
                 * Decodes a PackageSearch message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageSearch
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageSearch;

                /**
                 * Verifies a PackageSearch message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageSearch message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageSearch
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageSearch;

                /**
                 * Creates a plain object from a PackageSearch message. Also converts values to other types if specified.
                 * @param message PackageSearch
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageSearch, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageSearch to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageSearchResp. */
            interface IPackageSearchResp {

                /** PackageSearchResp results */
                results?: ((replit.goval.api.Package|replit.goval.api.IPackage)[]|null);
            }

            /** Represents a PackageSearchResp. */
            class PackageSearchResp {

                /**
                 * Constructs a new PackageSearchResp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageSearchResp);

                /** PackageSearchResp results. */
                public results: replit.goval.api.Package[];

                /**
                 * Creates a new PackageSearchResp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageSearchResp instance
                 */
                public static create(properties?: replit.goval.api.IPackageSearchResp): replit.goval.api.PackageSearchResp;

                /**
                 * Encodes the specified PackageSearchResp message. Does not implicitly {@link replit.goval.api.PackageSearchResp.verify|verify} messages.
                 * @param message PackageSearchResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageSearchResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageSearchResp message, length delimited. Does not implicitly {@link replit.goval.api.PackageSearchResp.verify|verify} messages.
                 * @param message PackageSearchResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageSearchResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageSearchResp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageSearchResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageSearchResp;

                /**
                 * Decodes a PackageSearchResp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageSearchResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageSearchResp;

                /**
                 * Verifies a PackageSearchResp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageSearchResp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageSearchResp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageSearchResp;

                /**
                 * Creates a plain object from a PackageSearchResp message. Also converts values to other types if specified.
                 * @param message PackageSearchResp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageSearchResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageSearchResp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageInfo. */
            interface IPackageInfo {

                /** PackageInfo pkg */
                pkg?: (replit.goval.api.Package|replit.goval.api.IPackage|null);
            }

            /** Represents a PackageInfo. */
            class PackageInfo {

                /**
                 * Constructs a new PackageInfo.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageInfo);

                /** PackageInfo pkg. */
                public pkg?: (replit.goval.api.Package|null);

                /**
                 * Creates a new PackageInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageInfo instance
                 */
                public static create(properties?: replit.goval.api.IPackageInfo): replit.goval.api.PackageInfo;

                /**
                 * Encodes the specified PackageInfo message. Does not implicitly {@link replit.goval.api.PackageInfo.verify|verify} messages.
                 * @param message PackageInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageInfo message, length delimited. Does not implicitly {@link replit.goval.api.PackageInfo.verify|verify} messages.
                 * @param message PackageInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageInfo;

                /**
                 * Decodes a PackageInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageInfo;

                /**
                 * Verifies a PackageInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageInfo
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageInfo;

                /**
                 * Creates a plain object from a PackageInfo message. Also converts values to other types if specified.
                 * @param message PackageInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageInfoResp. */
            interface IPackageInfoResp {

                /** PackageInfoResp pkg */
                pkg?: (replit.goval.api.Package|replit.goval.api.IPackage|null);
            }

            /** Represents a PackageInfoResp. */
            class PackageInfoResp {

                /**
                 * Constructs a new PackageInfoResp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageInfoResp);

                /** PackageInfoResp pkg. */
                public pkg?: (replit.goval.api.Package|null);

                /**
                 * Creates a new PackageInfoResp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageInfoResp instance
                 */
                public static create(properties?: replit.goval.api.IPackageInfoResp): replit.goval.api.PackageInfoResp;

                /**
                 * Encodes the specified PackageInfoResp message. Does not implicitly {@link replit.goval.api.PackageInfoResp.verify|verify} messages.
                 * @param message PackageInfoResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageInfoResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageInfoResp message, length delimited. Does not implicitly {@link replit.goval.api.PackageInfoResp.verify|verify} messages.
                 * @param message PackageInfoResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageInfoResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageInfoResp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageInfoResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageInfoResp;

                /**
                 * Decodes a PackageInfoResp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageInfoResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageInfoResp;

                /**
                 * Verifies a PackageInfoResp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageInfoResp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageInfoResp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageInfoResp;

                /**
                 * Creates a plain object from a PackageInfoResp message. Also converts values to other types if specified.
                 * @param message PackageInfoResp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageInfoResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageInfoResp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageAdd. */
            interface IPackageAdd {

                /** PackageAdd pkgs */
                pkgs?: ((replit.goval.api.Package|replit.goval.api.IPackage)[]|null);
            }

            /** Represents a PackageAdd. */
            class PackageAdd {

                /**
                 * Constructs a new PackageAdd.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageAdd);

                /** PackageAdd pkgs. */
                public pkgs: replit.goval.api.Package[];

                /**
                 * Creates a new PackageAdd instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageAdd instance
                 */
                public static create(properties?: replit.goval.api.IPackageAdd): replit.goval.api.PackageAdd;

                /**
                 * Encodes the specified PackageAdd message. Does not implicitly {@link replit.goval.api.PackageAdd.verify|verify} messages.
                 * @param message PackageAdd message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageAdd, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageAdd message, length delimited. Does not implicitly {@link replit.goval.api.PackageAdd.verify|verify} messages.
                 * @param message PackageAdd message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageAdd, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageAdd message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageAdd
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageAdd;

                /**
                 * Decodes a PackageAdd message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageAdd
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageAdd;

                /**
                 * Verifies a PackageAdd message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageAdd message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageAdd
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageAdd;

                /**
                 * Creates a plain object from a PackageAdd message. Also converts values to other types if specified.
                 * @param message PackageAdd
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageAdd, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageAdd to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageRemove. */
            interface IPackageRemove {

                /** PackageRemove pkgs */
                pkgs?: ((replit.goval.api.Package|replit.goval.api.IPackage)[]|null);
            }

            /** Represents a PackageRemove. */
            class PackageRemove {

                /**
                 * Constructs a new PackageRemove.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageRemove);

                /** PackageRemove pkgs. */
                public pkgs: replit.goval.api.Package[];

                /**
                 * Creates a new PackageRemove instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageRemove instance
                 */
                public static create(properties?: replit.goval.api.IPackageRemove): replit.goval.api.PackageRemove;

                /**
                 * Encodes the specified PackageRemove message. Does not implicitly {@link replit.goval.api.PackageRemove.verify|verify} messages.
                 * @param message PackageRemove message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageRemove, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageRemove message, length delimited. Does not implicitly {@link replit.goval.api.PackageRemove.verify|verify} messages.
                 * @param message PackageRemove message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageRemove, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageRemove message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageRemove
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageRemove;

                /**
                 * Decodes a PackageRemove message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageRemove
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageRemove;

                /**
                 * Verifies a PackageRemove message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageRemove message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageRemove
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageRemove;

                /**
                 * Creates a plain object from a PackageRemove message. Also converts values to other types if specified.
                 * @param message PackageRemove
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageRemove, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageRemove to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageInstall. */
            interface IPackageInstall {

                /** PackageInstall fromHosting */
                fromHosting?: (boolean|null);
            }

            /** Represents a PackageInstall. */
            class PackageInstall {

                /**
                 * Constructs a new PackageInstall.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageInstall);

                /** PackageInstall fromHosting. */
                public fromHosting: boolean;

                /**
                 * Creates a new PackageInstall instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageInstall instance
                 */
                public static create(properties?: replit.goval.api.IPackageInstall): replit.goval.api.PackageInstall;

                /**
                 * Encodes the specified PackageInstall message. Does not implicitly {@link replit.goval.api.PackageInstall.verify|verify} messages.
                 * @param message PackageInstall message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageInstall, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageInstall message, length delimited. Does not implicitly {@link replit.goval.api.PackageInstall.verify|verify} messages.
                 * @param message PackageInstall message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageInstall, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageInstall message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageInstall
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageInstall;

                /**
                 * Decodes a PackageInstall message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageInstall
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageInstall;

                /**
                 * Verifies a PackageInstall message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageInstall message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageInstall
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageInstall;

                /**
                 * Creates a plain object from a PackageInstall message. Also converts values to other types if specified.
                 * @param message PackageInstall
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageInstall, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageInstall to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageListSpecfile. */
            interface IPackageListSpecfile {
            }

            /** Represents a PackageListSpecfile. */
            class PackageListSpecfile {

                /**
                 * Constructs a new PackageListSpecfile.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageListSpecfile);

                /**
                 * Creates a new PackageListSpecfile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageListSpecfile instance
                 */
                public static create(properties?: replit.goval.api.IPackageListSpecfile): replit.goval.api.PackageListSpecfile;

                /**
                 * Encodes the specified PackageListSpecfile message. Does not implicitly {@link replit.goval.api.PackageListSpecfile.verify|verify} messages.
                 * @param message PackageListSpecfile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageListSpecfile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageListSpecfile message, length delimited. Does not implicitly {@link replit.goval.api.PackageListSpecfile.verify|verify} messages.
                 * @param message PackageListSpecfile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageListSpecfile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageListSpecfile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageListSpecfile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageListSpecfile;

                /**
                 * Decodes a PackageListSpecfile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageListSpecfile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageListSpecfile;

                /**
                 * Verifies a PackageListSpecfile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageListSpecfile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageListSpecfile
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageListSpecfile;

                /**
                 * Creates a plain object from a PackageListSpecfile message. Also converts values to other types if specified.
                 * @param message PackageListSpecfile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageListSpecfile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageListSpecfile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageListSpecfileResp. */
            interface IPackageListSpecfileResp {

                /** PackageListSpecfileResp pkgs */
                pkgs?: ((replit.goval.api.Package|replit.goval.api.IPackage)[]|null);
            }

            /** Represents a PackageListSpecfileResp. */
            class PackageListSpecfileResp {

                /**
                 * Constructs a new PackageListSpecfileResp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageListSpecfileResp);

                /** PackageListSpecfileResp pkgs. */
                public pkgs: replit.goval.api.Package[];

                /**
                 * Creates a new PackageListSpecfileResp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageListSpecfileResp instance
                 */
                public static create(properties?: replit.goval.api.IPackageListSpecfileResp): replit.goval.api.PackageListSpecfileResp;

                /**
                 * Encodes the specified PackageListSpecfileResp message. Does not implicitly {@link replit.goval.api.PackageListSpecfileResp.verify|verify} messages.
                 * @param message PackageListSpecfileResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageListSpecfileResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageListSpecfileResp message, length delimited. Does not implicitly {@link replit.goval.api.PackageListSpecfileResp.verify|verify} messages.
                 * @param message PackageListSpecfileResp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageListSpecfileResp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageListSpecfileResp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageListSpecfileResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageListSpecfileResp;

                /**
                 * Decodes a PackageListSpecfileResp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageListSpecfileResp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageListSpecfileResp;

                /**
                 * Verifies a PackageListSpecfileResp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageListSpecfileResp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageListSpecfileResp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageListSpecfileResp;

                /**
                 * Creates a plain object from a PackageListSpecfileResp message. Also converts values to other types if specified.
                 * @param message PackageListSpecfileResp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageListSpecfileResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageListSpecfileResp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PackageCacheSave. */
            interface IPackageCacheSave {
            }

            /** Represents a PackageCacheSave. */
            class PackageCacheSave {

                /**
                 * Constructs a new PackageCacheSave.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPackageCacheSave);

                /**
                 * Creates a new PackageCacheSave instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PackageCacheSave instance
                 */
                public static create(properties?: replit.goval.api.IPackageCacheSave): replit.goval.api.PackageCacheSave;

                /**
                 * Encodes the specified PackageCacheSave message. Does not implicitly {@link replit.goval.api.PackageCacheSave.verify|verify} messages.
                 * @param message PackageCacheSave message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PackageCacheSave, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PackageCacheSave message, length delimited. Does not implicitly {@link replit.goval.api.PackageCacheSave.verify|verify} messages.
                 * @param message PackageCacheSave message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PackageCacheSave, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PackageCacheSave message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PackageCacheSave
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PackageCacheSave;

                /**
                 * Decodes a PackageCacheSave message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PackageCacheSave
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PackageCacheSave;

                /**
                 * Verifies a PackageCacheSave message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PackageCacheSave message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PackageCacheSave
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PackageCacheSave;

                /**
                 * Creates a plain object from a PackageCacheSave message. Also converts values to other types if specified.
                 * @param message PackageCacheSave
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PackageCacheSave, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PackageCacheSave to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ChatScrollback. */
            interface IChatScrollback {

                /** ChatScrollback scrollback */
                scrollback?: ((replit.goval.api.ChatMessage|replit.goval.api.IChatMessage)[]|null);
            }

            /** Represents a ChatScrollback. */
            class ChatScrollback {

                /**
                 * Constructs a new ChatScrollback.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IChatScrollback);

                /** ChatScrollback scrollback. */
                public scrollback: replit.goval.api.ChatMessage[];

                /**
                 * Creates a new ChatScrollback instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChatScrollback instance
                 */
                public static create(properties?: replit.goval.api.IChatScrollback): replit.goval.api.ChatScrollback;

                /**
                 * Encodes the specified ChatScrollback message. Does not implicitly {@link replit.goval.api.ChatScrollback.verify|verify} messages.
                 * @param message ChatScrollback message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ChatScrollback, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChatScrollback message, length delimited. Does not implicitly {@link replit.goval.api.ChatScrollback.verify|verify} messages.
                 * @param message ChatScrollback message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ChatScrollback, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChatScrollback message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChatScrollback
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ChatScrollback;

                /**
                 * Decodes a ChatScrollback message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChatScrollback
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ChatScrollback;

                /**
                 * Verifies a ChatScrollback message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChatScrollback message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChatScrollback
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ChatScrollback;

                /**
                 * Creates a plain object from a ChatScrollback message. Also converts values to other types if specified.
                 * @param message ChatScrollback
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ChatScrollback, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChatScrollback to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Metrics. */
            interface IMetrics {

                /** Metrics prometheusMetricFamilies */
                prometheusMetricFamilies?: (Uint8Array[]|null);
            }

            /** Represents a Metrics. */
            class Metrics {

                /**
                 * Constructs a new Metrics.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IMetrics);

                /** Metrics prometheusMetricFamilies. */
                public prometheusMetricFamilies: Uint8Array[];

                /**
                 * Creates a new Metrics instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Metrics instance
                 */
                public static create(properties?: replit.goval.api.IMetrics): replit.goval.api.Metrics;

                /**
                 * Encodes the specified Metrics message. Does not implicitly {@link replit.goval.api.Metrics.verify|verify} messages.
                 * @param message Metrics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Metrics, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Metrics message, length delimited. Does not implicitly {@link replit.goval.api.Metrics.verify|verify} messages.
                 * @param message Metrics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Metrics, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Metrics message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Metrics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Metrics;

                /**
                 * Decodes a Metrics message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Metrics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Metrics;

                /**
                 * Verifies a Metrics message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Metrics message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Metrics
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Metrics;

                /**
                 * Creates a plain object from a Metrics message. Also converts values to other types if specified.
                 * @param message Metrics
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Metrics, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Metrics to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofRequest. */
            interface IPprofRequest {

                /** PprofRequest id */
                id?: (string|null);

                /** PprofRequest pprofCpuProfileRequest */
                pprofCpuProfileRequest?: (replit.goval.api.PprofCpuProfileRequest|replit.goval.api.IPprofCpuProfileRequest|null);

                /** PprofRequest pprofHeapProfileRequest */
                pprofHeapProfileRequest?: (replit.goval.api.PprofHeapProfileRequest|replit.goval.api.IPprofHeapProfileRequest|null);

                /** PprofRequest pprofAllocsProfileRequest */
                pprofAllocsProfileRequest?: (replit.goval.api.PprofAllocsProfileRequest|replit.goval.api.IPprofAllocsProfileRequest|null);

                /** PprofRequest pprofBlockProfileRequest */
                pprofBlockProfileRequest?: (replit.goval.api.PprofBlockProfileRequest|replit.goval.api.IPprofBlockProfileRequest|null);

                /** PprofRequest pprofMutexProfileRequest */
                pprofMutexProfileRequest?: (replit.goval.api.PprofMutexProfileRequest|replit.goval.api.IPprofMutexProfileRequest|null);
            }

            /** Represents a PprofRequest. */
            class PprofRequest {

                /**
                 * Constructs a new PprofRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofRequest);

                /** PprofRequest id. */
                public id: string;

                /** PprofRequest pprofCpuProfileRequest. */
                public pprofCpuProfileRequest?: (replit.goval.api.PprofCpuProfileRequest|null);

                /** PprofRequest pprofHeapProfileRequest. */
                public pprofHeapProfileRequest?: (replit.goval.api.PprofHeapProfileRequest|null);

                /** PprofRequest pprofAllocsProfileRequest. */
                public pprofAllocsProfileRequest?: (replit.goval.api.PprofAllocsProfileRequest|null);

                /** PprofRequest pprofBlockProfileRequest. */
                public pprofBlockProfileRequest?: (replit.goval.api.PprofBlockProfileRequest|null);

                /** PprofRequest pprofMutexProfileRequest. */
                public pprofMutexProfileRequest?: (replit.goval.api.PprofMutexProfileRequest|null);

                /** PprofRequest body. */
                public body?: ("pprofCpuProfileRequest"|"pprofHeapProfileRequest"|"pprofAllocsProfileRequest"|"pprofBlockProfileRequest"|"pprofMutexProfileRequest");

                /**
                 * Creates a new PprofRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofRequest instance
                 */
                public static create(properties?: replit.goval.api.IPprofRequest): replit.goval.api.PprofRequest;

                /**
                 * Encodes the specified PprofRequest message. Does not implicitly {@link replit.goval.api.PprofRequest.verify|verify} messages.
                 * @param message PprofRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofRequest message, length delimited. Does not implicitly {@link replit.goval.api.PprofRequest.verify|verify} messages.
                 * @param message PprofRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofRequest;

                /**
                 * Decodes a PprofRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofRequest;

                /**
                 * Verifies a PprofRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofRequest;

                /**
                 * Creates a plain object from a PprofRequest message. Also converts values to other types if specified.
                 * @param message PprofRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofAllocsProfileRequest. */
            interface IPprofAllocsProfileRequest {

                /** PprofAllocsProfileRequest debug */
                debug?: (boolean|null);
            }

            /** Represents a PprofAllocsProfileRequest. */
            class PprofAllocsProfileRequest {

                /**
                 * Constructs a new PprofAllocsProfileRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofAllocsProfileRequest);

                /** PprofAllocsProfileRequest debug. */
                public debug: boolean;

                /**
                 * Creates a new PprofAllocsProfileRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofAllocsProfileRequest instance
                 */
                public static create(properties?: replit.goval.api.IPprofAllocsProfileRequest): replit.goval.api.PprofAllocsProfileRequest;

                /**
                 * Encodes the specified PprofAllocsProfileRequest message. Does not implicitly {@link replit.goval.api.PprofAllocsProfileRequest.verify|verify} messages.
                 * @param message PprofAllocsProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofAllocsProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofAllocsProfileRequest message, length delimited. Does not implicitly {@link replit.goval.api.PprofAllocsProfileRequest.verify|verify} messages.
                 * @param message PprofAllocsProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofAllocsProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofAllocsProfileRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofAllocsProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofAllocsProfileRequest;

                /**
                 * Decodes a PprofAllocsProfileRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofAllocsProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofAllocsProfileRequest;

                /**
                 * Verifies a PprofAllocsProfileRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofAllocsProfileRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofAllocsProfileRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofAllocsProfileRequest;

                /**
                 * Creates a plain object from a PprofAllocsProfileRequest message. Also converts values to other types if specified.
                 * @param message PprofAllocsProfileRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofAllocsProfileRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofAllocsProfileRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofBlockProfileRequest. */
            interface IPprofBlockProfileRequest {

                /** PprofBlockProfileRequest debug */
                debug?: (boolean|null);
            }

            /** Represents a PprofBlockProfileRequest. */
            class PprofBlockProfileRequest {

                /**
                 * Constructs a new PprofBlockProfileRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofBlockProfileRequest);

                /** PprofBlockProfileRequest debug. */
                public debug: boolean;

                /**
                 * Creates a new PprofBlockProfileRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofBlockProfileRequest instance
                 */
                public static create(properties?: replit.goval.api.IPprofBlockProfileRequest): replit.goval.api.PprofBlockProfileRequest;

                /**
                 * Encodes the specified PprofBlockProfileRequest message. Does not implicitly {@link replit.goval.api.PprofBlockProfileRequest.verify|verify} messages.
                 * @param message PprofBlockProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofBlockProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofBlockProfileRequest message, length delimited. Does not implicitly {@link replit.goval.api.PprofBlockProfileRequest.verify|verify} messages.
                 * @param message PprofBlockProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofBlockProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofBlockProfileRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofBlockProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofBlockProfileRequest;

                /**
                 * Decodes a PprofBlockProfileRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofBlockProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofBlockProfileRequest;

                /**
                 * Verifies a PprofBlockProfileRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofBlockProfileRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofBlockProfileRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofBlockProfileRequest;

                /**
                 * Creates a plain object from a PprofBlockProfileRequest message. Also converts values to other types if specified.
                 * @param message PprofBlockProfileRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofBlockProfileRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofBlockProfileRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofCpuProfileRequest. */
            interface IPprofCpuProfileRequest {

                /** PprofCpuProfileRequest seconds */
                seconds?: (number|null);
            }

            /** Represents a PprofCpuProfileRequest. */
            class PprofCpuProfileRequest {

                /**
                 * Constructs a new PprofCpuProfileRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofCpuProfileRequest);

                /** PprofCpuProfileRequest seconds. */
                public seconds: number;

                /**
                 * Creates a new PprofCpuProfileRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofCpuProfileRequest instance
                 */
                public static create(properties?: replit.goval.api.IPprofCpuProfileRequest): replit.goval.api.PprofCpuProfileRequest;

                /**
                 * Encodes the specified PprofCpuProfileRequest message. Does not implicitly {@link replit.goval.api.PprofCpuProfileRequest.verify|verify} messages.
                 * @param message PprofCpuProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofCpuProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofCpuProfileRequest message, length delimited. Does not implicitly {@link replit.goval.api.PprofCpuProfileRequest.verify|verify} messages.
                 * @param message PprofCpuProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofCpuProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofCpuProfileRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofCpuProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofCpuProfileRequest;

                /**
                 * Decodes a PprofCpuProfileRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofCpuProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofCpuProfileRequest;

                /**
                 * Verifies a PprofCpuProfileRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofCpuProfileRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofCpuProfileRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofCpuProfileRequest;

                /**
                 * Creates a plain object from a PprofCpuProfileRequest message. Also converts values to other types if specified.
                 * @param message PprofCpuProfileRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofCpuProfileRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofCpuProfileRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofHeapProfileRequest. */
            interface IPprofHeapProfileRequest {

                /** PprofHeapProfileRequest gc */
                gc?: (boolean|null);

                /** PprofHeapProfileRequest debug */
                debug?: (boolean|null);
            }

            /** Represents a PprofHeapProfileRequest. */
            class PprofHeapProfileRequest {

                /**
                 * Constructs a new PprofHeapProfileRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofHeapProfileRequest);

                /** PprofHeapProfileRequest gc. */
                public gc: boolean;

                /** PprofHeapProfileRequest debug. */
                public debug: boolean;

                /**
                 * Creates a new PprofHeapProfileRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofHeapProfileRequest instance
                 */
                public static create(properties?: replit.goval.api.IPprofHeapProfileRequest): replit.goval.api.PprofHeapProfileRequest;

                /**
                 * Encodes the specified PprofHeapProfileRequest message. Does not implicitly {@link replit.goval.api.PprofHeapProfileRequest.verify|verify} messages.
                 * @param message PprofHeapProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofHeapProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofHeapProfileRequest message, length delimited. Does not implicitly {@link replit.goval.api.PprofHeapProfileRequest.verify|verify} messages.
                 * @param message PprofHeapProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofHeapProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofHeapProfileRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofHeapProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofHeapProfileRequest;

                /**
                 * Decodes a PprofHeapProfileRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofHeapProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofHeapProfileRequest;

                /**
                 * Verifies a PprofHeapProfileRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofHeapProfileRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofHeapProfileRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofHeapProfileRequest;

                /**
                 * Creates a plain object from a PprofHeapProfileRequest message. Also converts values to other types if specified.
                 * @param message PprofHeapProfileRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofHeapProfileRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofHeapProfileRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofMutexProfileRequest. */
            interface IPprofMutexProfileRequest {

                /** PprofMutexProfileRequest debug */
                debug?: (boolean|null);
            }

            /** Represents a PprofMutexProfileRequest. */
            class PprofMutexProfileRequest {

                /**
                 * Constructs a new PprofMutexProfileRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofMutexProfileRequest);

                /** PprofMutexProfileRequest debug. */
                public debug: boolean;

                /**
                 * Creates a new PprofMutexProfileRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofMutexProfileRequest instance
                 */
                public static create(properties?: replit.goval.api.IPprofMutexProfileRequest): replit.goval.api.PprofMutexProfileRequest;

                /**
                 * Encodes the specified PprofMutexProfileRequest message. Does not implicitly {@link replit.goval.api.PprofMutexProfileRequest.verify|verify} messages.
                 * @param message PprofMutexProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofMutexProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofMutexProfileRequest message, length delimited. Does not implicitly {@link replit.goval.api.PprofMutexProfileRequest.verify|verify} messages.
                 * @param message PprofMutexProfileRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofMutexProfileRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofMutexProfileRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofMutexProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofMutexProfileRequest;

                /**
                 * Decodes a PprofMutexProfileRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofMutexProfileRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofMutexProfileRequest;

                /**
                 * Verifies a PprofMutexProfileRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofMutexProfileRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofMutexProfileRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofMutexProfileRequest;

                /**
                 * Creates a plain object from a PprofMutexProfileRequest message. Also converts values to other types if specified.
                 * @param message PprofMutexProfileRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofMutexProfileRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofMutexProfileRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PprofResponse. */
            interface IPprofResponse {

                /** PprofResponse id */
                id?: (string|null);

                /** PprofResponse profile */
                profile?: (Uint8Array|null);
            }

            /** Represents a PprofResponse. */
            class PprofResponse {

                /**
                 * Constructs a new PprofResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPprofResponse);

                /** PprofResponse id. */
                public id: string;

                /** PprofResponse profile. */
                public profile: Uint8Array;

                /**
                 * Creates a new PprofResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PprofResponse instance
                 */
                public static create(properties?: replit.goval.api.IPprofResponse): replit.goval.api.PprofResponse;

                /**
                 * Encodes the specified PprofResponse message. Does not implicitly {@link replit.goval.api.PprofResponse.verify|verify} messages.
                 * @param message PprofResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PprofResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PprofResponse message, length delimited. Does not implicitly {@link replit.goval.api.PprofResponse.verify|verify} messages.
                 * @param message PprofResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PprofResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PprofResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PprofResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PprofResponse;

                /**
                 * Decodes a PprofResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PprofResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PprofResponse;

                /**
                 * Verifies a PprofResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PprofResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PprofResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PprofResponse;

                /**
                 * Creates a plain object from a PprofResponse message. Also converts values to other types if specified.
                 * @param message PprofResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PprofResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PprofResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PTYConfig. */
            interface IPTYConfig {

                /** PTYConfig pipeMode */
                pipeMode?: (boolean|null);
            }

            /** Represents a PTYConfig. */
            class PTYConfig {

                /**
                 * Constructs a new PTYConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPTYConfig);

                /** PTYConfig pipeMode. */
                public pipeMode: boolean;

                /**
                 * Creates a new PTYConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PTYConfig instance
                 */
                public static create(properties?: replit.goval.api.IPTYConfig): replit.goval.api.PTYConfig;

                /**
                 * Encodes the specified PTYConfig message. Does not implicitly {@link replit.goval.api.PTYConfig.verify|verify} messages.
                 * @param message PTYConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PTYConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PTYConfig message, length delimited. Does not implicitly {@link replit.goval.api.PTYConfig.verify|verify} messages.
                 * @param message PTYConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PTYConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PTYConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PTYConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PTYConfig;

                /**
                 * Decodes a PTYConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PTYConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PTYConfig;

                /**
                 * Verifies a PTYConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PTYConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PTYConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PTYConfig;

                /**
                 * Creates a plain object from a PTYConfig message. Also converts values to other types if specified.
                 * @param message PTYConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PTYConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PTYConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugMain. */
            interface IDebugMain {

                /** DebugMain session */
                session?: (string|null);

                /** DebugMain readOnly */
                readOnly?: (boolean|null);
            }

            /** Represents a DebugMain. */
            class DebugMain {

                /**
                 * Constructs a new DebugMain.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugMain);

                /** DebugMain session. */
                public session: string;

                /** DebugMain readOnly. */
                public readOnly: boolean;

                /**
                 * Creates a new DebugMain instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugMain instance
                 */
                public static create(properties?: replit.goval.api.IDebugMain): replit.goval.api.DebugMain;

                /**
                 * Encodes the specified DebugMain message. Does not implicitly {@link replit.goval.api.DebugMain.verify|verify} messages.
                 * @param message DebugMain message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugMain, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugMain message, length delimited. Does not implicitly {@link replit.goval.api.DebugMain.verify|verify} messages.
                 * @param message DebugMain message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugMain, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugMain message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugMain
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugMain;

                /**
                 * Decodes a DebugMain message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugMain
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugMain;

                /**
                 * Verifies a DebugMain message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugMain message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugMain
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugMain;

                /**
                 * Creates a plain object from a DebugMain message. Also converts values to other types if specified.
                 * @param message DebugMain
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugMain, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugMain to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugMainReply. */
            interface IDebugMainReply {

                /** DebugMainReply joined */
                joined?: (boolean|null);

                /** DebugMainReply protocol */
                protocol?: (replit.goval.api.DebugMainReply.Protocol|null);
            }

            /** Represents a DebugMainReply. */
            class DebugMainReply {

                /**
                 * Constructs a new DebugMainReply.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugMainReply);

                /** DebugMainReply joined. */
                public joined: boolean;

                /** DebugMainReply protocol. */
                public protocol: replit.goval.api.DebugMainReply.Protocol;

                /**
                 * Creates a new DebugMainReply instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugMainReply instance
                 */
                public static create(properties?: replit.goval.api.IDebugMainReply): replit.goval.api.DebugMainReply;

                /**
                 * Encodes the specified DebugMainReply message. Does not implicitly {@link replit.goval.api.DebugMainReply.verify|verify} messages.
                 * @param message DebugMainReply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugMainReply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugMainReply message, length delimited. Does not implicitly {@link replit.goval.api.DebugMainReply.verify|verify} messages.
                 * @param message DebugMainReply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugMainReply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugMainReply message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugMainReply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugMainReply;

                /**
                 * Decodes a DebugMainReply message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugMainReply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugMainReply;

                /**
                 * Verifies a DebugMainReply message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugMainReply message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugMainReply
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugMainReply;

                /**
                 * Creates a plain object from a DebugMainReply message. Also converts values to other types if specified.
                 * @param message DebugMainReply
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugMainReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugMainReply to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace DebugMainReply {

                /** Protocol enum. */
                enum Protocol {
                    DAP = 0
                }
            }

            /** Properties of a DebugState. */
            interface IDebugState {

                /** DebugState session */
                session?: (string|null);

                /** DebugState state */
                state?: (replit.goval.api.State|null);
            }

            /** Represents a DebugState. */
            class DebugState {

                /**
                 * Constructs a new DebugState.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugState);

                /** DebugState session. */
                public session: string;

                /** DebugState state. */
                public state: replit.goval.api.State;

                /**
                 * Creates a new DebugState instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugState instance
                 */
                public static create(properties?: replit.goval.api.IDebugState): replit.goval.api.DebugState;

                /**
                 * Encodes the specified DebugState message. Does not implicitly {@link replit.goval.api.DebugState.verify|verify} messages.
                 * @param message DebugState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugState message, length delimited. Does not implicitly {@link replit.goval.api.DebugState.verify|verify} messages.
                 * @param message DebugState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugState;

                /**
                 * Decodes a DebugState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugState;

                /**
                 * Verifies a DebugState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugState
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugState;

                /**
                 * Creates a plain object from a DebugState message. Also converts values to other types if specified.
                 * @param message DebugState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugInput. */
            interface IDebugInput {

                /** DebugInput session */
                session?: (string|null);

                /** DebugInput input */
                input?: (string|null);

                /** DebugInput adapterInput */
                adapterInput?: (string|null);
            }

            /** Represents a DebugInput. */
            class DebugInput {

                /**
                 * Constructs a new DebugInput.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugInput);

                /** DebugInput session. */
                public session: string;

                /** DebugInput input. */
                public input?: (string|null);

                /** DebugInput adapterInput. */
                public adapterInput?: (string|null);

                /** DebugInput stream. */
                public stream?: ("input"|"adapterInput");

                /**
                 * Creates a new DebugInput instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugInput instance
                 */
                public static create(properties?: replit.goval.api.IDebugInput): replit.goval.api.DebugInput;

                /**
                 * Encodes the specified DebugInput message. Does not implicitly {@link replit.goval.api.DebugInput.verify|verify} messages.
                 * @param message DebugInput message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugInput message, length delimited. Does not implicitly {@link replit.goval.api.DebugInput.verify|verify} messages.
                 * @param message DebugInput message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugInput message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugInput
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugInput;

                /**
                 * Decodes a DebugInput message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugInput
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugInput;

                /**
                 * Verifies a DebugInput message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugInput message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugInput
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugInput;

                /**
                 * Creates a plain object from a DebugInput message. Also converts values to other types if specified.
                 * @param message DebugInput
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugInput, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugInput to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugOutput. */
            interface IDebugOutput {

                /** DebugOutput session */
                session?: (string|null);

                /** DebugOutput output */
                output?: (string|null);

                /** DebugOutput adapterOutput */
                adapterOutput?: (string|null);
            }

            /** Represents a DebugOutput. */
            class DebugOutput {

                /**
                 * Constructs a new DebugOutput.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugOutput);

                /** DebugOutput session. */
                public session: string;

                /** DebugOutput output. */
                public output?: (string|null);

                /** DebugOutput adapterOutput. */
                public adapterOutput?: (string|null);

                /** DebugOutput stream. */
                public stream?: ("output"|"adapterOutput");

                /**
                 * Creates a new DebugOutput instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugOutput instance
                 */
                public static create(properties?: replit.goval.api.IDebugOutput): replit.goval.api.DebugOutput;

                /**
                 * Encodes the specified DebugOutput message. Does not implicitly {@link replit.goval.api.DebugOutput.verify|verify} messages.
                 * @param message DebugOutput message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugOutput message, length delimited. Does not implicitly {@link replit.goval.api.DebugOutput.verify|verify} messages.
                 * @param message DebugOutput message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugOutput message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugOutput
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugOutput;

                /**
                 * Decodes a DebugOutput message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugOutput
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugOutput;

                /**
                 * Verifies a DebugOutput message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugOutput message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugOutput
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugOutput;

                /**
                 * Creates a plain object from a DebugOutput message. Also converts values to other types if specified.
                 * @param message DebugOutput
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugOutput, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugOutput to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugStop. */
            interface IDebugStop {

                /** DebugStop session */
                session?: (string|null);
            }

            /** Represents a DebugStop. */
            class DebugStop {

                /**
                 * Constructs a new DebugStop.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugStop);

                /** DebugStop session. */
                public session: string;

                /**
                 * Creates a new DebugStop instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugStop instance
                 */
                public static create(properties?: replit.goval.api.IDebugStop): replit.goval.api.DebugStop;

                /**
                 * Encodes the specified DebugStop message. Does not implicitly {@link replit.goval.api.DebugStop.verify|verify} messages.
                 * @param message DebugStop message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugStop, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugStop message, length delimited. Does not implicitly {@link replit.goval.api.DebugStop.verify|verify} messages.
                 * @param message DebugStop message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugStop, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugStop message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugStop
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugStop;

                /**
                 * Decodes a DebugStop message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugStop
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugStop;

                /**
                 * Verifies a DebugStop message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugStop message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugStop
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugStop;

                /**
                 * Creates a plain object from a DebugStop message. Also converts values to other types if specified.
                 * @param message DebugStop
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugStop, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugStop to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugLeave. */
            interface IDebugLeave {

                /** DebugLeave session */
                session?: (string|null);
            }

            /** Represents a DebugLeave. */
            class DebugLeave {

                /**
                 * Constructs a new DebugLeave.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugLeave);

                /** DebugLeave session. */
                public session: string;

                /**
                 * Creates a new DebugLeave instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugLeave instance
                 */
                public static create(properties?: replit.goval.api.IDebugLeave): replit.goval.api.DebugLeave;

                /**
                 * Encodes the specified DebugLeave message. Does not implicitly {@link replit.goval.api.DebugLeave.verify|verify} messages.
                 * @param message DebugLeave message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugLeave, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugLeave message, length delimited. Does not implicitly {@link replit.goval.api.DebugLeave.verify|verify} messages.
                 * @param message DebugLeave message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugLeave, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugLeave message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugLeave
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugLeave;

                /**
                 * Decodes a DebugLeave message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugLeave
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugLeave;

                /**
                 * Verifies a DebugLeave message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugLeave message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugLeave
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugLeave;

                /**
                 * Creates a plain object from a DebugLeave message. Also converts values to other types if specified.
                 * @param message DebugLeave
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugLeave, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugLeave to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugSessions. */
            interface IDebugSessions {

                /** DebugSessions sessions */
                sessions?: ({ [k: string]: replit.goval.api.State }|null);
            }

            /** Represents a DebugSessions. */
            class DebugSessions {

                /**
                 * Constructs a new DebugSessions.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugSessions);

                /** DebugSessions sessions. */
                public sessions: { [k: string]: replit.goval.api.State };

                /**
                 * Creates a new DebugSessions instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugSessions instance
                 */
                public static create(properties?: replit.goval.api.IDebugSessions): replit.goval.api.DebugSessions;

                /**
                 * Encodes the specified DebugSessions message. Does not implicitly {@link replit.goval.api.DebugSessions.verify|verify} messages.
                 * @param message DebugSessions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugSessions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugSessions message, length delimited. Does not implicitly {@link replit.goval.api.DebugSessions.verify|verify} messages.
                 * @param message DebugSessions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugSessions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugSessions message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugSessions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugSessions;

                /**
                 * Decodes a DebugSessions message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugSessions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugSessions;

                /**
                 * Verifies a DebugSessions message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugSessions message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugSessions
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugSessions;

                /**
                 * Creates a plain object from a DebugSessions message. Also converts values to other types if specified.
                 * @param message DebugSessions
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugSessions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugSessions to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitGetRequest. */
            interface IDotReplitGetRequest {
            }

            /** Represents a DotReplitGetRequest. */
            class DotReplitGetRequest {

                /**
                 * Constructs a new DotReplitGetRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitGetRequest);

                /**
                 * Creates a new DotReplitGetRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitGetRequest instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitGetRequest): replit.goval.api.DotReplitGetRequest;

                /**
                 * Encodes the specified DotReplitGetRequest message. Does not implicitly {@link replit.goval.api.DotReplitGetRequest.verify|verify} messages.
                 * @param message DotReplitGetRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitGetRequest message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitGetRequest.verify|verify} messages.
                 * @param message DotReplitGetRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitGetRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitGetRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitGetRequest;

                /**
                 * Decodes a DotReplitGetRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitGetRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitGetRequest;

                /**
                 * Verifies a DotReplitGetRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitGetRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitGetRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitGetRequest;

                /**
                 * Creates a plain object from a DotReplitGetRequest message. Also converts values to other types if specified.
                 * @param message DotReplitGetRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitGetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitGetRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitGetResponse. */
            interface IDotReplitGetResponse {

                /** DotReplitGetResponse dotReplit */
                dotReplit?: (replit.goval.api.DotReplit|replit.goval.api.IDotReplit|null);
            }

            /** Represents a DotReplitGetResponse. */
            class DotReplitGetResponse {

                /**
                 * Constructs a new DotReplitGetResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitGetResponse);

                /** DotReplitGetResponse dotReplit. */
                public dotReplit?: (replit.goval.api.DotReplit|null);

                /**
                 * Creates a new DotReplitGetResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitGetResponse instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitGetResponse): replit.goval.api.DotReplitGetResponse;

                /**
                 * Encodes the specified DotReplitGetResponse message. Does not implicitly {@link replit.goval.api.DotReplitGetResponse.verify|verify} messages.
                 * @param message DotReplitGetResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitGetResponse message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitGetResponse.verify|verify} messages.
                 * @param message DotReplitGetResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitGetResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitGetResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitGetResponse;

                /**
                 * Decodes a DotReplitGetResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitGetResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitGetResponse;

                /**
                 * Verifies a DotReplitGetResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitGetResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitGetResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitGetResponse;

                /**
                 * Creates a plain object from a DotReplitGetResponse message. Also converts values to other types if specified.
                 * @param message DotReplitGetResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitGetResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitGetResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RunConfigGetRequest. */
            interface IRunConfigGetRequest {
            }

            /** Represents a RunConfigGetRequest. */
            class RunConfigGetRequest {

                /**
                 * Constructs a new RunConfigGetRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRunConfigGetRequest);

                /**
                 * Creates a new RunConfigGetRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RunConfigGetRequest instance
                 */
                public static create(properties?: replit.goval.api.IRunConfigGetRequest): replit.goval.api.RunConfigGetRequest;

                /**
                 * Encodes the specified RunConfigGetRequest message. Does not implicitly {@link replit.goval.api.RunConfigGetRequest.verify|verify} messages.
                 * @param message RunConfigGetRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.RunConfigGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RunConfigGetRequest message, length delimited. Does not implicitly {@link replit.goval.api.RunConfigGetRequest.verify|verify} messages.
                 * @param message RunConfigGetRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.RunConfigGetRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RunConfigGetRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RunConfigGetRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.RunConfigGetRequest;

                /**
                 * Decodes a RunConfigGetRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RunConfigGetRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.RunConfigGetRequest;

                /**
                 * Verifies a RunConfigGetRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RunConfigGetRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RunConfigGetRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.RunConfigGetRequest;

                /**
                 * Creates a plain object from a RunConfigGetRequest message. Also converts values to other types if specified.
                 * @param message RunConfigGetRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.RunConfigGetRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RunConfigGetRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RunConfigGetResponse. */
            interface IRunConfigGetResponse {

                /** RunConfigGetResponse interp */
                interp?: (replit.goval.api.DotReplitInterp|replit.goval.api.IDotReplitInterp|null);

                /** RunConfigGetResponse run */
                run?: (replit.goval.api.RunConfigGetResponse.Run|replit.goval.api.RunConfigGetResponse.IRun|null);
            }

            /** Represents a RunConfigGetResponse. */
            class RunConfigGetResponse {

                /**
                 * Constructs a new RunConfigGetResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRunConfigGetResponse);

                /** RunConfigGetResponse interp. */
                public interp?: (replit.goval.api.DotReplitInterp|null);

                /** RunConfigGetResponse run. */
                public run?: (replit.goval.api.RunConfigGetResponse.Run|null);

                /** RunConfigGetResponse config. */
                public config?: ("interp"|"run");

                /**
                 * Creates a new RunConfigGetResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RunConfigGetResponse instance
                 */
                public static create(properties?: replit.goval.api.IRunConfigGetResponse): replit.goval.api.RunConfigGetResponse;

                /**
                 * Encodes the specified RunConfigGetResponse message. Does not implicitly {@link replit.goval.api.RunConfigGetResponse.verify|verify} messages.
                 * @param message RunConfigGetResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.RunConfigGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RunConfigGetResponse message, length delimited. Does not implicitly {@link replit.goval.api.RunConfigGetResponse.verify|verify} messages.
                 * @param message RunConfigGetResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.RunConfigGetResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RunConfigGetResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RunConfigGetResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.RunConfigGetResponse;

                /**
                 * Decodes a RunConfigGetResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RunConfigGetResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.RunConfigGetResponse;

                /**
                 * Verifies a RunConfigGetResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RunConfigGetResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RunConfigGetResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.RunConfigGetResponse;

                /**
                 * Creates a plain object from a RunConfigGetResponse message. Also converts values to other types if specified.
                 * @param message RunConfigGetResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.RunConfigGetResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RunConfigGetResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace RunConfigGetResponse {

                /** Properties of a Run. */
                interface IRun {

                    /** Run compile */
                    compile?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                    /** Run run */
                    run?: (replit.goval.api.Exec|replit.goval.api.IExec|null);
                }

                /** Represents a Run. */
                class Run {

                    /**
                     * Constructs a new Run.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.RunConfigGetResponse.IRun);

                    /** Run compile. */
                    public compile?: (replit.goval.api.Exec|null);

                    /** Run run. */
                    public run?: (replit.goval.api.Exec|null);

                    /**
                     * Creates a new Run instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Run instance
                     */
                    public static create(properties?: replit.goval.api.RunConfigGetResponse.IRun): replit.goval.api.RunConfigGetResponse.Run;

                    /**
                     * Encodes the specified Run message. Does not implicitly {@link replit.goval.api.RunConfigGetResponse.Run.verify|verify} messages.
                     * @param message Run message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.RunConfigGetResponse.Run, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Run message, length delimited. Does not implicitly {@link replit.goval.api.RunConfigGetResponse.Run.verify|verify} messages.
                     * @param message Run message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.RunConfigGetResponse.Run, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Run message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Run
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.RunConfigGetResponse.Run;

                    /**
                     * Decodes a Run message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Run
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.RunConfigGetResponse.Run;

                    /**
                     * Verifies a Run message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Run message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Run
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.RunConfigGetResponse.Run;

                    /**
                     * Creates a plain object from a Run message. Also converts values to other types if specified.
                     * @param message Run
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.RunConfigGetResponse.Run, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Run to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Properties of a DotReplitUpdateOp. */
            interface IDotReplitUpdateOp {

                /** DotReplitUpdateOp op */
                op?: (string|null);

                /** DotReplitUpdateOp path */
                path?: (string|null);

                /** DotReplitUpdateOp value */
                value?: (string|null);
            }

            /** Represents a DotReplitUpdateOp. */
            class DotReplitUpdateOp {

                /**
                 * Constructs a new DotReplitUpdateOp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitUpdateOp);

                /** DotReplitUpdateOp op. */
                public op: string;

                /** DotReplitUpdateOp path. */
                public path: string;

                /** DotReplitUpdateOp value. */
                public value: string;

                /**
                 * Creates a new DotReplitUpdateOp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitUpdateOp instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitUpdateOp): replit.goval.api.DotReplitUpdateOp;

                /**
                 * Encodes the specified DotReplitUpdateOp message. Does not implicitly {@link replit.goval.api.DotReplitUpdateOp.verify|verify} messages.
                 * @param message DotReplitUpdateOp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitUpdateOp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitUpdateOp message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitUpdateOp.verify|verify} messages.
                 * @param message DotReplitUpdateOp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitUpdateOp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitUpdateOp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitUpdateOp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitUpdateOp;

                /**
                 * Decodes a DotReplitUpdateOp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitUpdateOp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitUpdateOp;

                /**
                 * Verifies a DotReplitUpdateOp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitUpdateOp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitUpdateOp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitUpdateOp;

                /**
                 * Creates a plain object from a DotReplitUpdateOp message. Also converts values to other types if specified.
                 * @param message DotReplitUpdateOp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitUpdateOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitUpdateOp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitUpdateRequest. */
            interface IDotReplitUpdateRequest {

                /** DotReplitUpdateRequest ops */
                ops?: ((replit.goval.api.DotReplitUpdateOp|replit.goval.api.IDotReplitUpdateOp)[]|null);
            }

            /** Represents a DotReplitUpdateRequest. */
            class DotReplitUpdateRequest {

                /**
                 * Constructs a new DotReplitUpdateRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitUpdateRequest);

                /** DotReplitUpdateRequest ops. */
                public ops: replit.goval.api.DotReplitUpdateOp[];

                /**
                 * Creates a new DotReplitUpdateRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitUpdateRequest instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitUpdateRequest): replit.goval.api.DotReplitUpdateRequest;

                /**
                 * Encodes the specified DotReplitUpdateRequest message. Does not implicitly {@link replit.goval.api.DotReplitUpdateRequest.verify|verify} messages.
                 * @param message DotReplitUpdateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitUpdateRequest message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitUpdateRequest.verify|verify} messages.
                 * @param message DotReplitUpdateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitUpdateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitUpdateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitUpdateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitUpdateRequest;

                /**
                 * Decodes a DotReplitUpdateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitUpdateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitUpdateRequest;

                /**
                 * Verifies a DotReplitUpdateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitUpdateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitUpdateRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitUpdateRequest;

                /**
                 * Creates a plain object from a DotReplitUpdateRequest message. Also converts values to other types if specified.
                 * @param message DotReplitUpdateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitUpdateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitUpdateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitUpdateResponse. */
            interface IDotReplitUpdateResponse {
            }

            /** Represents a DotReplitUpdateResponse. */
            class DotReplitUpdateResponse {

                /**
                 * Constructs a new DotReplitUpdateResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitUpdateResponse);

                /**
                 * Creates a new DotReplitUpdateResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitUpdateResponse instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitUpdateResponse): replit.goval.api.DotReplitUpdateResponse;

                /**
                 * Encodes the specified DotReplitUpdateResponse message. Does not implicitly {@link replit.goval.api.DotReplitUpdateResponse.verify|verify} messages.
                 * @param message DotReplitUpdateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitUpdateResponse message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitUpdateResponse.verify|verify} messages.
                 * @param message DotReplitUpdateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitUpdateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitUpdateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitUpdateResponse;

                /**
                 * Decodes a DotReplitUpdateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitUpdateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitUpdateResponse;

                /**
                 * Verifies a DotReplitUpdateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitUpdateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitUpdateResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitUpdateResponse;

                /**
                 * Creates a plain object from a DotReplitUpdateResponse message. Also converts values to other types if specified.
                 * @param message DotReplitUpdateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitUpdateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitUpdateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugAddBreakpointRequest. */
            interface IDebugAddBreakpointRequest {

                /** DebugAddBreakpointRequest path */
                path?: (string|null);

                /** DebugAddBreakpointRequest otVersion */
                otVersion?: (number|null);

                /** DebugAddBreakpointRequest otIndex */
                otIndex?: (number|null);

                /** DebugAddBreakpointRequest sessionLocal */
                sessionLocal?: (boolean|null);

                /** DebugAddBreakpointRequest line */
                line?: (number|null);

                /** DebugAddBreakpointRequest logMessage */
                logMessage?: (string|null);
            }

            /** Represents a DebugAddBreakpointRequest. */
            class DebugAddBreakpointRequest {

                /**
                 * Constructs a new DebugAddBreakpointRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugAddBreakpointRequest);

                /** DebugAddBreakpointRequest path. */
                public path: string;

                /** DebugAddBreakpointRequest otVersion. */
                public otVersion: number;

                /** DebugAddBreakpointRequest otIndex. */
                public otIndex: number;

                /** DebugAddBreakpointRequest sessionLocal. */
                public sessionLocal: boolean;

                /** DebugAddBreakpointRequest line. */
                public line: number;

                /** DebugAddBreakpointRequest logMessage. */
                public logMessage: string;

                /**
                 * Creates a new DebugAddBreakpointRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugAddBreakpointRequest instance
                 */
                public static create(properties?: replit.goval.api.IDebugAddBreakpointRequest): replit.goval.api.DebugAddBreakpointRequest;

                /**
                 * Encodes the specified DebugAddBreakpointRequest message. Does not implicitly {@link replit.goval.api.DebugAddBreakpointRequest.verify|verify} messages.
                 * @param message DebugAddBreakpointRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugAddBreakpointRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugAddBreakpointRequest message, length delimited. Does not implicitly {@link replit.goval.api.DebugAddBreakpointRequest.verify|verify} messages.
                 * @param message DebugAddBreakpointRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugAddBreakpointRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugAddBreakpointRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugAddBreakpointRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugAddBreakpointRequest;

                /**
                 * Decodes a DebugAddBreakpointRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugAddBreakpointRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugAddBreakpointRequest;

                /**
                 * Verifies a DebugAddBreakpointRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugAddBreakpointRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugAddBreakpointRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugAddBreakpointRequest;

                /**
                 * Creates a plain object from a DebugAddBreakpointRequest message. Also converts values to other types if specified.
                 * @param message DebugAddBreakpointRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugAddBreakpointRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugAddBreakpointRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugUpdateBreakpointRequest. */
            interface IDebugUpdateBreakpointRequest {

                /** DebugUpdateBreakpointRequest breakpointId */
                breakpointId?: (string|null);

                /** DebugUpdateBreakpointRequest logMessage */
                logMessage?: (string|null);
            }

            /** Represents a DebugUpdateBreakpointRequest. */
            class DebugUpdateBreakpointRequest {

                /**
                 * Constructs a new DebugUpdateBreakpointRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugUpdateBreakpointRequest);

                /** DebugUpdateBreakpointRequest breakpointId. */
                public breakpointId: string;

                /** DebugUpdateBreakpointRequest logMessage. */
                public logMessage: string;

                /**
                 * Creates a new DebugUpdateBreakpointRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugUpdateBreakpointRequest instance
                 */
                public static create(properties?: replit.goval.api.IDebugUpdateBreakpointRequest): replit.goval.api.DebugUpdateBreakpointRequest;

                /**
                 * Encodes the specified DebugUpdateBreakpointRequest message. Does not implicitly {@link replit.goval.api.DebugUpdateBreakpointRequest.verify|verify} messages.
                 * @param message DebugUpdateBreakpointRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugUpdateBreakpointRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugUpdateBreakpointRequest message, length delimited. Does not implicitly {@link replit.goval.api.DebugUpdateBreakpointRequest.verify|verify} messages.
                 * @param message DebugUpdateBreakpointRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugUpdateBreakpointRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugUpdateBreakpointRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugUpdateBreakpointRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugUpdateBreakpointRequest;

                /**
                 * Decodes a DebugUpdateBreakpointRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugUpdateBreakpointRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugUpdateBreakpointRequest;

                /**
                 * Verifies a DebugUpdateBreakpointRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugUpdateBreakpointRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugUpdateBreakpointRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugUpdateBreakpointRequest;

                /**
                 * Creates a plain object from a DebugUpdateBreakpointRequest message. Also converts values to other types if specified.
                 * @param message DebugUpdateBreakpointRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugUpdateBreakpointRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugUpdateBreakpointRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugRemoveBreakpointRequest. */
            interface IDebugRemoveBreakpointRequest {

                /** DebugRemoveBreakpointRequest breakpointId */
                breakpointId?: (string|null);
            }

            /** Represents a DebugRemoveBreakpointRequest. */
            class DebugRemoveBreakpointRequest {

                /**
                 * Constructs a new DebugRemoveBreakpointRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugRemoveBreakpointRequest);

                /** DebugRemoveBreakpointRequest breakpointId. */
                public breakpointId: string;

                /**
                 * Creates a new DebugRemoveBreakpointRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugRemoveBreakpointRequest instance
                 */
                public static create(properties?: replit.goval.api.IDebugRemoveBreakpointRequest): replit.goval.api.DebugRemoveBreakpointRequest;

                /**
                 * Encodes the specified DebugRemoveBreakpointRequest message. Does not implicitly {@link replit.goval.api.DebugRemoveBreakpointRequest.verify|verify} messages.
                 * @param message DebugRemoveBreakpointRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugRemoveBreakpointRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugRemoveBreakpointRequest message, length delimited. Does not implicitly {@link replit.goval.api.DebugRemoveBreakpointRequest.verify|verify} messages.
                 * @param message DebugRemoveBreakpointRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugRemoveBreakpointRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugRemoveBreakpointRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugRemoveBreakpointRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugRemoveBreakpointRequest;

                /**
                 * Decodes a DebugRemoveBreakpointRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugRemoveBreakpointRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugRemoveBreakpointRequest;

                /**
                 * Verifies a DebugRemoveBreakpointRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugRemoveBreakpointRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugRemoveBreakpointRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugRemoveBreakpointRequest;

                /**
                 * Creates a plain object from a DebugRemoveBreakpointRequest message. Also converts values to other types if specified.
                 * @param message DebugRemoveBreakpointRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugRemoveBreakpointRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugRemoveBreakpointRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugBreakpointEvent. */
            interface IDebugBreakpointEvent {

                /** DebugBreakpointEvent path */
                path?: (string|null);

                /** DebugBreakpointEvent absolutePath */
                absolutePath?: (string|null);

                /** DebugBreakpointEvent breakpoints */
                breakpoints?: ((replit.goval.api.DebugBreakpoint|replit.goval.api.IDebugBreakpoint)[]|null);
            }

            /** Represents a DebugBreakpointEvent. */
            class DebugBreakpointEvent {

                /**
                 * Constructs a new DebugBreakpointEvent.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugBreakpointEvent);

                /** DebugBreakpointEvent path. */
                public path: string;

                /** DebugBreakpointEvent absolutePath. */
                public absolutePath: string;

                /** DebugBreakpointEvent breakpoints. */
                public breakpoints: replit.goval.api.DebugBreakpoint[];

                /**
                 * Creates a new DebugBreakpointEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugBreakpointEvent instance
                 */
                public static create(properties?: replit.goval.api.IDebugBreakpointEvent): replit.goval.api.DebugBreakpointEvent;

                /**
                 * Encodes the specified DebugBreakpointEvent message. Does not implicitly {@link replit.goval.api.DebugBreakpointEvent.verify|verify} messages.
                 * @param message DebugBreakpointEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugBreakpointEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugBreakpointEvent message, length delimited. Does not implicitly {@link replit.goval.api.DebugBreakpointEvent.verify|verify} messages.
                 * @param message DebugBreakpointEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugBreakpointEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugBreakpointEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugBreakpointEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugBreakpointEvent;

                /**
                 * Decodes a DebugBreakpointEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugBreakpointEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugBreakpointEvent;

                /**
                 * Verifies a DebugBreakpointEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugBreakpointEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugBreakpointEvent
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugBreakpointEvent;

                /**
                 * Creates a plain object from a DebugBreakpointEvent message. Also converts values to other types if specified.
                 * @param message DebugBreakpointEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugBreakpointEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugBreakpointEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebugBreakpoint. */
            interface IDebugBreakpoint {

                /** DebugBreakpoint breakpointId */
                breakpointId?: (string|null);

                /** DebugBreakpoint line */
                line?: (number|null);

                /** DebugBreakpoint otVersion */
                otVersion?: (number|null);

                /** DebugBreakpoint otIndex */
                otIndex?: (number|null);

                /** DebugBreakpoint sessionLocal */
                sessionLocal?: (boolean|null);

                /** DebugBreakpoint logMessage */
                logMessage?: (string|null);
            }

            /** Represents a DebugBreakpoint. */
            class DebugBreakpoint {

                /**
                 * Constructs a new DebugBreakpoint.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebugBreakpoint);

                /** DebugBreakpoint breakpointId. */
                public breakpointId: string;

                /** DebugBreakpoint line. */
                public line: number;

                /** DebugBreakpoint otVersion. */
                public otVersion: number;

                /** DebugBreakpoint otIndex. */
                public otIndex: number;

                /** DebugBreakpoint sessionLocal. */
                public sessionLocal: boolean;

                /** DebugBreakpoint logMessage. */
                public logMessage: string;

                /**
                 * Creates a new DebugBreakpoint instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebugBreakpoint instance
                 */
                public static create(properties?: replit.goval.api.IDebugBreakpoint): replit.goval.api.DebugBreakpoint;

                /**
                 * Encodes the specified DebugBreakpoint message. Does not implicitly {@link replit.goval.api.DebugBreakpoint.verify|verify} messages.
                 * @param message DebugBreakpoint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebugBreakpoint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebugBreakpoint message, length delimited. Does not implicitly {@link replit.goval.api.DebugBreakpoint.verify|verify} messages.
                 * @param message DebugBreakpoint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebugBreakpoint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebugBreakpoint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebugBreakpoint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebugBreakpoint;

                /**
                 * Decodes a DebugBreakpoint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebugBreakpoint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebugBreakpoint;

                /**
                 * Verifies a DebugBreakpoint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebugBreakpoint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebugBreakpoint
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebugBreakpoint;

                /**
                 * Creates a plain object from a DebugBreakpoint message. Also converts values to other types if specified.
                 * @param message DebugBreakpoint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebugBreakpoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebugBreakpoint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplit. */
            interface IDotReplit {

                /** DotReplit run */
                run?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DotReplit compile */
                compile?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DotReplit debugger */
                "debugger"?: (replit.goval.api.DebuggerConfig|replit.goval.api.IDebuggerConfig|null);

                /** DotReplit language */
                language?: (string|null);

                /** DotReplit onBoot */
                onBoot?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DotReplit packager */
                packager?: (replit.goval.api.DotReplitPackager|replit.goval.api.IDotReplitPackager|null);

                /** DotReplit interpreter */
                interpreter?: (replit.goval.api.DotReplitInterp|replit.goval.api.IDotReplitInterp|null);

                /** DotReplit entrypoint */
                entrypoint?: (string|null);

                /** DotReplit languages */
                languages?: ({ [k: string]: (replit.goval.api.DotReplitLanguage|replit.goval.api.IDotReplitLanguage) }|null);

                /** DotReplit unitTest */
                unitTest?: (replit.goval.api.DotReplitUnitTest|replit.goval.api.IDotReplitUnitTest|null);

                /** DotReplit hidden */
                hidden?: (string[]|null);

                /** DotReplit nix */
                nix?: (replit.goval.api.NixConfig|replit.goval.api.INixConfig|null);

                /** DotReplit audio */
                audio?: (boolean|null);

                /** DotReplit hosting */
                hosting?: (replit.goval.api.HostingConfig|replit.goval.api.IHostingConfig|null);

                /** DotReplit env */
                env?: ({ [k: string]: string }|null);

                /** DotReplit gitHubImport */
                gitHubImport?: (replit.goval.api.GitHubImportConfig|replit.goval.api.IGitHubImportConfig|null);

                /** DotReplit auth */
                auth?: (replit.goval.api.AuthConfig|replit.goval.api.IAuthConfig|null);

                /** DotReplit hintsList */
                hintsList?: ((replit.goval.api.DotReplitHint|replit.goval.api.IDotReplitHint)[]|null);

                /** DotReplit ports */
                ports?: ((replit.goval.api.DotReplitPort|replit.goval.api.IDotReplitPort)[]|null);

                /** DotReplit orderedEnv */
                orderedEnv?: ((replit.goval.api.DotReplitEnvVar|replit.goval.api.IDotReplitEnvVar)[]|null);

                /** DotReplit refreshWebViewOnFileChange */
                refreshWebViewOnFileChange?: (string[]|null);

                /** DotReplit deployment */
                deployment?: (replit.goval.api.DeploymentConfig|replit.goval.api.IDeploymentConfig|null);
            }

            /** Represents a DotReplit. */
            class DotReplit {

                /**
                 * Constructs a new DotReplit.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplit);

                /** DotReplit run. */
                public run?: (replit.goval.api.Exec|null);

                /** DotReplit compile. */
                public compile?: (replit.goval.api.Exec|null);

                /** DotReplit debugger. */
                public debugger?: (replit.goval.api.DebuggerConfig|null);

                /** DotReplit language. */
                public language: string;

                /** DotReplit onBoot. */
                public onBoot?: (replit.goval.api.Exec|null);

                /** DotReplit packager. */
                public packager?: (replit.goval.api.DotReplitPackager|null);

                /** DotReplit interpreter. */
                public interpreter?: (replit.goval.api.DotReplitInterp|null);

                /** DotReplit entrypoint. */
                public entrypoint: string;

                /** DotReplit languages. */
                public languages: { [k: string]: replit.goval.api.DotReplitLanguage };

                /** DotReplit unitTest. */
                public unitTest?: (replit.goval.api.DotReplitUnitTest|null);

                /** DotReplit hidden. */
                public hidden: string[];

                /** DotReplit nix. */
                public nix?: (replit.goval.api.NixConfig|null);

                /** DotReplit audio. */
                public audio: boolean;

                /** DotReplit hosting. */
                public hosting?: (replit.goval.api.HostingConfig|null);

                /** DotReplit env. */
                public env: { [k: string]: string };

                /** DotReplit gitHubImport. */
                public gitHubImport?: (replit.goval.api.GitHubImportConfig|null);

                /** DotReplit auth. */
                public auth?: (replit.goval.api.AuthConfig|null);

                /** DotReplit hintsList. */
                public hintsList: replit.goval.api.DotReplitHint[];

                /** DotReplit ports. */
                public ports: replit.goval.api.DotReplitPort[];

                /** DotReplit orderedEnv. */
                public orderedEnv: replit.goval.api.DotReplitEnvVar[];

                /** DotReplit refreshWebViewOnFileChange. */
                public refreshWebViewOnFileChange: string[];

                /** DotReplit deployment. */
                public deployment?: (replit.goval.api.DeploymentConfig|null);

                /**
                 * Creates a new DotReplit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplit instance
                 */
                public static create(properties?: replit.goval.api.IDotReplit): replit.goval.api.DotReplit;

                /**
                 * Encodes the specified DotReplit message. Does not implicitly {@link replit.goval.api.DotReplit.verify|verify} messages.
                 * @param message DotReplit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplit message, length delimited. Does not implicitly {@link replit.goval.api.DotReplit.verify|verify} messages.
                 * @param message DotReplit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplit;

                /**
                 * Decodes a DotReplit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplit;

                /**
                 * Verifies a DotReplit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplit
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplit;

                /**
                 * Creates a plain object from a DotReplit message. Also converts values to other types if specified.
                 * @param message DotReplit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitEnvVar. */
            interface IDotReplitEnvVar {

                /** DotReplitEnvVar key */
                key?: (string|null);

                /** DotReplitEnvVar value */
                value?: (string|null);
            }

            /** Represents a DotReplitEnvVar. */
            class DotReplitEnvVar {

                /**
                 * Constructs a new DotReplitEnvVar.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitEnvVar);

                /** DotReplitEnvVar key. */
                public key: string;

                /** DotReplitEnvVar value. */
                public value: string;

                /**
                 * Creates a new DotReplitEnvVar instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitEnvVar instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitEnvVar): replit.goval.api.DotReplitEnvVar;

                /**
                 * Encodes the specified DotReplitEnvVar message. Does not implicitly {@link replit.goval.api.DotReplitEnvVar.verify|verify} messages.
                 * @param message DotReplitEnvVar message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitEnvVar, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitEnvVar message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitEnvVar.verify|verify} messages.
                 * @param message DotReplitEnvVar message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitEnvVar, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitEnvVar message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitEnvVar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitEnvVar;

                /**
                 * Decodes a DotReplitEnvVar message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitEnvVar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitEnvVar;

                /**
                 * Verifies a DotReplitEnvVar message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitEnvVar message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitEnvVar
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitEnvVar;

                /**
                 * Creates a plain object from a DotReplitEnvVar message. Also converts values to other types if specified.
                 * @param message DotReplitEnvVar
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitEnvVar, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitEnvVar to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitPort. */
            interface IDotReplitPort {

                /** DotReplitPort localPort */
                localPort?: (number|null);

                /** DotReplitPort externalPort */
                externalPort?: (number|null);
            }

            /** Represents a DotReplitPort. */
            class DotReplitPort {

                /**
                 * Constructs a new DotReplitPort.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitPort);

                /** DotReplitPort localPort. */
                public localPort: number;

                /** DotReplitPort externalPort. */
                public externalPort: number;

                /**
                 * Creates a new DotReplitPort instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitPort instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitPort): replit.goval.api.DotReplitPort;

                /**
                 * Encodes the specified DotReplitPort message. Does not implicitly {@link replit.goval.api.DotReplitPort.verify|verify} messages.
                 * @param message DotReplitPort message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitPort, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitPort message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitPort.verify|verify} messages.
                 * @param message DotReplitPort message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitPort, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitPort message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitPort
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitPort;

                /**
                 * Decodes a DotReplitPort message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitPort
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitPort;

                /**
                 * Verifies a DotReplitPort message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitPort message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitPort
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitPort;

                /**
                 * Creates a plain object from a DotReplitPort message. Also converts values to other types if specified.
                 * @param message DotReplitPort
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitPort, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitPort to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitHint. */
            interface IDotReplitHint {

                /** DotReplitHint regex */
                regex?: (string|null);

                /** DotReplitHint message */
                message?: (string|null);
            }

            /** Represents a DotReplitHint. */
            class DotReplitHint {

                /**
                 * Constructs a new DotReplitHint.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitHint);

                /** DotReplitHint regex. */
                public regex: string;

                /** DotReplitHint message. */
                public message: string;

                /**
                 * Creates a new DotReplitHint instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitHint instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitHint): replit.goval.api.DotReplitHint;

                /**
                 * Encodes the specified DotReplitHint message. Does not implicitly {@link replit.goval.api.DotReplitHint.verify|verify} messages.
                 * @param message DotReplitHint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitHint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitHint message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitHint.verify|verify} messages.
                 * @param message DotReplitHint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitHint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitHint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitHint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitHint;

                /**
                 * Decodes a DotReplitHint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitHint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitHint;

                /**
                 * Verifies a DotReplitHint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitHint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitHint
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitHint;

                /**
                 * Creates a plain object from a DotReplitHint message. Also converts values to other types if specified.
                 * @param message DotReplitHint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitHint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitHint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GitHubImportConfig. */
            interface IGitHubImportConfig {

                /** GitHubImportConfig requiredFiles */
                requiredFiles?: (string[]|null);
            }

            /** Represents a GitHubImportConfig. */
            class GitHubImportConfig {

                /**
                 * Constructs a new GitHubImportConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGitHubImportConfig);

                /** GitHubImportConfig requiredFiles. */
                public requiredFiles: string[];

                /**
                 * Creates a new GitHubImportConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GitHubImportConfig instance
                 */
                public static create(properties?: replit.goval.api.IGitHubImportConfig): replit.goval.api.GitHubImportConfig;

                /**
                 * Encodes the specified GitHubImportConfig message. Does not implicitly {@link replit.goval.api.GitHubImportConfig.verify|verify} messages.
                 * @param message GitHubImportConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.GitHubImportConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GitHubImportConfig message, length delimited. Does not implicitly {@link replit.goval.api.GitHubImportConfig.verify|verify} messages.
                 * @param message GitHubImportConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.GitHubImportConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GitHubImportConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GitHubImportConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.GitHubImportConfig;

                /**
                 * Decodes a GitHubImportConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GitHubImportConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.GitHubImportConfig;

                /**
                 * Verifies a GitHubImportConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GitHubImportConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GitHubImportConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.GitHubImportConfig;

                /**
                 * Creates a plain object from a GitHubImportConfig message. Also converts values to other types if specified.
                 * @param message GitHubImportConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.GitHubImportConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GitHubImportConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DeploymentConfig. */
            interface IDeploymentConfig {

                /** DeploymentConfig run */
                run?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DeploymentConfig build */
                build?: (replit.goval.api.Exec|replit.goval.api.IExec|null);
            }

            /** Represents a DeploymentConfig. */
            class DeploymentConfig {

                /**
                 * Constructs a new DeploymentConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDeploymentConfig);

                /** DeploymentConfig run. */
                public run?: (replit.goval.api.Exec|null);

                /** DeploymentConfig build. */
                public build?: (replit.goval.api.Exec|null);

                /**
                 * Creates a new DeploymentConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DeploymentConfig instance
                 */
                public static create(properties?: replit.goval.api.IDeploymentConfig): replit.goval.api.DeploymentConfig;

                /**
                 * Encodes the specified DeploymentConfig message. Does not implicitly {@link replit.goval.api.DeploymentConfig.verify|verify} messages.
                 * @param message DeploymentConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DeploymentConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DeploymentConfig message, length delimited. Does not implicitly {@link replit.goval.api.DeploymentConfig.verify|verify} messages.
                 * @param message DeploymentConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DeploymentConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DeploymentConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DeploymentConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DeploymentConfig;

                /**
                 * Decodes a DeploymentConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DeploymentConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DeploymentConfig;

                /**
                 * Verifies a DeploymentConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DeploymentConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DeploymentConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DeploymentConfig;

                /**
                 * Creates a plain object from a DeploymentConfig message. Also converts values to other types if specified.
                 * @param message DeploymentConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DeploymentConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DeploymentConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NixConfig. */
            interface INixConfig {

                /** NixConfig channel */
                channel?: (string|null);
            }

            /** Represents a NixConfig. */
            class NixConfig {

                /**
                 * Constructs a new NixConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.INixConfig);

                /** NixConfig channel. */
                public channel: string;

                /**
                 * Creates a new NixConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NixConfig instance
                 */
                public static create(properties?: replit.goval.api.INixConfig): replit.goval.api.NixConfig;

                /**
                 * Encodes the specified NixConfig message. Does not implicitly {@link replit.goval.api.NixConfig.verify|verify} messages.
                 * @param message NixConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.NixConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NixConfig message, length delimited. Does not implicitly {@link replit.goval.api.NixConfig.verify|verify} messages.
                 * @param message NixConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.NixConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NixConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NixConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.NixConfig;

                /**
                 * Decodes a NixConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NixConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.NixConfig;

                /**
                 * Verifies a NixConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NixConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NixConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.NixConfig;

                /**
                 * Creates a plain object from a NixConfig message. Also converts values to other types if specified.
                 * @param message NixConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.NixConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NixConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a HostingConfig. */
            interface IHostingConfig {

                /** HostingConfig route */
                route?: (string|null);

                /** HostingConfig directory */
                directory?: (string|null);
            }

            /** Represents a HostingConfig. */
            class HostingConfig {

                /**
                 * Constructs a new HostingConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IHostingConfig);

                /** HostingConfig route. */
                public route: string;

                /** HostingConfig directory. */
                public directory: string;

                /**
                 * Creates a new HostingConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns HostingConfig instance
                 */
                public static create(properties?: replit.goval.api.IHostingConfig): replit.goval.api.HostingConfig;

                /**
                 * Encodes the specified HostingConfig message. Does not implicitly {@link replit.goval.api.HostingConfig.verify|verify} messages.
                 * @param message HostingConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.HostingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified HostingConfig message, length delimited. Does not implicitly {@link replit.goval.api.HostingConfig.verify|verify} messages.
                 * @param message HostingConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.HostingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HostingConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns HostingConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.HostingConfig;

                /**
                 * Decodes a HostingConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns HostingConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.HostingConfig;

                /**
                 * Verifies a HostingConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a HostingConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns HostingConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.HostingConfig;

                /**
                 * Creates a plain object from a HostingConfig message. Also converts values to other types if specified.
                 * @param message HostingConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.HostingConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this HostingConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AuthConfig. */
            interface IAuthConfig {

                /** AuthConfig pageEnabled */
                pageEnabled?: (boolean|null);

                /** AuthConfig pageTitle */
                pageTitle?: (string|null);

                /** AuthConfig pageDescription */
                pageDescription?: (string|null);

                /** AuthConfig pageColor */
                pageColor?: (string|null);

                /** AuthConfig pageImage */
                pageImage?: (string|null);

                /** AuthConfig buttonEnabled */
                buttonEnabled?: (boolean|null);
            }

            /** Represents an AuthConfig. */
            class AuthConfig {

                /**
                 * Constructs a new AuthConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAuthConfig);

                /** AuthConfig pageEnabled. */
                public pageEnabled: boolean;

                /** AuthConfig pageTitle. */
                public pageTitle: string;

                /** AuthConfig pageDescription. */
                public pageDescription: string;

                /** AuthConfig pageColor. */
                public pageColor: string;

                /** AuthConfig pageImage. */
                public pageImage: string;

                /** AuthConfig buttonEnabled. */
                public buttonEnabled: boolean;

                /**
                 * Creates a new AuthConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AuthConfig instance
                 */
                public static create(properties?: replit.goval.api.IAuthConfig): replit.goval.api.AuthConfig;

                /**
                 * Encodes the specified AuthConfig message. Does not implicitly {@link replit.goval.api.AuthConfig.verify|verify} messages.
                 * @param message AuthConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.AuthConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AuthConfig message, length delimited. Does not implicitly {@link replit.goval.api.AuthConfig.verify|verify} messages.
                 * @param message AuthConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.AuthConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AuthConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AuthConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.AuthConfig;

                /**
                 * Decodes an AuthConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AuthConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.AuthConfig;

                /**
                 * Verifies an AuthConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AuthConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AuthConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.AuthConfig;

                /**
                 * Creates a plain object from an AuthConfig message. Also converts values to other types if specified.
                 * @param message AuthConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.AuthConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AuthConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitInterp. */
            interface IDotReplitInterp {

                /** DotReplitInterp command */
                command?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DotReplitInterp prompt */
                prompt?: (Uint8Array|null);
            }

            /** Represents a DotReplitInterp. */
            class DotReplitInterp {

                /**
                 * Constructs a new DotReplitInterp.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitInterp);

                /** DotReplitInterp command. */
                public command?: (replit.goval.api.Exec|null);

                /** DotReplitInterp prompt. */
                public prompt: Uint8Array;

                /**
                 * Creates a new DotReplitInterp instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitInterp instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitInterp): replit.goval.api.DotReplitInterp;

                /**
                 * Encodes the specified DotReplitInterp message. Does not implicitly {@link replit.goval.api.DotReplitInterp.verify|verify} messages.
                 * @param message DotReplitInterp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitInterp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitInterp message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitInterp.verify|verify} messages.
                 * @param message DotReplitInterp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitInterp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitInterp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitInterp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitInterp;

                /**
                 * Decodes a DotReplitInterp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitInterp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitInterp;

                /**
                 * Verifies a DotReplitInterp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitInterp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitInterp
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitInterp;

                /**
                 * Creates a plain object from a DotReplitInterp message. Also converts values to other types if specified.
                 * @param message DotReplitInterp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitInterp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitInterp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitLanguage. */
            interface IDotReplitLanguage {

                /** DotReplitLanguage pattern */
                pattern?: (string|null);

                /** DotReplitLanguage syntax */
                syntax?: (string|null);

                /** DotReplitLanguage languageServer */
                languageServer?: (replit.goval.api.LanguageServerConfig|replit.goval.api.ILanguageServerConfig|null);
            }

            /** Represents a DotReplitLanguage. */
            class DotReplitLanguage {

                /**
                 * Constructs a new DotReplitLanguage.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitLanguage);

                /** DotReplitLanguage pattern. */
                public pattern: string;

                /** DotReplitLanguage syntax. */
                public syntax: string;

                /** DotReplitLanguage languageServer. */
                public languageServer?: (replit.goval.api.LanguageServerConfig|null);

                /**
                 * Creates a new DotReplitLanguage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitLanguage instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitLanguage): replit.goval.api.DotReplitLanguage;

                /**
                 * Encodes the specified DotReplitLanguage message. Does not implicitly {@link replit.goval.api.DotReplitLanguage.verify|verify} messages.
                 * @param message DotReplitLanguage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitLanguage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitLanguage message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitLanguage.verify|verify} messages.
                 * @param message DotReplitLanguage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitLanguage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitLanguage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitLanguage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitLanguage;

                /**
                 * Decodes a DotReplitLanguage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitLanguage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitLanguage;

                /**
                 * Verifies a DotReplitLanguage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitLanguage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitLanguage
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitLanguage;

                /**
                 * Creates a plain object from a DotReplitLanguage message. Also converts values to other types if specified.
                 * @param message DotReplitLanguage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitLanguage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitLanguage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LanguageServerConfig. */
            interface ILanguageServerConfig {

                /** LanguageServerConfig startCommand */
                startCommand?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** LanguageServerConfig configurationJson */
                configurationJson?: (string|null);

                /** LanguageServerConfig initializationOptionsJson */
                initializationOptionsJson?: (string|null);
            }

            /** Represents a LanguageServerConfig. */
            class LanguageServerConfig {

                /**
                 * Constructs a new LanguageServerConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ILanguageServerConfig);

                /** LanguageServerConfig startCommand. */
                public startCommand?: (replit.goval.api.Exec|null);

                /** LanguageServerConfig configurationJson. */
                public configurationJson: string;

                /** LanguageServerConfig initializationOptionsJson. */
                public initializationOptionsJson: string;

                /**
                 * Creates a new LanguageServerConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns LanguageServerConfig instance
                 */
                public static create(properties?: replit.goval.api.ILanguageServerConfig): replit.goval.api.LanguageServerConfig;

                /**
                 * Encodes the specified LanguageServerConfig message. Does not implicitly {@link replit.goval.api.LanguageServerConfig.verify|verify} messages.
                 * @param message LanguageServerConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.LanguageServerConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LanguageServerConfig message, length delimited. Does not implicitly {@link replit.goval.api.LanguageServerConfig.verify|verify} messages.
                 * @param message LanguageServerConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.LanguageServerConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LanguageServerConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LanguageServerConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.LanguageServerConfig;

                /**
                 * Decodes a LanguageServerConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LanguageServerConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.LanguageServerConfig;

                /**
                 * Verifies a LanguageServerConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LanguageServerConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LanguageServerConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.LanguageServerConfig;

                /**
                 * Creates a plain object from a LanguageServerConfig message. Also converts values to other types if specified.
                 * @param message LanguageServerConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.LanguageServerConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LanguageServerConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitPackager. */
            interface IDotReplitPackager {

                /** DotReplitPackager afterInstall */
                afterInstall?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DotReplitPackager language */
                language?: (string|null);

                /** DotReplitPackager features */
                features?: (replit.goval.api.DotReplitPackagerFeatures|replit.goval.api.IDotReplitPackagerFeatures|null);

                /** DotReplitPackager env */
                env?: ({ [k: string]: string }|null);

                /** DotReplitPackager ignoredPaths */
                ignoredPaths?: (string[]|null);

                /** DotReplitPackager ignoredPackages */
                ignoredPackages?: (string[]|null);
            }

            /** Represents a DotReplitPackager. */
            class DotReplitPackager {

                /**
                 * Constructs a new DotReplitPackager.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitPackager);

                /** DotReplitPackager afterInstall. */
                public afterInstall?: (replit.goval.api.Exec|null);

                /** DotReplitPackager language. */
                public language: string;

                /** DotReplitPackager features. */
                public features?: (replit.goval.api.DotReplitPackagerFeatures|null);

                /** DotReplitPackager env. */
                public env: { [k: string]: string };

                /** DotReplitPackager ignoredPaths. */
                public ignoredPaths: string[];

                /** DotReplitPackager ignoredPackages. */
                public ignoredPackages: string[];

                /**
                 * Creates a new DotReplitPackager instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitPackager instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitPackager): replit.goval.api.DotReplitPackager;

                /**
                 * Encodes the specified DotReplitPackager message. Does not implicitly {@link replit.goval.api.DotReplitPackager.verify|verify} messages.
                 * @param message DotReplitPackager message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitPackager, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitPackager message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitPackager.verify|verify} messages.
                 * @param message DotReplitPackager message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitPackager, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitPackager message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitPackager
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitPackager;

                /**
                 * Decodes a DotReplitPackager message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitPackager
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitPackager;

                /**
                 * Verifies a DotReplitPackager message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitPackager message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitPackager
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitPackager;

                /**
                 * Creates a plain object from a DotReplitPackager message. Also converts values to other types if specified.
                 * @param message DotReplitPackager
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitPackager, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitPackager to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitPackagerFeatures. */
            interface IDotReplitPackagerFeatures {

                /** DotReplitPackagerFeatures packageSearch */
                packageSearch?: (boolean|null);

                /** DotReplitPackagerFeatures guessImports */
                guessImports?: (boolean|null);

                /** DotReplitPackagerFeatures enabledForHosting */
                enabledForHosting?: (boolean|null);
            }

            /** Represents a DotReplitPackagerFeatures. */
            class DotReplitPackagerFeatures {

                /**
                 * Constructs a new DotReplitPackagerFeatures.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitPackagerFeatures);

                /** DotReplitPackagerFeatures packageSearch. */
                public packageSearch: boolean;

                /** DotReplitPackagerFeatures guessImports. */
                public guessImports: boolean;

                /** DotReplitPackagerFeatures enabledForHosting. */
                public enabledForHosting: boolean;

                /**
                 * Creates a new DotReplitPackagerFeatures instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitPackagerFeatures instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitPackagerFeatures): replit.goval.api.DotReplitPackagerFeatures;

                /**
                 * Encodes the specified DotReplitPackagerFeatures message. Does not implicitly {@link replit.goval.api.DotReplitPackagerFeatures.verify|verify} messages.
                 * @param message DotReplitPackagerFeatures message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitPackagerFeatures, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitPackagerFeatures message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitPackagerFeatures.verify|verify} messages.
                 * @param message DotReplitPackagerFeatures message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitPackagerFeatures, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitPackagerFeatures message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitPackagerFeatures
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitPackagerFeatures;

                /**
                 * Decodes a DotReplitPackagerFeatures message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitPackagerFeatures
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitPackagerFeatures;

                /**
                 * Verifies a DotReplitPackagerFeatures message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitPackagerFeatures message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitPackagerFeatures
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitPackagerFeatures;

                /**
                 * Creates a plain object from a DotReplitPackagerFeatures message. Also converts values to other types if specified.
                 * @param message DotReplitPackagerFeatures
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitPackagerFeatures, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitPackagerFeatures to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DotReplitUnitTest. */
            interface IDotReplitUnitTest {

                /** DotReplitUnitTest language */
                language?: (string|null);
            }

            /** Represents a DotReplitUnitTest. */
            class DotReplitUnitTest {

                /**
                 * Constructs a new DotReplitUnitTest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDotReplitUnitTest);

                /** DotReplitUnitTest language. */
                public language: string;

                /**
                 * Creates a new DotReplitUnitTest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DotReplitUnitTest instance
                 */
                public static create(properties?: replit.goval.api.IDotReplitUnitTest): replit.goval.api.DotReplitUnitTest;

                /**
                 * Encodes the specified DotReplitUnitTest message. Does not implicitly {@link replit.goval.api.DotReplitUnitTest.verify|verify} messages.
                 * @param message DotReplitUnitTest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DotReplitUnitTest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DotReplitUnitTest message, length delimited. Does not implicitly {@link replit.goval.api.DotReplitUnitTest.verify|verify} messages.
                 * @param message DotReplitUnitTest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DotReplitUnitTest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DotReplitUnitTest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DotReplitUnitTest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DotReplitUnitTest;

                /**
                 * Decodes a DotReplitUnitTest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DotReplitUnitTest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DotReplitUnitTest;

                /**
                 * Verifies a DotReplitUnitTest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DotReplitUnitTest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DotReplitUnitTest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DotReplitUnitTest;

                /**
                 * Creates a plain object from a DotReplitUnitTest message. Also converts values to other types if specified.
                 * @param message DotReplitUnitTest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DotReplitUnitTest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DotReplitUnitTest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DebuggerConfig. */
            interface IDebuggerConfig {

                /** DebuggerConfig support */
                support?: (boolean|null);

                /** DebuggerConfig compile */
                compile?: (replit.goval.api.CompileConfig|replit.goval.api.ICompileConfig|null);

                /** DebuggerConfig interactive */
                interactive?: (replit.goval.api.DapConfig|replit.goval.api.IDapConfig|null);

                /** DebuggerConfig timeTravel */
                timeTravel?: (replit.goval.api.TimeTravelConfig|replit.goval.api.ITimeTravelConfig|null);

                /** DebuggerConfig dapTransport */
                dapTransport?: (string|null);

                /** DebuggerConfig dapConnectTimeout */
                dapConnectTimeout?: (number|null);

                /** DebuggerConfig dapIntegratedAdapter */
                dapIntegratedAdapter?: (replit.goval.api.DapIntegratedAdapterConfig|replit.goval.api.IDapIntegratedAdapterConfig|null);

                /** DebuggerConfig dapStartCommand */
                dapStartCommand?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DebuggerConfig dapInitializeMessage */
                dapInitializeMessage?: (google.protobuf.Struct|google.protobuf.IStruct|null);

                /** DebuggerConfig dapLaunchMessage */
                dapLaunchMessage?: (google.protobuf.Struct|google.protobuf.IStruct|null);
            }

            /** Represents a DebuggerConfig. */
            class DebuggerConfig {

                /**
                 * Constructs a new DebuggerConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDebuggerConfig);

                /** DebuggerConfig support. */
                public support: boolean;

                /** DebuggerConfig compile. */
                public compile?: (replit.goval.api.CompileConfig|null);

                /** DebuggerConfig interactive. */
                public interactive?: (replit.goval.api.DapConfig|null);

                /** DebuggerConfig timeTravel. */
                public timeTravel?: (replit.goval.api.TimeTravelConfig|null);

                /** DebuggerConfig dapTransport. */
                public dapTransport: string;

                /** DebuggerConfig dapConnectTimeout. */
                public dapConnectTimeout: number;

                /** DebuggerConfig dapIntegratedAdapter. */
                public dapIntegratedAdapter?: (replit.goval.api.DapIntegratedAdapterConfig|null);

                /** DebuggerConfig dapStartCommand. */
                public dapStartCommand?: (replit.goval.api.Exec|null);

                /** DebuggerConfig dapInitializeMessage. */
                public dapInitializeMessage?: (google.protobuf.Struct|null);

                /** DebuggerConfig dapLaunchMessage. */
                public dapLaunchMessage?: (google.protobuf.Struct|null);

                /**
                 * Creates a new DebuggerConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DebuggerConfig instance
                 */
                public static create(properties?: replit.goval.api.IDebuggerConfig): replit.goval.api.DebuggerConfig;

                /**
                 * Encodes the specified DebuggerConfig message. Does not implicitly {@link replit.goval.api.DebuggerConfig.verify|verify} messages.
                 * @param message DebuggerConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DebuggerConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DebuggerConfig message, length delimited. Does not implicitly {@link replit.goval.api.DebuggerConfig.verify|verify} messages.
                 * @param message DebuggerConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DebuggerConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DebuggerConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DebuggerConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DebuggerConfig;

                /**
                 * Decodes a DebuggerConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DebuggerConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DebuggerConfig;

                /**
                 * Verifies a DebuggerConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DebuggerConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DebuggerConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DebuggerConfig;

                /**
                 * Creates a plain object from a DebuggerConfig message. Also converts values to other types if specified.
                 * @param message DebuggerConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DebuggerConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DebuggerConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CompileConfig. */
            interface ICompileConfig {

                /** CompileConfig command */
                command?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** CompileConfig onlyMain */
                onlyMain?: (boolean|null);

                /** CompileConfig noFileArgs */
                noFileArgs?: (boolean|null);
            }

            /** Represents a CompileConfig. */
            class CompileConfig {

                /**
                 * Constructs a new CompileConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ICompileConfig);

                /** CompileConfig command. */
                public command?: (replit.goval.api.Exec|null);

                /** CompileConfig onlyMain. */
                public onlyMain: boolean;

                /** CompileConfig noFileArgs. */
                public noFileArgs: boolean;

                /**
                 * Creates a new CompileConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CompileConfig instance
                 */
                public static create(properties?: replit.goval.api.ICompileConfig): replit.goval.api.CompileConfig;

                /**
                 * Encodes the specified CompileConfig message. Does not implicitly {@link replit.goval.api.CompileConfig.verify|verify} messages.
                 * @param message CompileConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.CompileConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CompileConfig message, length delimited. Does not implicitly {@link replit.goval.api.CompileConfig.verify|verify} messages.
                 * @param message CompileConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.CompileConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CompileConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CompileConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.CompileConfig;

                /**
                 * Decodes a CompileConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CompileConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.CompileConfig;

                /**
                 * Verifies a CompileConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CompileConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CompileConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.CompileConfig;

                /**
                 * Creates a plain object from a CompileConfig message. Also converts values to other types if specified.
                 * @param message CompileConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.CompileConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CompileConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DapConfig. */
            interface IDapConfig {

                /** DapConfig transport */
                transport?: (string|null);

                /** DapConfig connectTimeout */
                connectTimeout?: (number|null);

                /** DapConfig integratedAdapter */
                integratedAdapter?: (replit.goval.api.DapIntegratedAdapterConfig|replit.goval.api.IDapIntegratedAdapterConfig|null);

                /** DapConfig startCommand */
                startCommand?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** DapConfig initializeMessage */
                initializeMessage?: (google.protobuf.Struct|google.protobuf.IStruct|null);

                /** DapConfig launchMessage */
                launchMessage?: (google.protobuf.Struct|google.protobuf.IStruct|null);
            }

            /** Represents a DapConfig. */
            class DapConfig {

                /**
                 * Constructs a new DapConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDapConfig);

                /** DapConfig transport. */
                public transport: string;

                /** DapConfig connectTimeout. */
                public connectTimeout: number;

                /** DapConfig integratedAdapter. */
                public integratedAdapter?: (replit.goval.api.DapIntegratedAdapterConfig|null);

                /** DapConfig startCommand. */
                public startCommand?: (replit.goval.api.Exec|null);

                /** DapConfig initializeMessage. */
                public initializeMessage?: (google.protobuf.Struct|null);

                /** DapConfig launchMessage. */
                public launchMessage?: (google.protobuf.Struct|null);

                /**
                 * Creates a new DapConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DapConfig instance
                 */
                public static create(properties?: replit.goval.api.IDapConfig): replit.goval.api.DapConfig;

                /**
                 * Encodes the specified DapConfig message. Does not implicitly {@link replit.goval.api.DapConfig.verify|verify} messages.
                 * @param message DapConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DapConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DapConfig message, length delimited. Does not implicitly {@link replit.goval.api.DapConfig.verify|verify} messages.
                 * @param message DapConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DapConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DapConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DapConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DapConfig;

                /**
                 * Decodes a DapConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DapConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DapConfig;

                /**
                 * Verifies a DapConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DapConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DapConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DapConfig;

                /**
                 * Creates a plain object from a DapConfig message. Also converts values to other types if specified.
                 * @param message DapConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DapConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DapConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TimeTravelConfig. */
            interface ITimeTravelConfig {

                /** TimeTravelConfig record */
                record?: (replit.goval.api.Exec|replit.goval.api.IExec|null);

                /** TimeTravelConfig debug */
                debug?: (replit.goval.api.DapConfig|replit.goval.api.IDapConfig|null);
            }

            /** Represents a TimeTravelConfig. */
            class TimeTravelConfig {

                /**
                 * Constructs a new TimeTravelConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITimeTravelConfig);

                /** TimeTravelConfig record. */
                public record?: (replit.goval.api.Exec|null);

                /** TimeTravelConfig debug. */
                public debug?: (replit.goval.api.DapConfig|null);

                /**
                 * Creates a new TimeTravelConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeTravelConfig instance
                 */
                public static create(properties?: replit.goval.api.ITimeTravelConfig): replit.goval.api.TimeTravelConfig;

                /**
                 * Encodes the specified TimeTravelConfig message. Does not implicitly {@link replit.goval.api.TimeTravelConfig.verify|verify} messages.
                 * @param message TimeTravelConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TimeTravelConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeTravelConfig message, length delimited. Does not implicitly {@link replit.goval.api.TimeTravelConfig.verify|verify} messages.
                 * @param message TimeTravelConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TimeTravelConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeTravelConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeTravelConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TimeTravelConfig;

                /**
                 * Decodes a TimeTravelConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeTravelConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TimeTravelConfig;

                /**
                 * Verifies a TimeTravelConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeTravelConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeTravelConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TimeTravelConfig;

                /**
                 * Creates a plain object from a TimeTravelConfig message. Also converts values to other types if specified.
                 * @param message TimeTravelConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TimeTravelConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeTravelConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DapIntegratedAdapterConfig. */
            interface IDapIntegratedAdapterConfig {

                /** DapIntegratedAdapterConfig dapTcpAddress */
                dapTcpAddress?: (string|null);
            }

            /** Represents a DapIntegratedAdapterConfig. */
            class DapIntegratedAdapterConfig {

                /**
                 * Constructs a new DapIntegratedAdapterConfig.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IDapIntegratedAdapterConfig);

                /** DapIntegratedAdapterConfig dapTcpAddress. */
                public dapTcpAddress: string;

                /**
                 * Creates a new DapIntegratedAdapterConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DapIntegratedAdapterConfig instance
                 */
                public static create(properties?: replit.goval.api.IDapIntegratedAdapterConfig): replit.goval.api.DapIntegratedAdapterConfig;

                /**
                 * Encodes the specified DapIntegratedAdapterConfig message. Does not implicitly {@link replit.goval.api.DapIntegratedAdapterConfig.verify|verify} messages.
                 * @param message DapIntegratedAdapterConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.DapIntegratedAdapterConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DapIntegratedAdapterConfig message, length delimited. Does not implicitly {@link replit.goval.api.DapIntegratedAdapterConfig.verify|verify} messages.
                 * @param message DapIntegratedAdapterConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.DapIntegratedAdapterConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DapIntegratedAdapterConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DapIntegratedAdapterConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.DapIntegratedAdapterConfig;

                /**
                 * Decodes a DapIntegratedAdapterConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DapIntegratedAdapterConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.DapIntegratedAdapterConfig;

                /**
                 * Verifies a DapIntegratedAdapterConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DapIntegratedAdapterConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DapIntegratedAdapterConfig
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.DapIntegratedAdapterConfig;

                /**
                 * Creates a plain object from a DapIntegratedAdapterConfig message. Also converts values to other types if specified.
                 * @param message DapIntegratedAdapterConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.DapIntegratedAdapterConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DapIntegratedAdapterConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProxyGoingAway. */
            interface IProxyGoingAway {
            }

            /** Represents a ProxyGoingAway. */
            class ProxyGoingAway {

                /**
                 * Constructs a new ProxyGoingAway.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IProxyGoingAway);

                /**
                 * Creates a new ProxyGoingAway instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ProxyGoingAway instance
                 */
                public static create(properties?: replit.goval.api.IProxyGoingAway): replit.goval.api.ProxyGoingAway;

                /**
                 * Encodes the specified ProxyGoingAway message. Does not implicitly {@link replit.goval.api.ProxyGoingAway.verify|verify} messages.
                 * @param message ProxyGoingAway message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ProxyGoingAway, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProxyGoingAway message, length delimited. Does not implicitly {@link replit.goval.api.ProxyGoingAway.verify|verify} messages.
                 * @param message ProxyGoingAway message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ProxyGoingAway, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProxyGoingAway message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProxyGoingAway
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ProxyGoingAway;

                /**
                 * Decodes a ProxyGoingAway message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProxyGoingAway
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ProxyGoingAway;

                /**
                 * Verifies a ProxyGoingAway message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProxyGoingAway message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProxyGoingAway
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ProxyGoingAway;

                /**
                 * Creates a plain object from a ProxyGoingAway message. Also converts values to other types if specified.
                 * @param message ProxyGoingAway
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ProxyGoingAway, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProxyGoingAway to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FirewallDenied. */
            interface IFirewallDenied {
            }

            /** Represents a FirewallDenied. */
            class FirewallDenied {

                /**
                 * Constructs a new FirewallDenied.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IFirewallDenied);

                /**
                 * Creates a new FirewallDenied instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FirewallDenied instance
                 */
                public static create(properties?: replit.goval.api.IFirewallDenied): replit.goval.api.FirewallDenied;

                /**
                 * Encodes the specified FirewallDenied message. Does not implicitly {@link replit.goval.api.FirewallDenied.verify|verify} messages.
                 * @param message FirewallDenied message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.FirewallDenied, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FirewallDenied message, length delimited. Does not implicitly {@link replit.goval.api.FirewallDenied.verify|verify} messages.
                 * @param message FirewallDenied message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.FirewallDenied, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FirewallDenied message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FirewallDenied
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.FirewallDenied;

                /**
                 * Decodes a FirewallDenied message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FirewallDenied
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.FirewallDenied;

                /**
                 * Verifies a FirewallDenied message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FirewallDenied message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FirewallDenied
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.FirewallDenied;

                /**
                 * Creates a plain object from a FirewallDenied message. Also converts values to other types if specified.
                 * @param message FirewallDenied
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.FirewallDenied, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FirewallDenied to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplLogMessage. */
            interface IReplLogMessage {

                /** ReplLogMessage timestamp */
                timestamp?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** ReplLogMessage replId */
                replId?: (string|null);

                /** ReplLogMessage logLine */
                logLine?: (string|null);

                /** ReplLogMessage userName */
                userName?: (string|null);
            }

            /** Represents a ReplLogMessage. */
            class ReplLogMessage {

                /**
                 * Constructs a new ReplLogMessage.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplLogMessage);

                /** ReplLogMessage timestamp. */
                public timestamp?: (google.protobuf.Timestamp|null);

                /** ReplLogMessage replId. */
                public replId: string;

                /** ReplLogMessage logLine. */
                public logLine: string;

                /** ReplLogMessage userName. */
                public userName: string;

                /**
                 * Creates a new ReplLogMessage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplLogMessage instance
                 */
                public static create(properties?: replit.goval.api.IReplLogMessage): replit.goval.api.ReplLogMessage;

                /**
                 * Encodes the specified ReplLogMessage message. Does not implicitly {@link replit.goval.api.ReplLogMessage.verify|verify} messages.
                 * @param message ReplLogMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplLogMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplLogMessage message, length delimited. Does not implicitly {@link replit.goval.api.ReplLogMessage.verify|verify} messages.
                 * @param message ReplLogMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplLogMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplLogMessage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplLogMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplLogMessage;

                /**
                 * Decodes a ReplLogMessage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplLogMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplLogMessage;

                /**
                 * Verifies a ReplLogMessage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplLogMessage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplLogMessage
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplLogMessage;

                /**
                 * Creates a plain object from a ReplLogMessage message. Also converts values to other types if specified.
                 * @param message ReplLogMessage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplLogMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplLogMessage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a UserEvent. */
            interface IUserEvent {

                /** UserEvent eventName */
                eventName?: (string|null);

                /** UserEvent eventData */
                eventData?: (google.protobuf.Struct|google.protobuf.IStruct|null);

                /** UserEvent version */
                version?: (number|null);
            }

            /** Represents a UserEvent. */
            class UserEvent {

                /**
                 * Constructs a new UserEvent.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IUserEvent);

                /** UserEvent eventName. */
                public eventName: string;

                /** UserEvent eventData. */
                public eventData?: (google.protobuf.Struct|null);

                /** UserEvent version. */
                public version: number;

                /**
                 * Creates a new UserEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserEvent instance
                 */
                public static create(properties?: replit.goval.api.IUserEvent): replit.goval.api.UserEvent;

                /**
                 * Encodes the specified UserEvent message. Does not implicitly {@link replit.goval.api.UserEvent.verify|verify} messages.
                 * @param message UserEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.UserEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UserEvent message, length delimited. Does not implicitly {@link replit.goval.api.UserEvent.verify|verify} messages.
                 * @param message UserEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.UserEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a UserEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.UserEvent;

                /**
                 * Decodes a UserEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.UserEvent;

                /**
                 * Verifies a UserEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserEvent
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.UserEvent;

                /**
                 * Creates a plain object from a UserEvent message. Also converts values to other types if specified.
                 * @param message UserEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.UserEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplToken. */
            interface IReplToken {

                /** ReplToken iat */
                iat?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** ReplToken exp */
                exp?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** ReplToken salt */
                salt?: (string|null);

                /** ReplToken cluster */
                cluster?: (string|null);

                /** ReplToken persistence */
                persistence?: (replit.goval.api.repl.Persistence|null);

                /** ReplToken repl */
                repl?: (replit.goval.api.repl.Repl|replit.goval.api.repl.IRepl|null);

                /** ReplToken id */
                id?: (replit.goval.api.ReplToken.ReplID|replit.goval.api.ReplToken.IReplID|null);

                /** ReplToken classroom */
                classroom?: (replit.goval.api.ReplToken.ClassroomMetadata|replit.goval.api.ReplToken.IClassroomMetadata|null);

                /** ReplToken resourceLimits */
                resourceLimits?: (replit.goval.api.repl.ResourceLimits|replit.goval.api.repl.IResourceLimits|null);

                /** ReplToken interactiveResourceLimits */
                interactiveResourceLimits?: (replit.goval.api.repl.ResourceLimits|replit.goval.api.repl.IResourceLimits|null);

                /** ReplToken format */
                format?: (replit.goval.api.ReplToken.WireFormat|null);

                /** ReplToken presenced */
                presenced?: (replit.goval.api.ReplToken.Presenced|replit.goval.api.ReplToken.IPresenced|null);

                /** ReplToken flags */
                flags?: (string[]|null);

                /** ReplToken permissions */
                permissions?: (replit.goval.api.repl.Permissions|replit.goval.api.repl.IPermissions|null);

                /** ReplToken features */
                features?: ((replit.goval.api.features.Feature|replit.goval.api.features.IFeature)[]|null);
            }

            /** Represents a ReplToken. */
            class ReplToken {

                /**
                 * Constructs a new ReplToken.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplToken);

                /** ReplToken iat. */
                public iat?: (google.protobuf.Timestamp|null);

                /** ReplToken exp. */
                public exp?: (google.protobuf.Timestamp|null);

                /** ReplToken salt. */
                public salt: string;

                /** ReplToken cluster. */
                public cluster: string;

                /** ReplToken persistence. */
                public persistence: replit.goval.api.repl.Persistence;

                /** ReplToken repl. */
                public repl?: (replit.goval.api.repl.Repl|null);

                /** ReplToken id. */
                public id?: (replit.goval.api.ReplToken.ReplID|null);

                /** ReplToken classroom. */
                public classroom?: (replit.goval.api.ReplToken.ClassroomMetadata|null);

                /** ReplToken resourceLimits. */
                public resourceLimits?: (replit.goval.api.repl.ResourceLimits|null);

                /** ReplToken interactiveResourceLimits. */
                public interactiveResourceLimits?: (replit.goval.api.repl.ResourceLimits|null);

                /** ReplToken format. */
                public format: replit.goval.api.ReplToken.WireFormat;

                /** ReplToken presenced. */
                public presenced?: (replit.goval.api.ReplToken.Presenced|null);

                /** ReplToken flags. */
                public flags: string[];

                /** ReplToken permissions. */
                public permissions?: (replit.goval.api.repl.Permissions|null);

                /** ReplToken features. */
                public features: replit.goval.api.features.Feature[];

                /** ReplToken metadata. */
                public metadata?: ("repl"|"id"|"classroom");

                /**
                 * Creates a new ReplToken instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplToken instance
                 */
                public static create(properties?: replit.goval.api.IReplToken): replit.goval.api.ReplToken;

                /**
                 * Encodes the specified ReplToken message. Does not implicitly {@link replit.goval.api.ReplToken.verify|verify} messages.
                 * @param message ReplToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplToken message, length delimited. Does not implicitly {@link replit.goval.api.ReplToken.verify|verify} messages.
                 * @param message ReplToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplToken;

                /**
                 * Decodes a ReplToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplToken;

                /**
                 * Verifies a ReplToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplToken
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplToken;

                /**
                 * Creates a plain object from a ReplToken message. Also converts values to other types if specified.
                 * @param message ReplToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace ReplToken {

                /** Properties of a ClassroomMetadata. */
                interface IClassroomMetadata {

                    /** ClassroomMetadata id */
                    id?: (string|null);

                    /** ClassroomMetadata language */
                    language?: (string|null);
                }

                /** Represents a ClassroomMetadata. */
                class ClassroomMetadata {

                    /**
                     * Constructs a new ClassroomMetadata.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.ReplToken.IClassroomMetadata);

                    /** ClassroomMetadata id. */
                    public id: string;

                    /** ClassroomMetadata language. */
                    public language: string;

                    /**
                     * Creates a new ClassroomMetadata instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns ClassroomMetadata instance
                     */
                    public static create(properties?: replit.goval.api.ReplToken.IClassroomMetadata): replit.goval.api.ReplToken.ClassroomMetadata;

                    /**
                     * Encodes the specified ClassroomMetadata message. Does not implicitly {@link replit.goval.api.ReplToken.ClassroomMetadata.verify|verify} messages.
                     * @param message ClassroomMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.ReplToken.ClassroomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClassroomMetadata message, length delimited. Does not implicitly {@link replit.goval.api.ReplToken.ClassroomMetadata.verify|verify} messages.
                     * @param message ClassroomMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.ReplToken.ClassroomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClassroomMetadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClassroomMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplToken.ClassroomMetadata;

                    /**
                     * Decodes a ClassroomMetadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClassroomMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplToken.ClassroomMetadata;

                    /**
                     * Verifies a ClassroomMetadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClassroomMetadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClassroomMetadata
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplToken.ClassroomMetadata;

                    /**
                     * Creates a plain object from a ClassroomMetadata message. Also converts values to other types if specified.
                     * @param message ClassroomMetadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.ReplToken.ClassroomMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClassroomMetadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ReplID. */
                interface IReplID {

                    /** ReplID id */
                    id?: (string|null);

                    /** ReplID sourceRepl */
                    sourceRepl?: (string|null);
                }

                /** Represents a ReplID. */
                class ReplID {

                    /**
                     * Constructs a new ReplID.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.ReplToken.IReplID);

                    /** ReplID id. */
                    public id: string;

                    /** ReplID sourceRepl. */
                    public sourceRepl: string;

                    /**
                     * Creates a new ReplID instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns ReplID instance
                     */
                    public static create(properties?: replit.goval.api.ReplToken.IReplID): replit.goval.api.ReplToken.ReplID;

                    /**
                     * Encodes the specified ReplID message. Does not implicitly {@link replit.goval.api.ReplToken.ReplID.verify|verify} messages.
                     * @param message ReplID message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.ReplToken.ReplID, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ReplID message, length delimited. Does not implicitly {@link replit.goval.api.ReplToken.ReplID.verify|verify} messages.
                     * @param message ReplID message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.ReplToken.ReplID, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ReplID message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ReplID
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplToken.ReplID;

                    /**
                     * Decodes a ReplID message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ReplID
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplToken.ReplID;

                    /**
                     * Verifies a ReplID message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ReplID message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ReplID
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplToken.ReplID;

                    /**
                     * Creates a plain object from a ReplID message. Also converts values to other types if specified.
                     * @param message ReplID
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.ReplToken.ReplID, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ReplID to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** WireFormat enum. */
                enum WireFormat {
                    PROTOBUF = 0,
                    JSON = 1
                }

                /** Properties of a Presenced. */
                interface IPresenced {

                    /** Presenced bearerID */
                    bearerID?: (number|null);

                    /** Presenced bearerName */
                    bearerName?: (string|null);
                }

                /** Represents a Presenced. */
                class Presenced {

                    /**
                     * Constructs a new Presenced.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.ReplToken.IPresenced);

                    /** Presenced bearerID. */
                    public bearerID: number;

                    /** Presenced bearerName. */
                    public bearerName: string;

                    /**
                     * Creates a new Presenced instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Presenced instance
                     */
                    public static create(properties?: replit.goval.api.ReplToken.IPresenced): replit.goval.api.ReplToken.Presenced;

                    /**
                     * Encodes the specified Presenced message. Does not implicitly {@link replit.goval.api.ReplToken.Presenced.verify|verify} messages.
                     * @param message Presenced message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.ReplToken.Presenced, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Presenced message, length delimited. Does not implicitly {@link replit.goval.api.ReplToken.Presenced.verify|verify} messages.
                     * @param message Presenced message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.ReplToken.Presenced, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Presenced message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Presenced
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplToken.Presenced;

                    /**
                     * Decodes a Presenced message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Presenced
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplToken.Presenced;

                    /**
                     * Verifies a Presenced message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Presenced message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Presenced
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplToken.Presenced;

                    /**
                     * Creates a plain object from a Presenced message. Also converts values to other types if specified.
                     * @param message Presenced
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.ReplToken.Presenced, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Presenced to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Properties of a TLSCertificate. */
            interface ITLSCertificate {

                /** TLSCertificate domain */
                domain?: (string|null);

                /** TLSCertificate cert */
                cert?: (Uint8Array|null);
            }

            /** Represents a TLSCertificate. */
            class TLSCertificate {

                /**
                 * Constructs a new TLSCertificate.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ITLSCertificate);

                /** TLSCertificate domain. */
                public domain: string;

                /** TLSCertificate cert. */
                public cert: Uint8Array;

                /**
                 * Creates a new TLSCertificate instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TLSCertificate instance
                 */
                public static create(properties?: replit.goval.api.ITLSCertificate): replit.goval.api.TLSCertificate;

                /**
                 * Encodes the specified TLSCertificate message. Does not implicitly {@link replit.goval.api.TLSCertificate.verify|verify} messages.
                 * @param message TLSCertificate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.TLSCertificate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TLSCertificate message, length delimited. Does not implicitly {@link replit.goval.api.TLSCertificate.verify|verify} messages.
                 * @param message TLSCertificate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.TLSCertificate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TLSCertificate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TLSCertificate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.TLSCertificate;

                /**
                 * Decodes a TLSCertificate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TLSCertificate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.TLSCertificate;

                /**
                 * Verifies a TLSCertificate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TLSCertificate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TLSCertificate
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.TLSCertificate;

                /**
                 * Creates a plain object from a TLSCertificate message. Also converts values to other types if specified.
                 * @param message TLSCertificate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.TLSCertificate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TLSCertificate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReplTransfer. */
            interface IReplTransfer {

                /** ReplTransfer repl */
                repl?: (replit.goval.api.repl.Repl|replit.goval.api.repl.IRepl|null);

                /** ReplTransfer replLimits */
                replLimits?: (replit.goval.api.repl.ResourceLimits|replit.goval.api.repl.IResourceLimits|null);

                /** ReplTransfer userLimits */
                userLimits?: (replit.goval.api.repl.ResourceLimits|replit.goval.api.repl.IResourceLimits|null);

                /** ReplTransfer customDomains */
                customDomains?: (string[]|null);

                /** ReplTransfer certificates */
                certificates?: ((replit.goval.api.TLSCertificate|replit.goval.api.ITLSCertificate)[]|null);

                /** ReplTransfer flags */
                flags?: (string[]|null);
            }

            /** Represents a ReplTransfer. */
            class ReplTransfer {

                /**
                 * Constructs a new ReplTransfer.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IReplTransfer);

                /** ReplTransfer repl. */
                public repl?: (replit.goval.api.repl.Repl|null);

                /** ReplTransfer replLimits. */
                public replLimits?: (replit.goval.api.repl.ResourceLimits|null);

                /** ReplTransfer userLimits. */
                public userLimits?: (replit.goval.api.repl.ResourceLimits|null);

                /** ReplTransfer customDomains. */
                public customDomains: string[];

                /** ReplTransfer certificates. */
                public certificates: replit.goval.api.TLSCertificate[];

                /** ReplTransfer flags. */
                public flags: string[];

                /**
                 * Creates a new ReplTransfer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReplTransfer instance
                 */
                public static create(properties?: replit.goval.api.IReplTransfer): replit.goval.api.ReplTransfer;

                /**
                 * Encodes the specified ReplTransfer message. Does not implicitly {@link replit.goval.api.ReplTransfer.verify|verify} messages.
                 * @param message ReplTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ReplTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplTransfer message, length delimited. Does not implicitly {@link replit.goval.api.ReplTransfer.verify|verify} messages.
                 * @param message ReplTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ReplTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplTransfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ReplTransfer;

                /**
                 * Decodes a ReplTransfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ReplTransfer;

                /**
                 * Verifies a ReplTransfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplTransfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplTransfer
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ReplTransfer;

                /**
                 * Creates a plain object from a ReplTransfer message. Also converts values to other types if specified.
                 * @param message ReplTransfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ReplTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplTransfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an AllowReplRequest. */
            interface IAllowReplRequest {

                /** AllowReplRequest replTransfer */
                replTransfer?: (replit.goval.api.ReplTransfer|replit.goval.api.IReplTransfer|null);
            }

            /** Represents an AllowReplRequest. */
            class AllowReplRequest {

                /**
                 * Constructs a new AllowReplRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IAllowReplRequest);

                /** AllowReplRequest replTransfer. */
                public replTransfer?: (replit.goval.api.ReplTransfer|null);

                /**
                 * Creates a new AllowReplRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AllowReplRequest instance
                 */
                public static create(properties?: replit.goval.api.IAllowReplRequest): replit.goval.api.AllowReplRequest;

                /**
                 * Encodes the specified AllowReplRequest message. Does not implicitly {@link replit.goval.api.AllowReplRequest.verify|verify} messages.
                 * @param message AllowReplRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.AllowReplRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AllowReplRequest message, length delimited. Does not implicitly {@link replit.goval.api.AllowReplRequest.verify|verify} messages.
                 * @param message AllowReplRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.AllowReplRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AllowReplRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AllowReplRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.AllowReplRequest;

                /**
                 * Decodes an AllowReplRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AllowReplRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.AllowReplRequest;

                /**
                 * Verifies an AllowReplRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AllowReplRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AllowReplRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.AllowReplRequest;

                /**
                 * Creates a plain object from an AllowReplRequest message. Also converts values to other types if specified.
                 * @param message AllowReplRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.AllowReplRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AllowReplRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ClusterMetadata. */
            interface IClusterMetadata {

                /** ClusterMetadata id */
                id?: (string|null);

                /** ClusterMetadata conmanURL */
                conmanURL?: (string|null);

                /** ClusterMetadata gurl */
                gurl?: (string|null);

                /** ClusterMetadata proxy */
                proxy?: (string|null);
            }

            /** Represents a ClusterMetadata. */
            class ClusterMetadata {

                /**
                 * Constructs a new ClusterMetadata.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IClusterMetadata);

                /** ClusterMetadata id. */
                public id: string;

                /** ClusterMetadata conmanURL. */
                public conmanURL: string;

                /** ClusterMetadata gurl. */
                public gurl: string;

                /** ClusterMetadata proxy. */
                public proxy: string;

                /**
                 * Creates a new ClusterMetadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ClusterMetadata instance
                 */
                public static create(properties?: replit.goval.api.IClusterMetadata): replit.goval.api.ClusterMetadata;

                /**
                 * Encodes the specified ClusterMetadata message. Does not implicitly {@link replit.goval.api.ClusterMetadata.verify|verify} messages.
                 * @param message ClusterMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ClusterMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ClusterMetadata message, length delimited. Does not implicitly {@link replit.goval.api.ClusterMetadata.verify|verify} messages.
                 * @param message ClusterMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ClusterMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ClusterMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ClusterMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ClusterMetadata;

                /**
                 * Decodes a ClusterMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ClusterMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ClusterMetadata;

                /**
                 * Verifies a ClusterMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ClusterMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ClusterMetadata
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ClusterMetadata;

                /**
                 * Creates a plain object from a ClusterMetadata message. Also converts values to other types if specified.
                 * @param message ClusterMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ClusterMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ClusterMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EvictReplRequest. */
            interface IEvictReplRequest {

                /** EvictReplRequest clusterMetadata */
                clusterMetadata?: (replit.goval.api.ClusterMetadata|replit.goval.api.IClusterMetadata|null);

                /** EvictReplRequest token */
                token?: (string|null);

                /** EvictReplRequest user */
                user?: (string|null);

                /** EvictReplRequest slug */
                slug?: (string|null);
            }

            /** Represents an EvictReplRequest. */
            class EvictReplRequest {

                /**
                 * Constructs a new EvictReplRequest.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IEvictReplRequest);

                /** EvictReplRequest clusterMetadata. */
                public clusterMetadata?: (replit.goval.api.ClusterMetadata|null);

                /** EvictReplRequest token. */
                public token: string;

                /** EvictReplRequest user. */
                public user: string;

                /** EvictReplRequest slug. */
                public slug: string;

                /**
                 * Creates a new EvictReplRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EvictReplRequest instance
                 */
                public static create(properties?: replit.goval.api.IEvictReplRequest): replit.goval.api.EvictReplRequest;

                /**
                 * Encodes the specified EvictReplRequest message. Does not implicitly {@link replit.goval.api.EvictReplRequest.verify|verify} messages.
                 * @param message EvictReplRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.EvictReplRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EvictReplRequest message, length delimited. Does not implicitly {@link replit.goval.api.EvictReplRequest.verify|verify} messages.
                 * @param message EvictReplRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.EvictReplRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EvictReplRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EvictReplRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.EvictReplRequest;

                /**
                 * Decodes an EvictReplRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EvictReplRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.EvictReplRequest;

                /**
                 * Verifies an EvictReplRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EvictReplRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EvictReplRequest
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.EvictReplRequest;

                /**
                 * Creates a plain object from an EvictReplRequest message. Also converts values to other types if specified.
                 * @param message EvictReplRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.EvictReplRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EvictReplRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EvictReplResponse. */
            interface IEvictReplResponse {

                /** EvictReplResponse replTransfer */
                replTransfer?: (replit.goval.api.ReplTransfer|replit.goval.api.IReplTransfer|null);
            }

            /** Represents an EvictReplResponse. */
            class EvictReplResponse {

                /**
                 * Constructs a new EvictReplResponse.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IEvictReplResponse);

                /** EvictReplResponse replTransfer. */
                public replTransfer?: (replit.goval.api.ReplTransfer|null);

                /**
                 * Creates a new EvictReplResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EvictReplResponse instance
                 */
                public static create(properties?: replit.goval.api.IEvictReplResponse): replit.goval.api.EvictReplResponse;

                /**
                 * Encodes the specified EvictReplResponse message. Does not implicitly {@link replit.goval.api.EvictReplResponse.verify|verify} messages.
                 * @param message EvictReplResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.EvictReplResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EvictReplResponse message, length delimited. Does not implicitly {@link replit.goval.api.EvictReplResponse.verify|verify} messages.
                 * @param message EvictReplResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.EvictReplResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EvictReplResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EvictReplResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.EvictReplResponse;

                /**
                 * Decodes an EvictReplResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EvictReplResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.EvictReplResponse;

                /**
                 * Verifies an EvictReplResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EvictReplResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EvictReplResponse
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.EvictReplResponse;

                /**
                 * Creates a plain object from an EvictReplResponse message. Also converts values to other types if specified.
                 * @param message EvictReplResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.EvictReplResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EvictReplResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** TokenVersion enum. */
            enum TokenVersion {
                BARE_REPL_TOKEN = 0,
                TYPE_AWARE_TOKEN = 1
            }

            /** Properties of a GovalSigningAuthority. */
            interface IGovalSigningAuthority {

                /** GovalSigningAuthority keyId */
                keyId?: (string|null);

                /** GovalSigningAuthority signedCert */
                signedCert?: (string|null);

                /** GovalSigningAuthority version */
                version?: (replit.goval.api.TokenVersion|null);

                /** GovalSigningAuthority issuer */
                issuer?: (string|null);
            }

            /** Represents a GovalSigningAuthority. */
            class GovalSigningAuthority {

                /**
                 * Constructs a new GovalSigningAuthority.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGovalSigningAuthority);

                /** GovalSigningAuthority keyId. */
                public keyId?: (string|null);

                /** GovalSigningAuthority signedCert. */
                public signedCert?: (string|null);

                /** GovalSigningAuthority version. */
                public version: replit.goval.api.TokenVersion;

                /** GovalSigningAuthority issuer. */
                public issuer: string;

                /** GovalSigningAuthority cert. */
                public cert?: ("keyId"|"signedCert");

                /**
                 * Creates a new GovalSigningAuthority instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GovalSigningAuthority instance
                 */
                public static create(properties?: replit.goval.api.IGovalSigningAuthority): replit.goval.api.GovalSigningAuthority;

                /**
                 * Encodes the specified GovalSigningAuthority message. Does not implicitly {@link replit.goval.api.GovalSigningAuthority.verify|verify} messages.
                 * @param message GovalSigningAuthority message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.GovalSigningAuthority, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GovalSigningAuthority message, length delimited. Does not implicitly {@link replit.goval.api.GovalSigningAuthority.verify|verify} messages.
                 * @param message GovalSigningAuthority message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.GovalSigningAuthority, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GovalSigningAuthority message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GovalSigningAuthority
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.GovalSigningAuthority;

                /**
                 * Decodes a GovalSigningAuthority message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GovalSigningAuthority
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.GovalSigningAuthority;

                /**
                 * Verifies a GovalSigningAuthority message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GovalSigningAuthority message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GovalSigningAuthority
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.GovalSigningAuthority;

                /**
                 * Creates a plain object from a GovalSigningAuthority message. Also converts values to other types if specified.
                 * @param message GovalSigningAuthority
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.GovalSigningAuthority, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GovalSigningAuthority to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** FlagClaim enum. */
            enum FlagClaim {
                MINT_GOVAL_TOKEN = 0,
                SIGN_INTERMEDIATE_CERT = 1,
                IDENTITY = 5,
                GHOSTWRITER = 6,
                ANY_REPLID = 2,
                ANY_USER = 3,
                ANY_CLUSTER = 4
            }

            /** Properties of a CertificateClaim. */
            interface ICertificateClaim {

                /** CertificateClaim replid */
                replid?: (string|null);

                /** CertificateClaim user */
                user?: (string|null);

                /** CertificateClaim cluster */
                cluster?: (string|null);

                /** CertificateClaim flag */
                flag?: (replit.goval.api.FlagClaim|null);
            }

            /** Represents a CertificateClaim. */
            class CertificateClaim {

                /**
                 * Constructs a new CertificateClaim.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ICertificateClaim);

                /** CertificateClaim replid. */
                public replid?: (string|null);

                /** CertificateClaim user. */
                public user?: (string|null);

                /** CertificateClaim cluster. */
                public cluster?: (string|null);

                /** CertificateClaim flag. */
                public flag?: (replit.goval.api.FlagClaim|null);

                /** CertificateClaim claim. */
                public claim?: ("replid"|"user"|"cluster"|"flag");

                /**
                 * Creates a new CertificateClaim instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CertificateClaim instance
                 */
                public static create(properties?: replit.goval.api.ICertificateClaim): replit.goval.api.CertificateClaim;

                /**
                 * Encodes the specified CertificateClaim message. Does not implicitly {@link replit.goval.api.CertificateClaim.verify|verify} messages.
                 * @param message CertificateClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.CertificateClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CertificateClaim message, length delimited. Does not implicitly {@link replit.goval.api.CertificateClaim.verify|verify} messages.
                 * @param message CertificateClaim message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.CertificateClaim, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CertificateClaim message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CertificateClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.CertificateClaim;

                /**
                 * Decodes a CertificateClaim message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CertificateClaim
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.CertificateClaim;

                /**
                 * Verifies a CertificateClaim message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CertificateClaim message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CertificateClaim
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.CertificateClaim;

                /**
                 * Creates a plain object from a CertificateClaim message. Also converts values to other types if specified.
                 * @param message CertificateClaim
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.CertificateClaim, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CertificateClaim to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GovalCert. */
            interface IGovalCert {

                /** GovalCert iat */
                iat?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** GovalCert exp */
                exp?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** GovalCert claims */
                claims?: ((replit.goval.api.CertificateClaim|replit.goval.api.ICertificateClaim)[]|null);

                /** GovalCert publicKey */
                publicKey?: (string|null);
            }

            /** Represents a GovalCert. */
            class GovalCert {

                /**
                 * Constructs a new GovalCert.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGovalCert);

                /** GovalCert iat. */
                public iat?: (google.protobuf.Timestamp|null);

                /** GovalCert exp. */
                public exp?: (google.protobuf.Timestamp|null);

                /** GovalCert claims. */
                public claims: replit.goval.api.CertificateClaim[];

                /** GovalCert publicKey. */
                public publicKey: string;

                /**
                 * Creates a new GovalCert instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GovalCert instance
                 */
                public static create(properties?: replit.goval.api.IGovalCert): replit.goval.api.GovalCert;

                /**
                 * Encodes the specified GovalCert message. Does not implicitly {@link replit.goval.api.GovalCert.verify|verify} messages.
                 * @param message GovalCert message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.GovalCert, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GovalCert message, length delimited. Does not implicitly {@link replit.goval.api.GovalCert.verify|verify} messages.
                 * @param message GovalCert message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.GovalCert, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GovalCert message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GovalCert
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.GovalCert;

                /**
                 * Decodes a GovalCert message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GovalCert
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.GovalCert;

                /**
                 * Verifies a GovalCert message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GovalCert message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GovalCert
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.GovalCert;

                /**
                 * Creates a plain object from a GovalCert message. Also converts values to other types if specified.
                 * @param message GovalCert
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.GovalCert, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GovalCert to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GovalToken. */
            interface IGovalToken {

                /** GovalToken iat */
                iat?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** GovalToken exp */
                exp?: (google.protobuf.Timestamp|google.protobuf.ITimestamp|null);

                /** GovalToken replid */
                replid?: (string|null);

                /** GovalToken replToken */
                replToken?: (replit.goval.api.ReplToken|replit.goval.api.IReplToken|null);

                /** GovalToken replIdentity */
                replIdentity?: (replit.goval.api.GovalReplIdentity|replit.goval.api.IGovalReplIdentity|null);
            }

            /** Represents a GovalToken. */
            class GovalToken {

                /**
                 * Constructs a new GovalToken.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGovalToken);

                /** GovalToken iat. */
                public iat?: (google.protobuf.Timestamp|null);

                /** GovalToken exp. */
                public exp?: (google.protobuf.Timestamp|null);

                /** GovalToken replid. */
                public replid: string;

                /** GovalToken replToken. */
                public replToken?: (replit.goval.api.ReplToken|null);

                /** GovalToken replIdentity. */
                public replIdentity?: (replit.goval.api.GovalReplIdentity|null);

                /** GovalToken Token. */
                public Token?: ("replToken"|"replIdentity");

                /**
                 * Creates a new GovalToken instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GovalToken instance
                 */
                public static create(properties?: replit.goval.api.IGovalToken): replit.goval.api.GovalToken;

                /**
                 * Encodes the specified GovalToken message. Does not implicitly {@link replit.goval.api.GovalToken.verify|verify} messages.
                 * @param message GovalToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.GovalToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GovalToken message, length delimited. Does not implicitly {@link replit.goval.api.GovalToken.verify|verify} messages.
                 * @param message GovalToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.GovalToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GovalToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GovalToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.GovalToken;

                /**
                 * Decodes a GovalToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GovalToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.GovalToken;

                /**
                 * Verifies a GovalToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GovalToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GovalToken
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.GovalToken;

                /**
                 * Creates a plain object from a GovalToken message. Also converts values to other types if specified.
                 * @param message GovalToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.GovalToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GovalToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GovalReplIdentity. */
            interface IGovalReplIdentity {

                /** GovalReplIdentity replid */
                replid?: (string|null);

                /** GovalReplIdentity user */
                user?: (string|null);

                /** GovalReplIdentity slug */
                slug?: (string|null);

                /** GovalReplIdentity aud */
                aud?: (string|null);

                /** GovalReplIdentity ephemeral */
                ephemeral?: (boolean|null);

                /** GovalReplIdentity originReplid */
                originReplid?: (string|null);
            }

            /** Represents a GovalReplIdentity. */
            class GovalReplIdentity {

                /**
                 * Constructs a new GovalReplIdentity.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGovalReplIdentity);

                /** GovalReplIdentity replid. */
                public replid: string;

                /** GovalReplIdentity user. */
                public user: string;

                /** GovalReplIdentity slug. */
                public slug: string;

                /** GovalReplIdentity aud. */
                public aud: string;

                /** GovalReplIdentity ephemeral. */
                public ephemeral: boolean;

                /** GovalReplIdentity originReplid. */
                public originReplid: string;

                /**
                 * Creates a new GovalReplIdentity instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GovalReplIdentity instance
                 */
                public static create(properties?: replit.goval.api.IGovalReplIdentity): replit.goval.api.GovalReplIdentity;

                /**
                 * Encodes the specified GovalReplIdentity message. Does not implicitly {@link replit.goval.api.GovalReplIdentity.verify|verify} messages.
                 * @param message GovalReplIdentity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.GovalReplIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GovalReplIdentity message, length delimited. Does not implicitly {@link replit.goval.api.GovalReplIdentity.verify|verify} messages.
                 * @param message GovalReplIdentity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.GovalReplIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GovalReplIdentity message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GovalReplIdentity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.GovalReplIdentity;

                /**
                 * Decodes a GovalReplIdentity message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GovalReplIdentity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.GovalReplIdentity;

                /**
                 * Verifies a GovalReplIdentity message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GovalReplIdentity message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GovalReplIdentity
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.GovalReplIdentity;

                /**
                 * Creates a plain object from a GovalReplIdentity message. Also converts values to other types if specified.
                 * @param message GovalReplIdentity
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.GovalReplIdentity, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GovalReplIdentity to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LoreCommand. */
            interface ILoreCommand {

                /** LoreCommand clusterTransfer */
                clusterTransfer?: (replit.goval.api.ClusterTransfer|replit.goval.api.IClusterTransfer|null);

                /** LoreCommand softTakedown */
                softTakedown?: (replit.goval.api.SoftTakedown|replit.goval.api.ISoftTakedown|null);

                /** LoreCommand govalCommand */
                govalCommand?: (replit.goval.api.GovalCommand|replit.goval.api.IGovalCommand|null);

                /** LoreCommand multiGovalCommand */
                multiGovalCommand?: (replit.goval.api.MultiGovalCommand|replit.goval.api.IMultiGovalCommand|null);

                /** LoreCommand restore */
                restore?: (replit.goval.api.Restore|replit.goval.api.IRestore|null);
            }

            /** Represents a LoreCommand. */
            class LoreCommand {

                /**
                 * Constructs a new LoreCommand.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ILoreCommand);

                /** LoreCommand clusterTransfer. */
                public clusterTransfer?: (replit.goval.api.ClusterTransfer|null);

                /** LoreCommand softTakedown. */
                public softTakedown?: (replit.goval.api.SoftTakedown|null);

                /** LoreCommand govalCommand. */
                public govalCommand?: (replit.goval.api.GovalCommand|null);

                /** LoreCommand multiGovalCommand. */
                public multiGovalCommand?: (replit.goval.api.MultiGovalCommand|null);

                /** LoreCommand restore. */
                public restore?: (replit.goval.api.Restore|null);

                /** LoreCommand command. */
                public command?: ("clusterTransfer"|"softTakedown"|"govalCommand"|"multiGovalCommand"|"restore");

                /**
                 * Creates a new LoreCommand instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns LoreCommand instance
                 */
                public static create(properties?: replit.goval.api.ILoreCommand): replit.goval.api.LoreCommand;

                /**
                 * Encodes the specified LoreCommand message. Does not implicitly {@link replit.goval.api.LoreCommand.verify|verify} messages.
                 * @param message LoreCommand message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.LoreCommand, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LoreCommand message, length delimited. Does not implicitly {@link replit.goval.api.LoreCommand.verify|verify} messages.
                 * @param message LoreCommand message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.LoreCommand, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LoreCommand message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LoreCommand
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.LoreCommand;

                /**
                 * Decodes a LoreCommand message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LoreCommand
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.LoreCommand;

                /**
                 * Verifies a LoreCommand message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LoreCommand message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LoreCommand
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.LoreCommand;

                /**
                 * Creates a plain object from a LoreCommand message. Also converts values to other types if specified.
                 * @param message LoreCommand
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.LoreCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LoreCommand to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ClusterTransfer. */
            interface IClusterTransfer {

                /** ClusterTransfer replId */
                replId?: (string|null);

                /** ClusterTransfer user */
                user?: (string|null);

                /** ClusterTransfer newClusterId */
                newClusterId?: (string|null);

                /** ClusterTransfer newContinentId */
                newContinentId?: (string|null);

                /** ClusterTransfer transferId */
                transferId?: (string|null);
            }

            /** Represents a ClusterTransfer. */
            class ClusterTransfer {

                /**
                 * Constructs a new ClusterTransfer.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IClusterTransfer);

                /** ClusterTransfer replId. */
                public replId: string;

                /** ClusterTransfer user. */
                public user: string;

                /** ClusterTransfer newClusterId. */
                public newClusterId?: (string|null);

                /** ClusterTransfer newContinentId. */
                public newContinentId?: (string|null);

                /** ClusterTransfer transferId. */
                public transferId: string;

                /** ClusterTransfer location. */
                public location?: ("newClusterId"|"newContinentId");

                /**
                 * Creates a new ClusterTransfer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ClusterTransfer instance
                 */
                public static create(properties?: replit.goval.api.IClusterTransfer): replit.goval.api.ClusterTransfer;

                /**
                 * Encodes the specified ClusterTransfer message. Does not implicitly {@link replit.goval.api.ClusterTransfer.verify|verify} messages.
                 * @param message ClusterTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.ClusterTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ClusterTransfer message, length delimited. Does not implicitly {@link replit.goval.api.ClusterTransfer.verify|verify} messages.
                 * @param message ClusterTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.ClusterTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ClusterTransfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ClusterTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.ClusterTransfer;

                /**
                 * Decodes a ClusterTransfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ClusterTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.ClusterTransfer;

                /**
                 * Verifies a ClusterTransfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ClusterTransfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ClusterTransfer
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.ClusterTransfer;

                /**
                 * Creates a plain object from a ClusterTransfer message. Also converts values to other types if specified.
                 * @param message ClusterTransfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.ClusterTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ClusterTransfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SoftTakedown. */
            interface ISoftTakedown {

                /** SoftTakedown replId */
                replId?: (string|null);

                /** SoftTakedown softTakedownId */
                softTakedownId?: (string|null);
            }

            /** Represents a SoftTakedown. */
            class SoftTakedown {

                /**
                 * Constructs a new SoftTakedown.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.ISoftTakedown);

                /** SoftTakedown replId. */
                public replId: string;

                /** SoftTakedown softTakedownId. */
                public softTakedownId: string;

                /**
                 * Creates a new SoftTakedown instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SoftTakedown instance
                 */
                public static create(properties?: replit.goval.api.ISoftTakedown): replit.goval.api.SoftTakedown;

                /**
                 * Encodes the specified SoftTakedown message. Does not implicitly {@link replit.goval.api.SoftTakedown.verify|verify} messages.
                 * @param message SoftTakedown message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.SoftTakedown, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SoftTakedown message, length delimited. Does not implicitly {@link replit.goval.api.SoftTakedown.verify|verify} messages.
                 * @param message SoftTakedown message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.SoftTakedown, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SoftTakedown message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SoftTakedown
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.SoftTakedown;

                /**
                 * Decodes a SoftTakedown message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SoftTakedown
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.SoftTakedown;

                /**
                 * Verifies a SoftTakedown message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SoftTakedown message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SoftTakedown
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.SoftTakedown;

                /**
                 * Creates a plain object from a SoftTakedown message. Also converts values to other types if specified.
                 * @param message SoftTakedown
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.SoftTakedown, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SoftTakedown to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GovalCommand. */
            interface IGovalCommand {

                /** GovalCommand updateMetadata */
                updateMetadata?: (replit.goval.api.repl.Metadata|replit.goval.api.repl.IMetadata|null);

                /** GovalCommand partialUpdateMetadata */
                partialUpdateMetadata?: (replit.goval.api.PartialUpdateMetadata|replit.goval.api.IPartialUpdateMetadata|null);

                /** GovalCommand killRepl */
                killRepl?: (replit.goval.api.KillRepl|replit.goval.api.IKillRepl|null);

                /** GovalCommand updateSourceRepl */
                updateSourceRepl?: (replit.goval.api.UpdateSourceRepl|replit.goval.api.IUpdateSourceRepl|null);

                /** GovalCommand updateReplFlags */
                updateReplFlags?: (replit.goval.api.UpdateReplFlags|replit.goval.api.IUpdateReplFlags|null);
            }

            /** Represents a GovalCommand. */
            class GovalCommand {

                /**
                 * Constructs a new GovalCommand.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IGovalCommand);

                /** GovalCommand updateMetadata. */
                public updateMetadata?: (replit.goval.api.repl.Metadata|null);

                /** GovalCommand partialUpdateMetadata. */
                public partialUpdateMetadata?: (replit.goval.api.PartialUpdateMetadata|null);

                /** GovalCommand killRepl. */
                public killRepl?: (replit.goval.api.KillRepl|null);

                /** GovalCommand updateSourceRepl. */
                public updateSourceRepl?: (replit.goval.api.UpdateSourceRepl|null);

                /** GovalCommand updateReplFlags. */
                public updateReplFlags?: (replit.goval.api.UpdateReplFlags|null);

                /** GovalCommand command. */
                public command?: ("updateMetadata"|"partialUpdateMetadata"|"killRepl"|"updateSourceRepl"|"updateReplFlags");

                /**
                 * Creates a new GovalCommand instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GovalCommand instance
                 */
                public static create(properties?: replit.goval.api.IGovalCommand): replit.goval.api.GovalCommand;

                /**
                 * Encodes the specified GovalCommand message. Does not implicitly {@link replit.goval.api.GovalCommand.verify|verify} messages.
                 * @param message GovalCommand message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.GovalCommand, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GovalCommand message, length delimited. Does not implicitly {@link replit.goval.api.GovalCommand.verify|verify} messages.
                 * @param message GovalCommand message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.GovalCommand, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GovalCommand message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GovalCommand
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.GovalCommand;

                /**
                 * Decodes a GovalCommand message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GovalCommand
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.GovalCommand;

                /**
                 * Verifies a GovalCommand message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GovalCommand message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GovalCommand
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.GovalCommand;

                /**
                 * Creates a plain object from a GovalCommand message. Also converts values to other types if specified.
                 * @param message GovalCommand
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.GovalCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GovalCommand to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PartialUpdateMetadata. */
            interface IPartialUpdateMetadata {

                /** PartialUpdateMetadata fieldMask */
                fieldMask?: (google.protobuf.FieldMask|google.protobuf.IFieldMask|null);

                /** PartialUpdateMetadata updateMetadata */
                updateMetadata?: (replit.goval.api.repl.Metadata|replit.goval.api.repl.IMetadata|null);
            }

            /** Represents a PartialUpdateMetadata. */
            class PartialUpdateMetadata {

                /**
                 * Constructs a new PartialUpdateMetadata.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IPartialUpdateMetadata);

                /** PartialUpdateMetadata fieldMask. */
                public fieldMask?: (google.protobuf.FieldMask|null);

                /** PartialUpdateMetadata updateMetadata. */
                public updateMetadata?: (replit.goval.api.repl.Metadata|null);

                /**
                 * Creates a new PartialUpdateMetadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PartialUpdateMetadata instance
                 */
                public static create(properties?: replit.goval.api.IPartialUpdateMetadata): replit.goval.api.PartialUpdateMetadata;

                /**
                 * Encodes the specified PartialUpdateMetadata message. Does not implicitly {@link replit.goval.api.PartialUpdateMetadata.verify|verify} messages.
                 * @param message PartialUpdateMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.PartialUpdateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PartialUpdateMetadata message, length delimited. Does not implicitly {@link replit.goval.api.PartialUpdateMetadata.verify|verify} messages.
                 * @param message PartialUpdateMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.PartialUpdateMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PartialUpdateMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PartialUpdateMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.PartialUpdateMetadata;

                /**
                 * Decodes a PartialUpdateMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PartialUpdateMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.PartialUpdateMetadata;

                /**
                 * Verifies a PartialUpdateMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PartialUpdateMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PartialUpdateMetadata
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.PartialUpdateMetadata;

                /**
                 * Creates a plain object from a PartialUpdateMetadata message. Also converts values to other types if specified.
                 * @param message PartialUpdateMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.PartialUpdateMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PartialUpdateMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MultiGovalCommand. */
            interface IMultiGovalCommand {

                /** MultiGovalCommand replId */
                replId?: (string|null);

                /** MultiGovalCommand govalCommands */
                govalCommands?: ((replit.goval.api.GovalCommand|replit.goval.api.IGovalCommand)[]|null);
            }

            /** Represents a MultiGovalCommand. */
            class MultiGovalCommand {

                /**
                 * Constructs a new MultiGovalCommand.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IMultiGovalCommand);

                /** MultiGovalCommand replId. */
                public replId: string;

                /** MultiGovalCommand govalCommands. */
                public govalCommands: replit.goval.api.GovalCommand[];

                /**
                 * Creates a new MultiGovalCommand instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MultiGovalCommand instance
                 */
                public static create(properties?: replit.goval.api.IMultiGovalCommand): replit.goval.api.MultiGovalCommand;

                /**
                 * Encodes the specified MultiGovalCommand message. Does not implicitly {@link replit.goval.api.MultiGovalCommand.verify|verify} messages.
                 * @param message MultiGovalCommand message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.MultiGovalCommand, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MultiGovalCommand message, length delimited. Does not implicitly {@link replit.goval.api.MultiGovalCommand.verify|verify} messages.
                 * @param message MultiGovalCommand message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.MultiGovalCommand, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MultiGovalCommand message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MultiGovalCommand
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.MultiGovalCommand;

                /**
                 * Decodes a MultiGovalCommand message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MultiGovalCommand
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.MultiGovalCommand;

                /**
                 * Verifies a MultiGovalCommand message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MultiGovalCommand message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MultiGovalCommand
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.MultiGovalCommand;

                /**
                 * Creates a plain object from a MultiGovalCommand message. Also converts values to other types if specified.
                 * @param message MultiGovalCommand
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.MultiGovalCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MultiGovalCommand to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a KillRepl. */
            interface IKillRepl {

                /** KillRepl replId */
                replId?: (string|null);
            }

            /** Represents a KillRepl. */
            class KillRepl {

                /**
                 * Constructs a new KillRepl.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IKillRepl);

                /** KillRepl replId. */
                public replId: string;

                /**
                 * Creates a new KillRepl instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KillRepl instance
                 */
                public static create(properties?: replit.goval.api.IKillRepl): replit.goval.api.KillRepl;

                /**
                 * Encodes the specified KillRepl message. Does not implicitly {@link replit.goval.api.KillRepl.verify|verify} messages.
                 * @param message KillRepl message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.KillRepl, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KillRepl message, length delimited. Does not implicitly {@link replit.goval.api.KillRepl.verify|verify} messages.
                 * @param message KillRepl message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.KillRepl, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KillRepl message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KillRepl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.KillRepl;

                /**
                 * Decodes a KillRepl message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KillRepl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.KillRepl;

                /**
                 * Verifies a KillRepl message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KillRepl message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KillRepl
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.KillRepl;

                /**
                 * Creates a plain object from a KillRepl message. Also converts values to other types if specified.
                 * @param message KillRepl
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.KillRepl, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KillRepl to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Restore. */
            interface IRestore {

                /** Restore replId */
                replId?: (string|null);

                /** Restore restoreReplId */
                restoreReplId?: (string|null);
            }

            /** Represents a Restore. */
            class Restore {

                /**
                 * Constructs a new Restore.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IRestore);

                /** Restore replId. */
                public replId: string;

                /** Restore restoreReplId. */
                public restoreReplId: string;

                /**
                 * Creates a new Restore instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Restore instance
                 */
                public static create(properties?: replit.goval.api.IRestore): replit.goval.api.Restore;

                /**
                 * Encodes the specified Restore message. Does not implicitly {@link replit.goval.api.Restore.verify|verify} messages.
                 * @param message Restore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.Restore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Restore message, length delimited. Does not implicitly {@link replit.goval.api.Restore.verify|verify} messages.
                 * @param message Restore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.Restore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Restore message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Restore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.Restore;

                /**
                 * Decodes a Restore message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Restore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.Restore;

                /**
                 * Verifies a Restore message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Restore message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Restore
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.Restore;

                /**
                 * Creates a plain object from a Restore message. Also converts values to other types if specified.
                 * @param message Restore
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.Restore, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Restore to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateSourceRepl. */
            interface IUpdateSourceRepl {

                /** UpdateSourceRepl replId */
                replId?: (string|null);

                /** UpdateSourceRepl sourceReplId */
                sourceReplId?: (string|null);
            }

            /** Represents an UpdateSourceRepl. */
            class UpdateSourceRepl {

                /**
                 * Constructs a new UpdateSourceRepl.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IUpdateSourceRepl);

                /** UpdateSourceRepl replId. */
                public replId: string;

                /** UpdateSourceRepl sourceReplId. */
                public sourceReplId: string;

                /**
                 * Creates a new UpdateSourceRepl instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateSourceRepl instance
                 */
                public static create(properties?: replit.goval.api.IUpdateSourceRepl): replit.goval.api.UpdateSourceRepl;

                /**
                 * Encodes the specified UpdateSourceRepl message. Does not implicitly {@link replit.goval.api.UpdateSourceRepl.verify|verify} messages.
                 * @param message UpdateSourceRepl message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.UpdateSourceRepl, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateSourceRepl message, length delimited. Does not implicitly {@link replit.goval.api.UpdateSourceRepl.verify|verify} messages.
                 * @param message UpdateSourceRepl message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.UpdateSourceRepl, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateSourceRepl message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateSourceRepl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.UpdateSourceRepl;

                /**
                 * Decodes an UpdateSourceRepl message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateSourceRepl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.UpdateSourceRepl;

                /**
                 * Verifies an UpdateSourceRepl message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateSourceRepl message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateSourceRepl
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.UpdateSourceRepl;

                /**
                 * Creates a plain object from an UpdateSourceRepl message. Also converts values to other types if specified.
                 * @param message UpdateSourceRepl
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.UpdateSourceRepl, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateSourceRepl to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateReplFlags. */
            interface IUpdateReplFlags {

                /** UpdateReplFlags replId */
                replId?: (string|null);

                /** UpdateReplFlags flags */
                flags?: (string[]|null);
            }

            /** Represents an UpdateReplFlags. */
            class UpdateReplFlags {

                /**
                 * Constructs a new UpdateReplFlags.
                 * @param [properties] Properties to set
                 */
                private constructor(properties?: replit.goval.api.IUpdateReplFlags);

                /** UpdateReplFlags replId. */
                public replId: string;

                /** UpdateReplFlags flags. */
                public flags: string[];

                /**
                 * Creates a new UpdateReplFlags instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateReplFlags instance
                 */
                public static create(properties?: replit.goval.api.IUpdateReplFlags): replit.goval.api.UpdateReplFlags;

                /**
                 * Encodes the specified UpdateReplFlags message. Does not implicitly {@link replit.goval.api.UpdateReplFlags.verify|verify} messages.
                 * @param message UpdateReplFlags message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: replit.goval.api.UpdateReplFlags, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateReplFlags message, length delimited. Does not implicitly {@link replit.goval.api.UpdateReplFlags.verify|verify} messages.
                 * @param message UpdateReplFlags message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: replit.goval.api.UpdateReplFlags, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateReplFlags message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateReplFlags
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.UpdateReplFlags;

                /**
                 * Decodes an UpdateReplFlags message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateReplFlags
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.UpdateReplFlags;

                /**
                 * Verifies an UpdateReplFlags message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateReplFlags message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateReplFlags
                 */
                public static fromObject(object: { [k: string]: any }): replit.goval.api.UpdateReplFlags;

                /**
                 * Creates a plain object from an UpdateReplFlags message. Also converts values to other types if specified.
                 * @param message UpdateReplFlags
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: replit.goval.api.UpdateReplFlags, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateReplFlags to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Namespace features. */
            namespace features {

                /** Properties of a Gpu. */
                interface IGpu {
                }

                /** Represents a Gpu. */
                class Gpu {

                    /**
                     * Constructs a new Gpu.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.features.IGpu);

                    /**
                     * Creates a new Gpu instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Gpu instance
                     */
                    public static create(properties?: replit.goval.api.features.IGpu): replit.goval.api.features.Gpu;

                    /**
                     * Encodes the specified Gpu message. Does not implicitly {@link replit.goval.api.features.Gpu.verify|verify} messages.
                     * @param message Gpu message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.features.Gpu, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Gpu message, length delimited. Does not implicitly {@link replit.goval.api.features.Gpu.verify|verify} messages.
                     * @param message Gpu message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.features.Gpu, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Gpu message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Gpu
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.features.Gpu;

                    /**
                     * Decodes a Gpu message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Gpu
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.features.Gpu;

                    /**
                     * Verifies a Gpu message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Gpu message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Gpu
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.features.Gpu;

                    /**
                     * Creates a plain object from a Gpu message. Also converts values to other types if specified.
                     * @param message Gpu
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.features.Gpu, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Gpu to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Boosted. */
                interface IBoosted {
                }

                /** Represents a Boosted. */
                class Boosted {

                    /**
                     * Constructs a new Boosted.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.features.IBoosted);

                    /**
                     * Creates a new Boosted instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Boosted instance
                     */
                    public static create(properties?: replit.goval.api.features.IBoosted): replit.goval.api.features.Boosted;

                    /**
                     * Encodes the specified Boosted message. Does not implicitly {@link replit.goval.api.features.Boosted.verify|verify} messages.
                     * @param message Boosted message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.features.Boosted, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Boosted message, length delimited. Does not implicitly {@link replit.goval.api.features.Boosted.verify|verify} messages.
                     * @param message Boosted message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.features.Boosted, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Boosted message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Boosted
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.features.Boosted;

                    /**
                     * Decodes a Boosted message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Boosted
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.features.Boosted;

                    /**
                     * Verifies a Boosted message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Boosted message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Boosted
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.features.Boosted;

                    /**
                     * Creates a plain object from a Boosted message. Also converts values to other types if specified.
                     * @param message Boosted
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.features.Boosted, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Boosted to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Feature. */
                interface IFeature {

                    /** Feature gpu */
                    gpu?: (replit.goval.api.features.Gpu|replit.goval.api.features.IGpu|null);

                    /** Feature boosted */
                    boosted?: (replit.goval.api.features.Boosted|replit.goval.api.features.IBoosted|null);

                    /** Feature required */
                    required?: (boolean|null);
                }

                /** Represents a Feature. */
                class Feature {

                    /**
                     * Constructs a new Feature.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.features.IFeature);

                    /** Feature gpu. */
                    public gpu?: (replit.goval.api.features.Gpu|null);

                    /** Feature boosted. */
                    public boosted?: (replit.goval.api.features.Boosted|null);

                    /** Feature required. */
                    public required: boolean;

                    /** Feature feature. */
                    public feature?: ("gpu"|"boosted");

                    /**
                     * Creates a new Feature instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Feature instance
                     */
                    public static create(properties?: replit.goval.api.features.IFeature): replit.goval.api.features.Feature;

                    /**
                     * Encodes the specified Feature message. Does not implicitly {@link replit.goval.api.features.Feature.verify|verify} messages.
                     * @param message Feature message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.features.Feature, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Feature message, length delimited. Does not implicitly {@link replit.goval.api.features.Feature.verify|verify} messages.
                     * @param message Feature message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.features.Feature, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Feature message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Feature
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.features.Feature;

                    /**
                     * Decodes a Feature message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Feature
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.features.Feature;

                    /**
                     * Verifies a Feature message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Feature
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.features.Feature;

                    /**
                     * Creates a plain object from a Feature message. Also converts values to other types if specified.
                     * @param message Feature
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.features.Feature, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Feature to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Namespace repl. */
            namespace repl {

                /** Properties of a Buckets. */
                interface IBuckets {

                    /** Buckets snapshots */
                    snapshots?: (string|null);

                    /** Buckets metadata */
                    metadata?: (string|null);
                }

                /** Represents a Buckets. */
                class Buckets {

                    /**
                     * Constructs a new Buckets.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.repl.IBuckets);

                    /** Buckets snapshots. */
                    public snapshots: string;

                    /** Buckets metadata. */
                    public metadata: string;

                    /**
                     * Creates a new Buckets instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Buckets instance
                     */
                    public static create(properties?: replit.goval.api.repl.IBuckets): replit.goval.api.repl.Buckets;

                    /**
                     * Encodes the specified Buckets message. Does not implicitly {@link replit.goval.api.repl.Buckets.verify|verify} messages.
                     * @param message Buckets message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.repl.Buckets, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Buckets message, length delimited. Does not implicitly {@link replit.goval.api.repl.Buckets.verify|verify} messages.
                     * @param message Buckets message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.repl.Buckets, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Buckets message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Buckets
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.repl.Buckets;

                    /**
                     * Decodes a Buckets message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Buckets
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.repl.Buckets;

                    /**
                     * Verifies a Buckets message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Buckets message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Buckets
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.repl.Buckets;

                    /**
                     * Creates a plain object from a Buckets message. Also converts values to other types if specified.
                     * @param message Buckets
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.repl.Buckets, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Buckets to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Repl. */
                interface IRepl {

                    /** Repl id */
                    id?: (string|null);

                    /** Repl language */
                    language?: (string|null);

                    /** Repl bucket */
                    bucket?: (string|null);

                    /** Repl slug */
                    slug?: (string|null);

                    /** Repl user */
                    user?: (string|null);

                    /** Repl sourceRepl */
                    sourceRepl?: (string|null);

                    /** Repl database */
                    database?: (string|null);

                    /** Repl buckets */
                    buckets?: (replit.goval.api.repl.Buckets|replit.goval.api.repl.IBuckets|null);
                }

                /** Represents a Repl. */
                class Repl {

                    /**
                     * Constructs a new Repl.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.repl.IRepl);

                    /** Repl id. */
                    public id: string;

                    /** Repl language. */
                    public language: string;

                    /** Repl bucket. */
                    public bucket: string;

                    /** Repl slug. */
                    public slug: string;

                    /** Repl user. */
                    public user: string;

                    /** Repl sourceRepl. */
                    public sourceRepl: string;

                    /** Repl database. */
                    public database: string;

                    /** Repl buckets. */
                    public buckets?: (replit.goval.api.repl.Buckets|null);

                    /**
                     * Creates a new Repl instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Repl instance
                     */
                    public static create(properties?: replit.goval.api.repl.IRepl): replit.goval.api.repl.Repl;

                    /**
                     * Encodes the specified Repl message. Does not implicitly {@link replit.goval.api.repl.Repl.verify|verify} messages.
                     * @param message Repl message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.repl.Repl, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Repl message, length delimited. Does not implicitly {@link replit.goval.api.repl.Repl.verify|verify} messages.
                     * @param message Repl message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.repl.Repl, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Repl message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Repl
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.repl.Repl;

                    /**
                     * Decodes a Repl message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Repl
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.repl.Repl;

                    /**
                     * Verifies a Repl message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Repl message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Repl
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.repl.Repl;

                    /**
                     * Creates a plain object from a Repl message. Also converts values to other types if specified.
                     * @param message Repl
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.repl.Repl, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Repl to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ResourceLimits. */
                interface IResourceLimits {

                    /** ResourceLimits net */
                    net?: (boolean|null);

                    /** ResourceLimits memory */
                    memory?: (number|null);

                    /** ResourceLimits threads */
                    threads?: (number|null);

                    /** ResourceLimits shares */
                    shares?: (number|null);

                    /** ResourceLimits disk */
                    disk?: (number|null);

                    /** ResourceLimits cache */
                    cache?: (replit.goval.api.repl.ResourceLimits.Cachability|null);

                    /** ResourceLimits restrictNetwork */
                    restrictNetwork?: (boolean|null);

                    /** ResourceLimits preventWakeup */
                    preventWakeup?: (boolean|null);
                }

                /** Represents a ResourceLimits. */
                class ResourceLimits {

                    /**
                     * Constructs a new ResourceLimits.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.repl.IResourceLimits);

                    /** ResourceLimits net. */
                    public net: boolean;

                    /** ResourceLimits memory. */
                    public memory: number;

                    /** ResourceLimits threads. */
                    public threads: number;

                    /** ResourceLimits shares. */
                    public shares: number;

                    /** ResourceLimits disk. */
                    public disk: number;

                    /** ResourceLimits cache. */
                    public cache: replit.goval.api.repl.ResourceLimits.Cachability;

                    /** ResourceLimits restrictNetwork. */
                    public restrictNetwork: boolean;

                    /** ResourceLimits preventWakeup. */
                    public preventWakeup: boolean;

                    /**
                     * Creates a new ResourceLimits instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns ResourceLimits instance
                     */
                    public static create(properties?: replit.goval.api.repl.IResourceLimits): replit.goval.api.repl.ResourceLimits;

                    /**
                     * Encodes the specified ResourceLimits message. Does not implicitly {@link replit.goval.api.repl.ResourceLimits.verify|verify} messages.
                     * @param message ResourceLimits message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.repl.ResourceLimits, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ResourceLimits message, length delimited. Does not implicitly {@link replit.goval.api.repl.ResourceLimits.verify|verify} messages.
                     * @param message ResourceLimits message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.repl.ResourceLimits, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ResourceLimits message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ResourceLimits
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.repl.ResourceLimits;

                    /**
                     * Decodes a ResourceLimits message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ResourceLimits
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.repl.ResourceLimits;

                    /**
                     * Verifies a ResourceLimits message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ResourceLimits message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ResourceLimits
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.repl.ResourceLimits;

                    /**
                     * Creates a plain object from a ResourceLimits message. Also converts values to other types if specified.
                     * @param message ResourceLimits
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.repl.ResourceLimits, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ResourceLimits to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                namespace ResourceLimits {

                    /** Cachability enum. */
                    enum Cachability {
                        NONE = 0,
                        USER = 1,
                        REPL = 2
                    }
                }

                /** Properties of a Permissions. */
                interface IPermissions {

                    /** Permissions toggleAlwaysOn */
                    toggleAlwaysOn?: (boolean|null);
                }

                /** Represents a Permissions. */
                class Permissions {

                    /**
                     * Constructs a new Permissions.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.repl.IPermissions);

                    /** Permissions toggleAlwaysOn. */
                    public toggleAlwaysOn: boolean;

                    /**
                     * Creates a new Permissions instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Permissions instance
                     */
                    public static create(properties?: replit.goval.api.repl.IPermissions): replit.goval.api.repl.Permissions;

                    /**
                     * Encodes the specified Permissions message. Does not implicitly {@link replit.goval.api.repl.Permissions.verify|verify} messages.
                     * @param message Permissions message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.repl.Permissions, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Permissions message, length delimited. Does not implicitly {@link replit.goval.api.repl.Permissions.verify|verify} messages.
                     * @param message Permissions message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.repl.Permissions, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Permissions message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Permissions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.repl.Permissions;

                    /**
                     * Decodes a Permissions message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Permissions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.repl.Permissions;

                    /**
                     * Verifies a Permissions message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Permissions message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Permissions
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.repl.Permissions;

                    /**
                     * Creates a plain object from a Permissions message. Also converts values to other types if specified.
                     * @param message Permissions
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.repl.Permissions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Permissions to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Persistence enum. */
                enum Persistence {
                    PERSISTENT = 0,
                    EPHEMERAL = 1,
                    NONE = 2,
                    READ_ONLY = 3
                }

                /** Properties of a Metadata. */
                interface IMetadata {

                    /** Metadata repl */
                    repl?: (replit.goval.api.repl.Repl|replit.goval.api.repl.IRepl|null);

                    /** Metadata resourceLimits */
                    resourceLimits?: (replit.goval.api.repl.ResourceLimits|replit.goval.api.repl.IResourceLimits|null);

                    /** Metadata interactiveResourceLimits */
                    interactiveResourceLimits?: (replit.goval.api.repl.ResourceLimits|replit.goval.api.repl.IResourceLimits|null);

                    /** Metadata persistence */
                    persistence?: (replit.goval.api.repl.Persistence|null);

                    /** Metadata flags */
                    flags?: (string[]|null);

                    /** Metadata permissions */
                    permissions?: (replit.goval.api.repl.Permissions|replit.goval.api.repl.IPermissions|null);

                    /** Metadata features */
                    features?: ((replit.goval.api.features.Feature|replit.goval.api.features.IFeature)[]|null);
                }

                /** Represents a Metadata. */
                class Metadata {

                    /**
                     * Constructs a new Metadata.
                     * @param [properties] Properties to set
                     */
                    private constructor(properties?: replit.goval.api.repl.IMetadata);

                    /** Metadata repl. */
                    public repl?: (replit.goval.api.repl.Repl|null);

                    /** Metadata resourceLimits. */
                    public resourceLimits?: (replit.goval.api.repl.ResourceLimits|null);

                    /** Metadata interactiveResourceLimits. */
                    public interactiveResourceLimits?: (replit.goval.api.repl.ResourceLimits|null);

                    /** Metadata persistence. */
                    public persistence: replit.goval.api.repl.Persistence;

                    /** Metadata flags. */
                    public flags: string[];

                    /** Metadata permissions. */
                    public permissions?: (replit.goval.api.repl.Permissions|null);

                    /** Metadata features. */
                    public features: replit.goval.api.features.Feature[];

                    /**
                     * Creates a new Metadata instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Metadata instance
                     */
                    public static create(properties?: replit.goval.api.repl.IMetadata): replit.goval.api.repl.Metadata;

                    /**
                     * Encodes the specified Metadata message. Does not implicitly {@link replit.goval.api.repl.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: replit.goval.api.repl.Metadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Metadata message, length delimited. Does not implicitly {@link replit.goval.api.repl.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: replit.goval.api.repl.Metadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replit.goval.api.repl.Metadata;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replit.goval.api.repl.Metadata;

                    /**
                     * Verifies a Metadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Metadata
                     */
                    public static fromObject(object: { [k: string]: any }): replit.goval.api.repl.Metadata;

                    /**
                     * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                     * @param message Metadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: replit.goval.api.repl.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Metadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (number|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            private constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: number;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Creates a new Timestamp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Timestamp instance
             */
            public static create(properties?: google.protobuf.ITimestamp): google.protobuf.Timestamp;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.Timestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.Timestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Struct. */
        interface IStruct {

            /** Struct fields */
            fields?: ({ [k: string]: (google.protobuf.Value|google.protobuf.IValue) }|null);
        }

        /** Represents a Struct. */
        class Struct {

            /**
             * Constructs a new Struct.
             * @param [properties] Properties to set
             */
            private constructor(properties?: google.protobuf.IStruct);

            /** Struct fields. */
            public fields: { [k: string]: google.protobuf.Value };

            /**
             * Creates a new Struct instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Struct instance
             */
            public static create(properties?: google.protobuf.IStruct): google.protobuf.Struct;

            /**
             * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
             * @param message Struct message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.Struct, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
             * @param message Struct message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.Struct, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Struct message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Struct
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Struct;

            /**
             * Decodes a Struct message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Struct
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Struct;

            /**
             * Verifies a Struct message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Struct message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Struct
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Struct;

            /**
             * Creates a plain object from a Struct message. Also converts values to other types if specified.
             * @param message Struct
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Struct, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Struct to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Value. */
        interface IValue {

            /** Value nullValue */
            nullValue?: (google.protobuf.NullValue|null);

            /** Value numberValue */
            numberValue?: (number|null);

            /** Value stringValue */
            stringValue?: (string|null);

            /** Value boolValue */
            boolValue?: (boolean|null);

            /** Value structValue */
            structValue?: (google.protobuf.Struct|google.protobuf.IStruct|null);

            /** Value listValue */
            listValue?: (google.protobuf.ListValue|google.protobuf.IListValue|null);
        }

        /** Represents a Value. */
        class Value {

            /**
             * Constructs a new Value.
             * @param [properties] Properties to set
             */
            private constructor(properties?: google.protobuf.IValue);

            /** Value nullValue. */
            public nullValue?: (google.protobuf.NullValue|null);

            /** Value numberValue. */
            public numberValue?: (number|null);

            /** Value stringValue. */
            public stringValue?: (string|null);

            /** Value boolValue. */
            public boolValue?: (boolean|null);

            /** Value structValue. */
            public structValue?: (google.protobuf.Struct|null);

            /** Value listValue. */
            public listValue?: (google.protobuf.ListValue|null);

            /** Value kind. */
            public kind?: ("nullValue"|"numberValue"|"stringValue"|"boolValue"|"structValue"|"listValue");

            /**
             * Creates a new Value instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Value instance
             */
            public static create(properties?: google.protobuf.IValue): google.protobuf.Value;

            /**
             * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
             * @param message Value message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.Value, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
             * @param message Value message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.Value, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Value message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Value;

            /**
             * Decodes a Value message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Value;

            /**
             * Verifies a Value message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Value message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Value
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Value;

            /**
             * Creates a plain object from a Value message. Also converts values to other types if specified.
             * @param message Value
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Value, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Value to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** NullValue enum. */
        enum NullValue {
            NULL_VALUE = 0
        }

        /** Properties of a ListValue. */
        interface IListValue {

            /** ListValue values */
            values?: ((google.protobuf.Value|google.protobuf.IValue)[]|null);
        }

        /** Represents a ListValue. */
        class ListValue {

            /**
             * Constructs a new ListValue.
             * @param [properties] Properties to set
             */
            private constructor(properties?: google.protobuf.IListValue);

            /** ListValue values. */
            public values: google.protobuf.Value[];

            /**
             * Creates a new ListValue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ListValue instance
             */
            public static create(properties?: google.protobuf.IListValue): google.protobuf.ListValue;

            /**
             * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
             * @param message ListValue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ListValue, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
             * @param message ListValue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ListValue, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ListValue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ListValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ListValue;

            /**
             * Decodes a ListValue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ListValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ListValue;

            /**
             * Verifies a ListValue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ListValue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ListValue
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ListValue;

            /**
             * Creates a plain object from a ListValue message. Also converts values to other types if specified.
             * @param message ListValue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ListValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ListValue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldMask. */
        interface IFieldMask {

            /** FieldMask paths */
            paths?: (string[]|null);
        }

        /** Represents a FieldMask. */
        class FieldMask {

            /**
             * Constructs a new FieldMask.
             * @param [properties] Properties to set
             */
            private constructor(properties?: google.protobuf.IFieldMask);

            /** FieldMask paths. */
            public paths: string[];

            /**
             * Creates a new FieldMask instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FieldMask instance
             */
            public static create(properties?: google.protobuf.IFieldMask): google.protobuf.FieldMask;

            /**
             * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
             * @param message FieldMask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.FieldMask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
             * @param message FieldMask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.FieldMask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldMask message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldMask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldMask;

            /**
             * Decodes a FieldMask message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldMask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldMask;

            /**
             * Verifies a FieldMask message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldMask
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldMask;

            /**
             * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
             * @param message FieldMask
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldMask, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldMask to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
import api = replit.goval.api; export { api };
